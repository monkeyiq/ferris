/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPERL
#define SWIG_CASTRANK_MODE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif


/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.
  
  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The SWIG conversion methods, as ConvertPtr, return an integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/* 
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13



#ifdef __cplusplus
/* Needed on some windows machines---since MS plays funny games with the header files under C++ */
#include <math.h>
#include <stdlib.h>
extern "C" {
#endif
#include "EXTERN.h"
#include "perl.h"
#include "XSUB.h"

/* Add in functionality missing in older versions of Perl. Much of this is based on Devel-PPPort on cpan. */

/* Add PERL_REVISION, PERL_VERSION, PERL_SUBVERSION if missing */
#ifndef PERL_REVISION
#  if !defined(__PATCHLEVEL_H_INCLUDED__) && !(defined(PATCHLEVEL) && defined(SUBVERSION))
#    define PERL_PATCHLEVEL_H_IMPLICIT
#    include <patchlevel.h>
#  endif
#  if !(defined(PERL_VERSION) || (defined(SUBVERSION) && defined(PATCHLEVEL)))
#    include <could_not_find_Perl_patchlevel.h>
#  endif
#  ifndef PERL_REVISION
#    define PERL_REVISION       (5)
#    define PERL_VERSION        PATCHLEVEL
#    define PERL_SUBVERSION     SUBVERSION
#  endif
#endif

#if defined(WIN32) && defined(PERL_OBJECT) && !defined(PerlIO_exportFILE)
#define PerlIO_exportFILE(fh,fl) (FILE*)(fh)
#endif

#ifndef SvIOK_UV
# define SvIOK_UV(sv)       (SvIOK(sv) && (SvUVX(sv) == SvIVX(sv)))
#endif

#ifndef SvUOK
# define SvUOK(sv)           SvIOK_UV(sv)
#endif

#if ((PERL_VERSION < 4) || ((PERL_VERSION == 4) && (PERL_SUBVERSION <= 5)))
#  define PL_sv_undef               sv_undef
#  define PL_na	                    na
#  define PL_errgv                  errgv
#  define PL_sv_no                  sv_no
#  define PL_sv_yes                 sv_yes
#  define PL_markstack_ptr          markstack_ptr
#endif

#ifndef IVSIZE
#  ifdef LONGSIZE
#    define IVSIZE LONGSIZE
#  else
#    define IVSIZE 4 /* A bold guess, but the best we can make. */
#  endif
#endif

#ifndef INT2PTR
#  if (IVSIZE == PTRSIZE) && (UVSIZE == PTRSIZE)
#    define PTRV                  UV
#    define INT2PTR(any,d)        (any)(d)
#  else
#    if PTRSIZE == LONGSIZE
#      define PTRV                unsigned long
#    else
#      define PTRV                unsigned
#    endif
#    define INT2PTR(any,d)        (any)(PTRV)(d)
#  endif

#  define NUM2PTR(any,d)  (any)(PTRV)(d)
#  define PTR2IV(p)       INT2PTR(IV,p)
#  define PTR2UV(p)       INT2PTR(UV,p)
#  define PTR2NV(p)       NUM2PTR(NV,p)

#  if PTRSIZE == LONGSIZE
#    define PTR2ul(p)     (unsigned long)(p)
#  else
#    define PTR2ul(p)     INT2PTR(unsigned long,p)
#  endif
#endif /* !INT2PTR */

#ifndef SvPV_nolen
# define SvPV_nolen(x) SvPV(x,PL_na)
#endif

#ifndef get_sv
#  define get_sv perl_get_sv
#endif

#ifndef ERRSV
#  define ERRSV get_sv("@",FALSE)
#endif

#ifndef pTHX_
#define pTHX_
#endif   

#include <string.h>
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGINTERN const char*
SWIG_Perl_ErrorType(int code) {
  const char* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = "MemoryError";
    break;
  case SWIG_IOError:
    type = "IOError";
    break;
  case SWIG_RuntimeError:
    type = "RuntimeError";
    break;
  case SWIG_IndexError:
    type = "IndexError";
    break;
  case SWIG_TypeError:
    type = "TypeError";
    break;
  case SWIG_DivisionByZero:
    type = "ZeroDivisionError";
    break;
  case SWIG_OverflowError:
    type = "OverflowError";
    break;
  case SWIG_SyntaxError:
    type = "SyntaxError";
    break;
  case SWIG_ValueError:
    type = "ValueError";
    break;
  case SWIG_SystemError:
    type = "SystemError";
    break;
  case SWIG_AttributeError:
    type = "AttributeError";
    break;
  default:
    type = "RuntimeError";
  }
  return type;
}




/* -----------------------------------------------------------------------------
 * perlrun.swg
 *
 * This file contains the runtime support for Perl modules
 * and includes code for managing global variables and pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

#ifdef PERL_OBJECT
#define SWIG_PERL_OBJECT_DECL CPerlObj *SWIGUNUSEDPARM(pPerl),
#define SWIG_PERL_OBJECT_CALL pPerl,
#else
#define SWIG_PERL_OBJECT_DECL
#define SWIG_PERL_OBJECT_CALL
#endif

/* Common SWIG API */

/* for raw pointers */
#define SWIG_ConvertPtr(obj, pp, type, flags)           SWIG_Perl_ConvertPtr(SWIG_PERL_OBJECT_CALL obj, pp, type, flags)
#define SWIG_ConvertPtrAndOwn(obj, pp, type, flags,own) SWIG_Perl_ConvertPtrAndOwn(SWIG_PERL_OBJECT_CALL obj, pp, type, flags, own)
#define SWIG_NewPointerObj(p, type, flags)              SWIG_Perl_NewPointerObj(SWIG_PERL_OBJECT_CALL p, type, flags)

/* for raw packed data */
#define SWIG_ConvertPacked(obj, p, s, type)             SWIG_Perl_ConvertPacked(SWIG_PERL_OBJECT_CALL obj, p, s, type)
#define SWIG_NewPackedObj(p, s, type)	                SWIG_Perl_NewPackedObj(SWIG_PERL_OBJECT_CALL p, s, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_ConvertPtr(obj, pptr, type, 0)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_NewPointerObj(ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Perl_GetModule()
#define SWIG_SetModule(clientdata, pointer)             SWIG_Perl_SetModule(pointer)


/* Error manipulation */

#define SWIG_ErrorType(code)                            SWIG_Perl_ErrorType(code)               
#define SWIG_Error(code, msg)            		sv_setpvf(GvSV(PL_errgv),"%s %s\n", SWIG_ErrorType(code), msg)
#define SWIG_fail                        		goto fail						    

/* Perl-specific SWIG API */

#define SWIG_MakePtr(sv, ptr, type, flags)              SWIG_Perl_MakePtr(SWIG_PERL_OBJECT_CALL sv, ptr, type, flags)
#define SWIG_MakePackedObj(sv, p, s, type)	        SWIG_Perl_MakePackedObj(SWIG_PERL_OBJECT_CALL sv, p, s, type)
#define SWIG_SetError(str)                              SWIG_Error(SWIG_RuntimeError, str)


#define SWIG_PERL_DECL_ARGS_1(arg1)                     (SWIG_PERL_OBJECT_DECL arg1)
#define SWIG_PERL_CALL_ARGS_1(arg1)                     (SWIG_PERL_OBJECT_CALL arg1)
#define SWIG_PERL_DECL_ARGS_2(arg1, arg2)               (SWIG_PERL_OBJECT_DECL arg1, arg2)
#define SWIG_PERL_CALL_ARGS_2(arg1, arg2)               (SWIG_PERL_OBJECT_CALL arg1, arg2)

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

/* For backward compatibility only */
#define SWIG_POINTER_EXCEPTION  0

#ifdef __cplusplus
extern "C" {
#endif

#define SWIG_OWNER   SWIG_POINTER_OWN
#define SWIG_SHADOW  SWIG_OWNER << 1

#define SWIG_MAYBE_PERL_OBJECT SWIG_PERL_OBJECT_DECL

/* SWIG Perl macros */

/* Macro to declare an XS function */
#ifndef XSPROTO
#   define XSPROTO(name) void name(pTHX_ CV* cv)
#endif

/* Macro to call an XS function */
#ifdef PERL_OBJECT 
#  define SWIG_CALLXS(_name) _name(cv,pPerl) 
#else 
#  ifndef MULTIPLICITY 
#    define SWIG_CALLXS(_name) _name(cv) 
#  else 
#    define SWIG_CALLXS(_name) _name(PERL_GET_THX, cv) 
#  endif 
#endif 

#ifdef PERL_OBJECT
#define MAGIC_PPERL  CPerlObj *pPerl = (CPerlObj *) this;

#ifdef __cplusplus
extern "C" {
#endif
typedef int (CPerlObj::*SwigMagicFunc)(SV *, MAGIC *);
#ifdef __cplusplus
}
#endif

#define SWIG_MAGIC(a,b) (SV *a, MAGIC *b)
#define SWIGCLASS_STATIC

#else /* PERL_OBJECT */

#define MAGIC_PPERL
#define SWIGCLASS_STATIC static SWIGUNUSED

#ifndef MULTIPLICITY
#define SWIG_MAGIC(a,b) (SV *a, MAGIC *b)

#ifdef __cplusplus
extern "C" {
#endif
typedef int (*SwigMagicFunc)(SV *, MAGIC *);
#ifdef __cplusplus
}
#endif

#else /* MULTIPLICITY */

#define SWIG_MAGIC(a,b) (struct interpreter *interp, SV *a, MAGIC *b)

#ifdef __cplusplus
extern "C" {
#endif
typedef int (*SwigMagicFunc)(struct interpreter *, SV *, MAGIC *);
#ifdef __cplusplus
}
#endif

#endif /* MULTIPLICITY */
#endif /* PERL_OBJECT */

/* Workaround for bug in perl 5.6.x croak and earlier */
#if (PERL_VERSION < 8)
#  ifdef PERL_OBJECT
#    define SWIG_croak_null() SWIG_Perl_croak_null(pPerl)
static void SWIG_Perl_croak_null(CPerlObj *pPerl)
#  else
static void SWIG_croak_null()
#  endif
{
  SV *err=ERRSV;
#  if (PERL_VERSION < 6)
  croak("%_", err);
#  else
  if (SvOK(err) && !SvROK(err)) croak("%_", err);
  croak(Nullch);
#  endif
}
#else
#  define SWIG_croak_null() croak(Nullch)
#endif


/* 
   Define how strict is the cast between strings and integers/doubles
   when overloading between these types occurs.
   
   The default is making it as strict as possible by using SWIG_AddCast
   when needed.
   
   You can use -DSWIG_PERL_NO_STRICT_STR2NUM at compilation time to
   disable the SWIG_AddCast, making the casting between string and
   numbers less strict.

   In the end, we try to solve the overloading between strings and
   numerical types in the more natural way, but if you can avoid it,
   well, avoid it using %rename, for example.
*/
#ifndef SWIG_PERL_NO_STRICT_STR2NUM
# ifndef SWIG_PERL_STRICT_STR2NUM
#  define SWIG_PERL_STRICT_STR2NUM
# endif
#endif
#ifdef SWIG_PERL_STRICT_STR2NUM
/* string takes precedence */
#define SWIG_Str2NumCast(x) SWIG_AddCast(x)  
#else
/* number takes precedence */
#define SWIG_Str2NumCast(x) x
#endif



#include <stdlib.h>

SWIGRUNTIME const char *
SWIG_Perl_TypeProxyName(const swig_type_info *type) {
  if (!type) return NULL;
  if (type->clientdata != NULL) {
    return (const char*) type->clientdata;
  } 
  else {
    return type->name;
  }
}

/* Identical to SWIG_TypeCheck, except for strcmp comparison */
SWIGRUNTIME swig_cast_info *
SWIG_TypeProxyCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if ( (!iter->type->clientdata && (strcmp(iter->type->name, c) == 0)) ||
            (iter->type->clientdata && (strcmp((char*)iter->type->clientdata, c) == 0)) ) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/* Function for getting a pointer value */

SWIGRUNTIME int
SWIG_Perl_ConvertPtrAndOwn(SWIG_MAYBE_PERL_OBJECT SV *sv, void **ptr, swig_type_info *_t, int flags, int *own) {
  swig_cast_info *tc;
  void *voidptr = (void *)0;
  SV *tsv = 0;

  if (own)
    *own = 0;

  /* If magical, apply more magic */
  if (SvGMAGICAL(sv))
    mg_get(sv);

  /* Check to see if this is an object */
  if (sv_isobject(sv)) {
    IV tmp = 0;
    tsv = (SV*) SvRV(sv);
    if ((SvTYPE(tsv) == SVt_PVHV)) {
      MAGIC *mg;
      if (SvMAGICAL(tsv)) {
        mg = mg_find(tsv,'P');
        if (mg) {
          sv = mg->mg_obj;
          if (sv_isobject(sv)) {
	    tsv = (SV*)SvRV(sv);
            tmp = SvIV(tsv);
          }
        }
      } else {
        return SWIG_ERROR;
      }
    } else {
      tmp = SvIV(tsv);
    }
    voidptr = INT2PTR(void *,tmp);
  } else if (! SvOK(sv)) {            /* Check for undef */
    *(ptr) = (void *) 0;
    return SWIG_OK;
  } else if (SvTYPE(sv) == SVt_RV) {  /* Check for NULL pointer */
    if (!SvROK(sv)) {
      /* In Perl 5.12 and later, SVt_RV == SVt_IV, so sv could be a valid integer value.  */
      if (SvIOK(sv)) {
        return SWIG_ERROR;
      } else {
        /* NULL pointer (reference to undef). */
        *(ptr) = (void *) 0;
        return SWIG_OK;
      }
    } else {
      return SWIG_ERROR;
    }
  } else {                            /* Don't know what it is */
    return SWIG_ERROR;
  }
  if (_t) {
    /* Now see if the types match */
    char *_c = HvNAME(SvSTASH(SvRV(sv)));
    tc = SWIG_TypeProxyCheck(_c,_t);
    if (!tc) {
      return SWIG_ERROR;
    }
    {
      int newmemory = 0;
      *ptr = SWIG_TypeCast(tc,voidptr,&newmemory);
      if (newmemory == SWIG_CAST_NEW_MEMORY) {
        assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
        if (own)
          *own = *own | SWIG_CAST_NEW_MEMORY;
      }
    }
  } else {
    *ptr = voidptr;
  }

  /* 
   *  DISOWN implementation: we need a perl guru to check this one.
   */
  if (tsv && (flags & SWIG_POINTER_DISOWN)) {
    /* 
     *  almost copy paste code from below SWIG_POINTER_OWN setting
     */
    SV *obj = sv;
    HV *stash = SvSTASH(SvRV(obj));
    GV *gv = *(GV**)hv_fetch(stash, "OWNER", 5, TRUE);
    if (isGV(gv)) {
      HV *hv = GvHVn(gv);
      /*
       * To set ownership (see below), a newSViv(1) entry is added. 
       * Hence, to remove ownership, we delete the entry.
       */
      if (hv_exists_ent(hv, obj, 0)) {
	hv_delete_ent(hv, obj, 0, 0);
      }
    }
  }
  return SWIG_OK;
}

SWIGRUNTIME int
SWIG_Perl_ConvertPtr(SWIG_MAYBE_PERL_OBJECT SV *sv, void **ptr, swig_type_info *_t, int flags) {
  return SWIG_Perl_ConvertPtrAndOwn(sv, ptr, _t, flags, 0);
}

SWIGRUNTIME void
SWIG_Perl_MakePtr(SWIG_MAYBE_PERL_OBJECT SV *sv, void *ptr, swig_type_info *t, int flags) {
  if (ptr && (flags & (SWIG_SHADOW | SWIG_POINTER_OWN))) {
    SV *self;
    SV *obj=newSV(0);
    HV *hash=newHV();
    HV *stash;
    sv_setref_pv(obj, (char *) SWIG_Perl_TypeProxyName(t), ptr);
    stash=SvSTASH(SvRV(obj));
    if (flags & SWIG_POINTER_OWN) {
      HV *hv;
      GV *gv = *(GV**)hv_fetch(stash, "OWNER", 5, TRUE);
      if (!isGV(gv))
        gv_init(gv, stash, "OWNER", 5, FALSE);
      hv=GvHVn(gv);
      hv_store_ent(hv, obj, newSViv(1), 0);
    }
    sv_magic((SV *)hash, (SV *)obj, 'P', Nullch, 0);
    SvREFCNT_dec(obj);
    self=newRV_noinc((SV *)hash);
    sv_setsv(sv, self);
    SvREFCNT_dec((SV *)self);
    sv_bless(sv, stash);
  }
  else {
    sv_setref_pv(sv, (char *) SWIG_Perl_TypeProxyName(t), ptr);
  }
}

SWIGRUNTIMEINLINE SV *
SWIG_Perl_NewPointerObj(SWIG_MAYBE_PERL_OBJECT void *ptr, swig_type_info *t, int flags) {
  SV *result = sv_newmortal();
  SWIG_MakePtr(result, ptr, t, flags);
  return result;
}

SWIGRUNTIME void
SWIG_Perl_MakePackedObj(SWIG_MAYBE_PERL_OBJECT SV *sv, void *ptr, int sz, swig_type_info *type) {
  char result[1024];
  char *r = result;
  if ((2*sz + 1 + strlen(SWIG_Perl_TypeProxyName(type))) > 1000) return;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  strcpy(r,SWIG_Perl_TypeProxyName(type));
  sv_setpv(sv, result);
}

SWIGRUNTIME SV *
SWIG_Perl_NewPackedObj(SWIG_MAYBE_PERL_OBJECT void *ptr, int sz, swig_type_info *type) {
  SV *result = sv_newmortal();
  SWIG_Perl_MakePackedObj(result, ptr, sz, type);
  return result;
}

/* Convert a packed value value */
SWIGRUNTIME int
SWIG_Perl_ConvertPacked(SWIG_MAYBE_PERL_OBJECT SV *obj, void *ptr, int sz, swig_type_info *ty) {
  swig_cast_info *tc;
  const char  *c = 0;

  if ((!obj) || (!SvOK(obj))) return SWIG_ERROR;
  c = SvPV_nolen(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') return SWIG_ERROR;
  c++;
  c = SWIG_UnpackData(c,ptr,sz);
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) return SWIG_ERROR;
  }
  return SWIG_OK;
}


/* Macros for low-level exception handling */
#define SWIG_croak(x)    { SWIG_Error(SWIG_RuntimeError, x); SWIG_fail; }


typedef XSPROTO(SwigPerlWrapper);
typedef SwigPerlWrapper *SwigPerlWrapperPtr;

/* Structure for command table */
typedef struct {
  const char         *name;
  SwigPerlWrapperPtr  wrapper;
} swig_command_info;

/* Information for constant table */

#define SWIG_INT     1
#define SWIG_FLOAT   2
#define SWIG_STRING  3
#define SWIG_POINTER 4
#define SWIG_BINARY  5

/* Constant information structure */
typedef struct swig_constant_info {
    int              type;
    const char      *name;
    long             lvalue;
    double           dvalue;
    void            *pvalue;
    swig_type_info **ptype;
} swig_constant_info;


/* Structure for variable table */
typedef struct {
  const char   *name;
  SwigMagicFunc   set;
  SwigMagicFunc   get;
  swig_type_info  **type;
} swig_variable_info;

/* Magic variable code */
#ifndef PERL_OBJECT
#define swig_create_magic(s,a,b,c) _swig_create_magic(s,a,b,c)
  #ifndef MULTIPLICITY
     SWIGRUNTIME void _swig_create_magic(SV *sv, char *name, int (*set)(SV *, MAGIC *), int (*get)(SV *,MAGIC *)) 
  #else
     SWIGRUNTIME void _swig_create_magic(SV *sv, char *name, int (*set)(struct interpreter*, SV *, MAGIC *), int (*get)(struct interpreter*, SV *,MAGIC *)) 
  #endif
#else
#  define swig_create_magic(s,a,b,c) _swig_create_magic(pPerl,s,a,b,c)
SWIGRUNTIME void _swig_create_magic(CPerlObj *pPerl, SV *sv, const char *name, int (CPerlObj::*set)(SV *, MAGIC *), int (CPerlObj::*get)(SV *, MAGIC *)) 
#endif
{
  MAGIC *mg;
  sv_magic(sv,sv,'U',(char *) name,strlen(name));
  mg = mg_find(sv,'U');
  mg->mg_virtual = (MGVTBL *) malloc(sizeof(MGVTBL));
  mg->mg_virtual->svt_get = (SwigMagicFunc) get;
  mg->mg_virtual->svt_set = (SwigMagicFunc) set;
  mg->mg_virtual->svt_len = 0;
  mg->mg_virtual->svt_clear = 0;
  mg->mg_virtual->svt_free = 0;
}


SWIGRUNTIME swig_module_info *
SWIG_Perl_GetModule(void) {
  static void *type_pointer = (void *)0;
  SV *pointer;

  /* first check if pointer already created */
  if (!type_pointer) {
    pointer = get_sv("swig_runtime_data::type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME, FALSE | GV_ADDMULTI);
    if (pointer && SvOK(pointer)) {
      type_pointer = INT2PTR(swig_type_info **, SvIV(pointer));
    }
  }

  return (swig_module_info *) type_pointer;
}

SWIGRUNTIME void
SWIG_Perl_SetModule(swig_module_info *module) {
  SV *pointer;

  /* create a new pointer */
  pointer = get_sv("swig_runtime_data::type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME, TRUE | GV_ADDMULTI);
  sv_setiv(pointer, PTR2IV(module));
}

#ifdef __cplusplus
}
#endif

/* Workaround perl5 global namespace pollution. Note that undefining library
 * functions like fopen will not solve the problem on all platforms as fopen
 * might be a macro on Windows but not necessarily on other operating systems. */
#ifdef do_open
  #undef do_open
#endif
#ifdef do_close
  #undef do_close
#endif
#ifdef do_exec
  #undef do_exec
#endif
#ifdef scalar
  #undef scalar
#endif
#ifdef list
  #undef list
#endif
#ifdef apply
  #undef apply
#endif
#ifdef convert
  #undef convert
#endif
#ifdef Error
  #undef Error
#endif
#ifdef form
  #undef form
#endif
#ifdef vform
  #undef vform
#endif
#ifdef LABEL
  #undef LABEL
#endif
#ifdef METHOD
  #undef METHOD
#endif
#ifdef Move
  #undef Move
#endif
#ifdef yylex
  #undef yylex
#endif
#ifdef yyparse
  #undef yyparse
#endif
#ifdef yyerror
  #undef yyerror
#endif
#ifdef invert
  #undef invert
#endif
#ifdef ref
  #undef ref
#endif
#ifdef read
  #undef read
#endif
#ifdef write
  #undef write
#endif
#ifdef eof
  #undef eof
#endif
#ifdef bool
  #undef bool
#endif
#ifdef close
  #undef close
#endif
#ifdef rewind
  #undef rewind
#endif
#ifdef free
  #undef free
#endif
#ifdef malloc
  #undef malloc
#endif
#ifdef calloc
  #undef calloc
#endif
#ifdef Stat
  #undef Stat
#endif
#ifdef check
  #undef check
#endif
#ifdef seekdir
  #undef seekdir
#endif
#ifdef open
  #undef open
#endif
#ifdef readdir
  #undef readdir
#endif
#ifdef bind
  #undef bind
#endif
#ifdef access
  #undef access
#endif
#ifdef stat
  #undef stat
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_CompositeTrimmerT_TrimmerT_PrefixTrimmerOps_t_TrimmerT_PostfixTrimmerOps_t_t swig_types[0]
#define SWIGTYPE_p_ContextEvent_Headers_Received_Sig_t swig_types[1]
#define SWIGTYPE_p_Fampp__FamppDirMonitorInitFailedException swig_types[2]
#define SWIGTYPE_p_FerrisLoki__FerrisSmallObjAllocator swig_types[3]
#define SWIGTYPE_p_FerrisLoki__Handlable swig_types[4]
#define SWIGTYPE_p_Ferris__AI__Agent swig_types[5]
#define SWIGTYPE_p_Ferris__AccessDenied swig_types[6]
#define SWIGTYPE_p_Ferris__AgentAlreadyExistsException swig_types[7]
#define SWIGTYPE_p_Ferris__AgentException swig_types[8]
#define SWIGTYPE_p_Ferris__AgentOnlyHandlesOneEmblemException swig_types[9]
#define SWIGTYPE_p_Ferris__Attribute swig_types[10]
#define SWIGTYPE_p_Ferris__AttributeAlreadyInUse swig_types[11]
#define SWIGTYPE_p_Ferris__AttributeCollection swig_types[12]
#define SWIGTYPE_p_Ferris__AttributeNotWritable swig_types[13]
#define SWIGTYPE_p_Ferris__AttributeProxy swig_types[14]
#define SWIGTYPE_p_Ferris__BackupException swig_types[15]
#define SWIGTYPE_p_Ferris__BackupNameWouldBeTooLong swig_types[16]
#define SWIGTYPE_p_Ferris__BadParam swig_types[17]
#define SWIGTYPE_p_Ferris__BadSignature swig_types[18]
#define SWIGTYPE_p_Ferris__BadlyFormedTime swig_types[19]
#define SWIGTYPE_p_Ferris__BadlyFormedTimeString swig_types[20]
#define SWIGTYPE_p_Ferris__BranchFileSystem swig_types[21]
#define SWIGTYPE_p_Ferris__CacheHandlable swig_types[22]
#define SWIGTYPE_p_Ferris__CacheManager swig_types[23]
#define SWIGTYPE_p_Ferris__CanNotAddEmblemException swig_types[24]
#define SWIGTYPE_p_Ferris__CanNotAddExternalAttribute swig_types[25]
#define SWIGTYPE_p_Ferris__CanNotDelete swig_types[26]
#define SWIGTYPE_p_Ferris__CanNotDereferenceDanglingSoftLink swig_types[27]
#define SWIGTYPE_p_Ferris__CanNotGetStream swig_types[28]
#define SWIGTYPE_p_Ferris__CanNotMonitorDirWithFAM swig_types[29]
#define SWIGTYPE_p_Ferris__CanNotReadContext swig_types[30]
#define SWIGTYPE_p_Ferris__CanNotReadContextPcctsParseFailed swig_types[31]
#define SWIGTYPE_p_Ferris__ChildNotRunning swig_types[32]
#define SWIGTYPE_p_Ferris__ColdEmblem swig_types[33]
#define SWIGTYPE_p_Ferris__CompressionAlgoNotFoundException swig_types[34]
#define SWIGTYPE_p_Ferris__CompressionException swig_types[35]
#define SWIGTYPE_p_Ferris__ContentNotModified swig_types[36]
#define SWIGTYPE_p_Ferris__Context swig_types[37]
#define SWIGTYPE_p_Ferris__ContextCollection swig_types[38]
#define SWIGTYPE_p_Ferris__ContextExists swig_types[39]
#define SWIGTYPE_p_Ferris__ContextIterator swig_types[40]
#define SWIGTYPE_p_Ferris__ContextSetCompare swig_types[41]
#define SWIGTYPE_p_Ferris__CopyFailed swig_types[42]
#define SWIGTYPE_p_Ferris__CreateFIFO swig_types[43]
#define SWIGTYPE_p_Ferris__CreateMetaDataContext swig_types[44]
#define SWIGTYPE_p_Ferris__CryptoBase swig_types[45]
#define SWIGTYPE_p_Ferris__CurlEasyInitFailed swig_types[46]
#define SWIGTYPE_p_Ferris__CurlPerformFailed swig_types[47]
#define SWIGTYPE_p_Ferris__CurlStateError swig_types[48]
#define SWIGTYPE_p_Ferris__CurlStaticInitFailed swig_types[49]
#define SWIGTYPE_p_Ferris__CursorException swig_types[50]
#define SWIGTYPE_p_Ferris__DBusConnectionException swig_types[51]
#define SWIGTYPE_p_Ferris__DBusException swig_types[52]
#define SWIGTYPE_p_Ferris__DTDCreationFailed swig_types[53]
#define SWIGTYPE_p_Ferris__DVDReadException swig_types[54]
#define SWIGTYPE_p_Ferris__Db4Exception swig_types[55]
#define SWIGTYPE_p_Ferris__Db4KeyNotFound swig_types[56]
#define SWIGTYPE_p_Ferris__DesktopFileKeyNotFound swig_types[57]
#define SWIGTYPE_p_Ferris__EAIndexException swig_types[58]
#define SWIGTYPE_p_Ferris__EA_Atom swig_types[59]
#define SWIGTYPE_p_Ferris__EA_Atom_RDFCacheAttribute swig_types[60]
#define SWIGTYPE_p_Ferris__EA_Atom_ReadOnly swig_types[61]
#define SWIGTYPE_p_Ferris__EA_Atom_ReadOnly_PassedInStream swig_types[62]
#define SWIGTYPE_p_Ferris__EA_Atom_ReadWrite swig_types[63]
#define SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_BaseT_Ferris__EA_Atom_ReadOnly_PassedInStream_t__GetIStream_PassedInStream_Func_t swig_types[64]
#define SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_Contents swig_types[65]
#define SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_OpenModeCached swig_types[66]
#define SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_PassedInStream swig_types[67]
#define SWIGTYPE_p_Ferris__EA_Atom_ReadWrite__RWBase_t__GetIStream_Func_t swig_types[68]
#define SWIGTYPE_p_Ferris__EA_Atom_ReadWrite__RWBase_t__IOStreamClosed_Func_t swig_types[69]
#define SWIGTYPE_p_Ferris__EA_Atom_Static swig_types[70]
#define SWIGTYPE_p_Ferris__Emblem swig_types[71]
#define SWIGTYPE_p_Ferris__EmblemException swig_types[72]
#define SWIGTYPE_p_Ferris__EmblemNotFoundException swig_types[73]
#define SWIGTYPE_p_Ferris__Etagere swig_types[74]
#define SWIGTYPE_p_Ferris__EtagereException swig_types[75]
#define SWIGTYPE_p_Ferris__FCA__ConceptLattice swig_types[76]
#define SWIGTYPE_p_Ferris__FCA__fh_conceptLattice swig_types[77]
#define SWIGTYPE_p_Ferris__FFilterSyntaxError swig_types[78]
#define SWIGTYPE_p_Ferris__FerrisCanNotCreateLeafOfLeaf swig_types[79]
#define SWIGTYPE_p_Ferris__FerrisCanNotGetScriptNameError swig_types[80]
#define SWIGTYPE_p_Ferris__FerrisCreateAttributeFailed swig_types[81]
#define SWIGTYPE_p_Ferris__FerrisCreateAttributeNotSupported swig_types[82]
#define SWIGTYPE_p_Ferris__FerrisCreateSubContextFailed swig_types[83]
#define SWIGTYPE_p_Ferris__FerrisCreateSubContextNotSupported swig_types[84]
#define SWIGTYPE_p_Ferris__FerrisCurlServerNameNotFound swig_types[85]
#define SWIGTYPE_p_Ferris__FerrisExceptionBase swig_types[86]
#define SWIGTYPE_p_Ferris__FerrisException_CodeState swig_types[87]
#define SWIGTYPE_p_Ferris__FerrisGIMPImageLoadFailed swig_types[88]
#define SWIGTYPE_p_Ferris__FerrisGLibCException swig_types[89]
#define SWIGTYPE_p_Ferris__FerrisHALException swig_types[90]
#define SWIGTYPE_p_Ferris__FerrisImageLoadFailed swig_types[91]
#define SWIGTYPE_p_Ferris__FerrisImageSaveFailed swig_types[92]
#define SWIGTYPE_p_Ferris__FerrisImlib2ImageLoadFailed swig_types[93]
#define SWIGTYPE_p_Ferris__FerrisInternalError swig_types[94]
#define SWIGTYPE_p_Ferris__FerrisJPEGImageLoadFailed swig_types[95]
#define SWIGTYPE_p_Ferris__FerrisNotReadableAsContext swig_types[96]
#define SWIGTYPE_p_Ferris__FerrisNotSupportedInThisContext swig_types[97]
#define SWIGTYPE_p_Ferris__FerrisOutOfMemory swig_types[98]
#define SWIGTYPE_p_Ferris__FerrisPNGImageLoadFailed swig_types[99]
#define SWIGTYPE_p_Ferris__FerrisParentNotSetError swig_types[100]
#define SWIGTYPE_p_Ferris__FerrisSetCWDException swig_types[101]
#define SWIGTYPE_p_Ferris__FerrisSqlServerNameNotFound swig_types[102]
#define SWIGTYPE_p_Ferris__FerrisStatException swig_types[103]
#define SWIGTYPE_p_Ferris__FerrisStreamException swig_types[104]
#define SWIGTYPE_p_Ferris__FerrisStreamLoadFailed swig_types[105]
#define SWIGTYPE_p_Ferris__FerrisVFSExceptionBase swig_types[106]
#define SWIGTYPE_p_Ferris__FerrisWaitTimedOut swig_types[107]
#define SWIGTYPE_p_Ferris__Ferris_Logging_ostreamT_char_std__char_traitsT_char_t_t swig_types[108]
#define SWIGTYPE_p_Ferris__Ferris_fstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t swig_types[109]
#define SWIGTYPE_p_Ferris__Ferris_ififostreamT_char_std__char_traitsT_char_t_t swig_types[110]
#define SWIGTYPE_p_Ferris__Ferris_ifstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t swig_types[111]
#define SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t swig_types[112]
#define SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t swig_types[113]
#define SWIGTYPE_p_Ferris__Ferris_istringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t swig_types[114]
#define SWIGTYPE_p_Ferris__Ferris_ofstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t swig_types[115]
#define SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t swig_types[116]
#define SWIGTYPE_p_Ferris__Ferris_ostringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t swig_types[117]
#define SWIGTYPE_p_Ferris__Ferris_stringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t swig_types[118]
#define SWIGTYPE_p_Ferris__FileClipboard swig_types[119]
#define SWIGTYPE_p_Ferris__FullTextIndexException swig_types[120]
#define SWIGTYPE_p_Ferris__FulltextQuerySyntaxError swig_types[121]
#define SWIGTYPE_p_Ferris__GModuleOpenFailed swig_types[122]
#define SWIGTYPE_p_Ferris__GPGMEInitFailed swig_types[123]
#define SWIGTYPE_p_Ferris__GPhoto2 swig_types[124]
#define SWIGTYPE_p_Ferris__GdbmException swig_types[125]
#define SWIGTYPE_p_Ferris__GenericError swig_types[126]
#define SWIGTYPE_p_Ferris__Handlable swig_types[127]
#define SWIGTYPE_p_Ferris__ImplicitIteratorUpdateLock swig_types[128]
#define SWIGTYPE_p_Ferris__IndexException swig_types[129]
#define SWIGTYPE_p_Ferris__InvalidModeString swig_types[130]
#define SWIGTYPE_p_Ferris__InvalidSortSpecification swig_types[131]
#define SWIGTYPE_p_Ferris__KeylistException swig_types[132]
#define SWIGTYPE_p_Ferris__LDAPException swig_types[133]
#define SWIGTYPE_p_Ferris__MalformedURL swig_types[134]
#define SWIGTYPE_p_Ferris__Medallion swig_types[135]
#define SWIGTYPE_p_Ferris__MedallionBelief swig_types[136]
#define SWIGTYPE_p_Ferris__MedallionException swig_types[137]
#define SWIGTYPE_p_Ferris__MutableCollectionEvents swig_types[138]
#define SWIGTYPE_p_Ferris__NoOpenWithContext swig_types[139]
#define SWIGTYPE_p_Ferris__NoSuchAgentException swig_types[140]
#define SWIGTYPE_p_Ferris__NoSuchAttribute swig_types[141]
#define SWIGTYPE_p_Ferris__NoSuchBeliefException swig_types[142]
#define SWIGTYPE_p_Ferris__NoSuchContextClass swig_types[143]
#define SWIGTYPE_p_Ferris__NoSuchGroup swig_types[144]
#define SWIGTYPE_p_Ferris__NoSuchObject swig_types[145]
#define SWIGTYPE_p_Ferris__NoSuchPersonalityException swig_types[146]
#define SWIGTYPE_p_Ferris__NoSuchSubContext swig_types[147]
#define SWIGTYPE_p_Ferris__NoSuchUser swig_types[148]
#define SWIGTYPE_p_Ferris__NotSupported swig_types[149]
#define SWIGTYPE_p_Ferris__ObjectExists swig_types[150]
#define SWIGTYPE_p_Ferris__OpenActionIsNotDefined swig_types[151]
#define SWIGTYPE_p_Ferris__ParseError swig_types[152]
#define SWIGTYPE_p_Ferris__Personality swig_types[153]
#define SWIGTYPE_p_Ferris__PreprocessedSortString swig_types[154]
#define SWIGTYPE_p_Ferris__ProgramSpawn swig_types[155]
#define SWIGTYPE_p_Ferris__QuotaStorageFull swig_types[156]
#define SWIGTYPE_p_Ferris__RegexCollection swig_types[157]
#define SWIGTYPE_p_Ferris__RelativeTimeParsing swig_types[158]
#define SWIGTYPE_p_Ferris__RemoveFailed swig_types[159]
#define SWIGTYPE_p_Ferris__RenameFailed swig_types[160]
#define SWIGTYPE_p_Ferris__RootContextCreationFailed swig_types[161]
#define SWIGTYPE_p_Ferris__RootContextFactory swig_types[162]
#define SWIGTYPE_p_Ferris__Runner swig_types[163]
#define SWIGTYPE_p_Ferris__SQLiteException swig_types[164]
#define SWIGTYPE_p_Ferris__SchemaException swig_types[165]
#define SWIGTYPE_p_Ferris__SchemaNotFoundException swig_types[166]
#define SWIGTYPE_p_Ferris__SocketOptionsException swig_types[167]
#define SWIGTYPE_p_Ferris__StorageFull swig_types[168]
#define SWIGTYPE_p_Ferris__SubContextAlreadyInUse swig_types[169]
#define SWIGTYPE_p_Ferris__SyntaxError swig_types[170]
#define SWIGTYPE_p_Ferris__Time__Benchmark swig_types[171]
#define SWIGTYPE_p_Ferris__Times swig_types[172]
#define SWIGTYPE_p_Ferris__URLDecodeSyntaxError swig_types[173]
#define SWIGTYPE_p_Ferris__UnknownBackupMode swig_types[174]
#define SWIGTYPE_p_Ferris__UnknownConfigLocation swig_types[175]
#define SWIGTYPE_p_Ferris__UnspoortedBlockSize swig_types[176]
#define SWIGTYPE_p_Ferris__Util__SingleShot swig_types[177]
#define SWIGTYPE_p_Ferris__Versioned swig_types[178]
#define SWIGTYPE_p_Ferris__WebPhotoException swig_types[179]
#define SWIGTYPE_p_Ferris__XMLBase swig_types[180]
#define SWIGTYPE_p_Ferris__XMLFatalError swig_types[181]
#define SWIGTYPE_p_Ferris__XMLParseError swig_types[182]
#define SWIGTYPE_p_Ferris__XMPBase swig_types[183]
#define SWIGTYPE_p_Ferris__XMPPacketScanFailed swig_types[184]
#define SWIGTYPE_p_Ferris__dbXMLException swig_types[185]
#define SWIGTYPE_p_Ferris__eetException swig_types[186]
#define SWIGTYPE_p_Ferris__eetKeyNotFound swig_types[187]
#define SWIGTYPE_p_Ferris__ferris_basic_streambuf_fourk swig_types[188]
#define SWIGTYPE_p_Ferris__ferris_basic_streambuf_onemeg swig_types[189]
#define SWIGTYPE_p_Ferris__ferris_basic_streambuf_quartk swig_types[190]
#define SWIGTYPE_p_Ferris__ferris_basic_streambuf_sixteenbytes swig_types[191]
#define SWIGTYPE_p_Ferris__ferris_basic_streambuf_sixteenk swig_types[192]
#define SWIGTYPE_p_Ferris__ferris_basic_streambuf_virtual swig_types[193]
#define SWIGTYPE_p_Ferris__ferris_ios swig_types[194]
#define SWIGTYPE_p_Ferris__ferris_streambufT_char_std__char_traitsT_char_t_t swig_types[195]
#define SWIGTYPE_p_Ferris__fh_attrcol swig_types[196]
#define SWIGTYPE_p_Ferris__fh_attribute swig_types[197]
#define SWIGTYPE_p_Ferris__fh_cemblem swig_types[198]
#define SWIGTYPE_p_Ferris__fh_context swig_types[199]
#define SWIGTYPE_p_Ferris__fh_emblem swig_types[200]
#define SWIGTYPE_p_Ferris__fh_emblem_less swig_types[201]
#define SWIGTYPE_p_Ferris__fh_etagere swig_types[202]
#define SWIGTYPE_p_Ferris__fh_medallion swig_types[203]
#define SWIGTYPE_p_Ferris__fh_medallionBelief swig_types[204]
#define SWIGTYPE_p_Ferris__fh_runner swig_types[205]
#define SWIGTYPE_p_Ferris__fh_sorter swig_types[206]
#define SWIGTYPE_p_Ferris__getIOStreamCloseUpdateFailed swig_types[207]
#define SWIGTYPE_p_Ferris__getIOStreamCloseUpdatePermissionDenied swig_types[208]
#define SWIGTYPE_p_Ferris__giStreamPosRAII swig_types[209]
#define SWIGTYPE_p_Ferris__tdbException swig_types[210]
#define SWIGTYPE_p_GSpawnFlags swig_types[211]
#define SWIGTYPE_p_GenericCloseSignal_t swig_types[212]
#define SWIGTYPE_p_GetIOStream_Func_t swig_types[213]
#define SWIGTYPE_p_GetIStream_Func_t swig_types[214]
#define SWIGTYPE_p_GetIStream_PassedInStream_Func_t swig_types[215]
#define SWIGTYPE_p_IOStreamClosed_Func_t swig_types[216]
#define SWIGTYPE_p_Loki__AllowConversion swig_types[217]
#define SWIGTYPE_p_Loki__AssocVectorT_void_p_sigc__connection_t swig_types[218]
#define SWIGTYPE_p_Loki__AssocVectorT_void_p_void_p_t swig_types[219]
#define SWIGTYPE_p_Loki__DisallowConversion swig_types[220]
#define SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t swig_types[221]
#define SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t swig_types[222]
#define SWIGTYPE_p_Loki__FunctorT_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t swig_types[223]
#define SWIGTYPE_p_Loki__FunctorT_bool_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t swig_types[224]
#define SWIGTYPE_p_Loki__FunctorT_void_LOKI_TYPELIST_1_fFerris__fh_emblem_const_RF_t swig_types[225]
#define SWIGTYPE_p_Loki__FunctorT_void_LOKI_TYPELIST_1_fFerris__fh_runnerF_t swig_types[226]
#define SWIGTYPE_p_Loki__FunctorT_void_LOKI_TYPELIST_4_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_tF_t swig_types[227]
#define SWIGTYPE_p_Loki__NullPointerException swig_types[228]
#define SWIGTYPE_p_Loki__Private__RefLinkedBase swig_types[229]
#define SWIGTYPE_p_Loki__SmartPtrT_Ferris__AI__Agent_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t swig_types[230]
#define SWIGTYPE_p_Loki__SmartPtrT_Ferris__AsyncIOHandler_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t swig_types[231]
#define SWIGTYPE_p_Loki__SmartPtrT_Ferris__CreateMetaDataContext___Ferris__FerrisExRefCountedContext_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t swig_types[232]
#define SWIGTYPE_p_Loki__SmartPtrT_Ferris__EAIndex__EAIndexManagerDB4Tree_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t swig_types[233]
#define SWIGTYPE_p_Loki__SmartPtrT_Ferris__EAIndex__EAIndexManagerDB4_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t swig_types[234]
#define SWIGTYPE_p_Loki__SmartPtrT_Ferris__EAIndex__EAQuery_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t swig_types[235]
#define SWIGTYPE_p_Loki__SmartPtrT_Ferris__EAIndex__ForwardEAIndexInterface_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t swig_types[236]
#define SWIGTYPE_p_Loki__SmartPtrT_Ferris__FerrisSlaveProcess_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t swig_types[237]
#define SWIGTYPE_p_Loki__SmartPtrT_Ferris__Ferrisls_aggregate_data_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t swig_types[238]
#define SWIGTYPE_p_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t swig_types[239]
#define SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t swig_types[240]
#define SWIGTYPE_p_Loki__SmartPtrT_Ferris__Regex_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t swig_types[241]
#define SWIGTYPE_p_Loki__SmartPtrT_Ferris__Semantic__SmushSet_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t swig_types[242]
#define SWIGTYPE_p_Loki__SmartPtrT_Ferris__Semantic__TreeSmushing_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t swig_types[243]
#define SWIGTYPE_p_Loki__SmartPtrT_Ferris__Time__Benchmark_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t swig_types[244]
#define SWIGTYPE_p_Loki__SmartPtrT_Ferris__Times_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t swig_types[245]
#define SWIGTYPE_p_Loki__SmartPtrT_Ferris__XMLMsgStreamCollector_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t swig_types[246]
#define SWIGTYPE_p_Loki__SmartPtrT_Ferris__redlandea__SmushSet_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t swig_types[247]
#define SWIGTYPE_p_Loki__SmartPtrT_Ferris__redlandea__TreeSmushing_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t swig_types[248]
#define SWIGTYPE_p_Loki__SmartPtrT_boost__regex_Loki__RefLinked_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_Loki__DefaultSPStorage_t swig_types[249]
#define SWIGTYPE_p_Loki__SmartPtrT_char_Loki__DestructiveCopy_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_Loki__DefaultSPStorage_t swig_types[250]
#define SWIGTYPE_p_NamingEvent_Changed swig_types[251]
#define SWIGTYPE_p_NamingEvent_Changed_Sig_t swig_types[252]
#define SWIGTYPE_p_NamingEvent_Created swig_types[253]
#define SWIGTYPE_p_NamingEvent_Created_Sig_t swig_types[254]
#define SWIGTYPE_p_NamingEvent_Deleted swig_types[255]
#define SWIGTYPE_p_NamingEvent_Deleted_Sig_t swig_types[256]
#define SWIGTYPE_p_NamingEvent_Exists swig_types[257]
#define SWIGTYPE_p_NamingEvent_Exists_Sig_t swig_types[258]
#define SWIGTYPE_p_NamingEvent_MedallionUpdated_Sig_t swig_types[259]
#define SWIGTYPE_p_NamingEvent_Moved swig_types[260]
#define SWIGTYPE_p_NamingEvent_Moved_Sig_t swig_types[261]
#define SWIGTYPE_p_NamingEvent_Start_Execute swig_types[262]
#define SWIGTYPE_p_NamingEvent_Start_Execute_Sig_t swig_types[263]
#define SWIGTYPE_p_NamingEvent_Start_Reading_Context swig_types[264]
#define SWIGTYPE_p_NamingEvent_Start_Reading_Context_Sig_t swig_types[265]
#define SWIGTYPE_p_NamingEvent_Stop_Execute swig_types[266]
#define SWIGTYPE_p_NamingEvent_Stop_Execute_Sig_t swig_types[267]
#define SWIGTYPE_p_NamingEvent_Stop_Reading_Context swig_types[268]
#define SWIGTYPE_p_NamingEvent_Stop_Reading_Context_Sig_t swig_types[269]
#define SWIGTYPE_p_OnlyInCacheSignal_t swig_types[270]
#define SWIGTYPE_p_PostfixTrimmerOps swig_types[271]
#define SWIGTYPE_p_PrefixTrimmerOps swig_types[272]
#define SWIGTYPE_p_RWBase_t swig_types[273]
#define SWIGTYPE_p_Runner_AsyncIOFunctor_t swig_types[274]
#define SWIGTYPE_p_SubContextNames_t swig_types[275]
#define SWIGTYPE_p_TrimmerBase swig_types[276]
#define SWIGTYPE_p_TrimmerT_PostfixTrimmerOps_t swig_types[277]
#define SWIGTYPE_p_TrimmerT_PrefixTrimmerOps_t swig_types[278]
#define SWIGTYPE_p_Version_t swig_types[279]
#define SWIGTYPE_p_XSDBasic_t swig_types[280]
#define SWIGTYPE_p__Base swig_types[281]
#define SWIGTYPE_p__Self swig_types[282]
#define SWIGTYPE_p___gnu_cxx__stdio_filebufT_char_std__char_traitsT_char_t_t swig_types[283]
#define SWIGTYPE_p_char swig_types[284]
#define SWIGTYPE_p_difference_type swig_types[285]
#define SWIGTYPE_p_fh_insideResolve swig_types[286]
#define SWIGTYPE_p_fh_ostream swig_types[287]
#define SWIGTYPE_p_freelist_t swig_types[288]
#define SWIGTYPE_p_gboolean swig_types[289]
#define SWIGTYPE_p_gint swig_types[290]
#define SWIGTYPE_p_guint32 swig_types[291]
#define SWIGTYPE_p_guint64 swig_types[292]
#define SWIGTYPE_p_iterator_category swig_types[293]
#define SWIGTYPE_p_openmode swig_types[294]
#define SWIGTYPE_p_p_char swig_types[295]
#define SWIGTYPE_p_p_std__istringstream swig_types[296]
#define SWIGTYPE_p_p_std__ostringstream swig_types[297]
#define SWIGTYPE_p_p_std__stringstream swig_types[298]
#define SWIGTYPE_p_pid_t swig_types[299]
#define SWIGTYPE_p_pointer swig_types[300]
#define SWIGTYPE_p_poptContext swig_types[301]
#define SWIGTYPE_p_poptOption swig_types[302]
#define SWIGTYPE_p_ref_count_t swig_types[303]
#define SWIGTYPE_p_reference swig_types[304]
#define SWIGTYPE_p_sigc__signal1T_void_FerrisLoki__Handlable_p_t swig_types[305]
#define SWIGTYPE_p_sigc__signal1T_void_Ferris__CacheHandlable_p_t swig_types[306]
#define SWIGTYPE_p_sigc__signal1T_void_Ferris__fh_context_t swig_types[307]
#define SWIGTYPE_p_sigc__signal1T_void_NamingEvent_Start_Reading_Context_p_t swig_types[308]
#define SWIGTYPE_p_sigc__signal1T_void_NamingEvent_Stop_Reading_Context_p_t swig_types[309]
#define SWIGTYPE_p_sigc__signal2T_void_Ferris__closeSignalStream_t_R_std__streamsize_t swig_types[310]
#define SWIGTYPE_p_sigc__signal2T_void_Ferris__fh_context_Ferris__stringset_t_const_R_t swig_types[311]
#define SWIGTYPE_p_sigc__signal2T_void_Ferris__fh_emblem_Ferris__fh_emblem_t swig_types[312]
#define SWIGTYPE_p_sigc__signal2T_void_Ferris__fh_etagere_Ferris__fh_emblem_t swig_types[313]
#define SWIGTYPE_p_sigc__signal3T_void_Ferris__fh_emblem_std__string_std__string_t swig_types[314]
#define SWIGTYPE_p_sigc__signal3T_void_NamingEvent_Changed_p_std__string_std__string_t swig_types[315]
#define SWIGTYPE_p_sigc__signal3T_void_NamingEvent_Deleted_p_std__string_std__string_t swig_types[316]
#define SWIGTYPE_p_sigc__signal3T_void_NamingEvent_Moved_p_std__string_std__string_t swig_types[317]
#define SWIGTYPE_p_sigc__signal3T_void_NamingEvent_Start_Execute_p_std__string_std__string_t swig_types[318]
#define SWIGTYPE_p_sigc__signal3T_void_NamingEvent_Stop_Execute_p_std__string_std__string_t swig_types[319]
#define SWIGTYPE_p_sigc__signal4T_void_Ferris__fh_context_Ferris__fh_context_int_int_t swig_types[320]
#define SWIGTYPE_p_sigc__signal4T_void_NamingEvent_Created_p_Ferris__fh_context_const_R_std__string_std__string_t swig_types[321]
#define SWIGTYPE_p_sigc__signal4T_void_NamingEvent_Exists_p_Ferris__fh_context_const_R_std__string_std__string_t swig_types[322]
#define SWIGTYPE_p_sigc__trackable swig_types[323]
#define SWIGTYPE_p_std__basic_ostreamT_wchar_t_std__char_traitsT_wchar_t_t_t swig_types[324]
#define SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t swig_types[325]
#define SWIGTYPE_p_std__exception swig_types[326]
#define SWIGTYPE_p_std__ios__openmode swig_types[327]
#define SWIGTYPE_p_std__iostream swig_types[328]
#define SWIGTYPE_p_std__istream swig_types[329]
#define SWIGTYPE_p_std__istringstream swig_types[330]
#define SWIGTYPE_p_std__listT_Ferris__fh_context_t swig_types[331]
#define SWIGTYPE_p_std__listT_Ferris__fh_emblem_t swig_types[332]
#define SWIGTYPE_p_std__listT_Ferris__fh_sorter_t swig_types[333]
#define SWIGTYPE_p_std__listT_Loki__FunctorT_bool_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t_t swig_types[334]
#define SWIGTYPE_p_std__listT_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_t swig_types[335]
#define SWIGTYPE_p_std__listT_std__pairT_std__string_std__string_t_t swig_types[336]
#define SWIGTYPE_p_std__listT_std__string_t swig_types[337]
#define SWIGTYPE_p_std__mapT_Ferris__XSDBasic_t_Ferris__fh_context_t swig_types[338]
#define SWIGTYPE_p_std__mapT_int_int_t swig_types[339]
#define SWIGTYPE_p_std__mapT_std__string_std__string_t swig_types[340]
#define SWIGTYPE_p_std__ostringstream swig_types[341]
#define SWIGTYPE_p_std__out_of_range swig_types[342]
#define SWIGTYPE_p_std__pairT_std__string_std__string_t swig_types[343]
#define SWIGTYPE_p_std__reverse_iteratorT_Ferris__ContextIterator_t swig_types[344]
#define SWIGTYPE_p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t swig_types[345]
#define SWIGTYPE_p_std__setT_guint32_t swig_types[346]
#define SWIGTYPE_p_std__setT_std__string_t swig_types[347]
#define SWIGTYPE_p_std__streampos swig_types[348]
#define SWIGTYPE_p_std__streamsize swig_types[349]
#define SWIGTYPE_p_std__string swig_types[350]
#define SWIGTYPE_p_std__stringstream swig_types[351]
#define SWIGTYPE_p_std__vectorT_int_t swig_types[352]
#define SWIGTYPE_p_std__vectorT_std__string_t swig_types[353]
#define SWIGTYPE_p_std__wstring swig_types[354]
#define SWIGTYPE_p_time_t swig_types[355]
#define SWIGTYPE_p_tm swig_types[356]
#define SWIGTYPE_p_uint32_t swig_types[357]
#define SWIGTYPE_p_value_type swig_types[358]
#define SWIGTYPE_p_void swig_types[359]
static swig_type_info *swig_types[361];
static swig_module_info swig_module = {swig_types, 360, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#define SWIG_init    boot_libferrisperl

#define SWIG_name   "libferrisperlc::boot_libferrisperl"
#define SWIG_prefix "libferrisperlc::"

#define SWIGVERSION 0x020004 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


#ifdef __cplusplus
extern "C"
#endif
#ifndef PERL_OBJECT
#ifndef MULTIPLICITY
SWIGEXPORT void SWIG_init (CV* cv);
#else
SWIGEXPORT void SWIG_init (pTHXo_ CV* cv);
#endif
#else
SWIGEXPORT void SWIG_init (CV *cv, CPerlObj *);
#endif


SWIGINTERNINLINE SV *
SWIG_From_bool  SWIG_PERL_DECL_ARGS_1(bool value)
{    
  SV *obj = sv_newmortal();
  if (value) {
    sv_setsv(obj, &PL_sv_yes);
  } else {
    sv_setsv(obj, &PL_sv_no); 
  }
  return obj;
}


SWIGINTERNINLINE SV *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  SV *obj = sv_newmortal();
  if (carray) {
    sv_setpvn(obj, carray, size);
  } else {
    sv_setsv(obj, &PL_sv_undef);
  }
  return obj;
}


SWIGINTERNINLINE SV * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}



static void xs_init _((pTHX));
static PerlInterpreter *my_perl;

int perl_eval(char *string) {
  char *argv[2];
  argv[0] = string;
  argv[1] = (char *) 0;
  return perl_call_argv("eval",0,argv);
}

int
main(int argc, char **argv, char **env)
{
    int exitstatus;

    my_perl = perl_alloc();
    if (!my_perl)
       exit(1);
    perl_construct( my_perl );

    exitstatus = perl_parse( my_perl, xs_init, argc, argv, (char **) NULL );
    if (exitstatus)
	exit( exitstatus );

    /* Initialize all of the module variables */

    exitstatus = perl_run( my_perl );

    perl_destruct( my_perl );
    perl_free( my_perl );

    exit( exitstatus );
}

/* Register any extra external extensions */

/* Do not delete this line--writemain depends on it */
/* EXTERN_C void boot_DynaLoader _((CV* cv)); */

static void
xs_init(pTHX)
{
/*  dXSUB_SYS; */
    char *file = __FILE__;
    {
      /*        newXS("DynaLoader::boot_DynaLoader", boot_DynaLoader, file); */
	newXS(SWIG_name, SWIG_init, file);
#ifdef SWIGMODINIT
	SWIGMODINIT
#endif
    }
}



#include <list>
#include <algorithm>
#include <stdexcept>


#include <string>
#include <vector>
#include <list>
#include <TypeDecl.hh>
#include <Ferris.hh>
#include <Agent.hh>
#include <Medallion.hh>
#include <FerrisStreams/Exceptions.hh>
#include <FerrisStreams/Shell.hh>
#include <FerrisStreams/Streams.hh>
#include <xfsutil.hh>
#include <Trimming.hh>
#include <Runner.hh>
#include <FCA.hh>
#ifdef Copy
#undef Copy
#endif
#include <ClipAPI.hh>
#include <CursorAPI.hh>
#include <FerrisOpenSSL.hh>
#include <FerrisException.hh>
#include <Attribute.hh>
#include <Ferris.hh>

    using namespace Ferris;
    


#include <stdexcept>


#include <string>

double SwigSvToNumber(SV* sv) {
    return SvIOK(sv) ? double(SvIVX(sv)) : SvNVX(sv);
}
std::string SwigSvToString(SV* sv) {
    STRLEN len;
    char *ptr = SvPV(sv, len);
    return std::string(ptr, len);
}
void SwigSvFromString(SV* sv, const std::string& s) {
    sv_setpvn(sv,s.data(),s.size());
}


#include <string>


#include <vector>
#include <algorithm>
#include <stdexcept>


#include <map>
#include <algorithm>
#include <stdexcept>


#include <utility>


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN int
SWIG_AsVal_double SWIG_PERL_DECL_ARGS_2(SV *obj, double *val)
{
  if (SvNIOK(obj)) {
    if (val) *val = SvNV(obj);
    return SWIG_OK;
  } else if (SvIOK(obj)) {
    if (val) *val = (double) SvIV(obj);
    return SWIG_AddCast(SWIG_OK);
  } else {
    const char *nptr = SvPV_nolen(obj);
    if (nptr) {
      char *endptr;
      double v;
      errno = 0;
      v = strtod(nptr, &endptr);
      if (errno == ERANGE) {
	errno = 0;
	return SWIG_OverflowError;
      } else {
	if (*endptr == '\0') {
	  if (val) *val = v;
	  return SWIG_Str2NumCast(SWIG_OK);
	}
      }
    }
  }
  return SWIG_TypeError;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long SWIG_PERL_DECL_ARGS_2(SV *obj, unsigned long *val) 
{
  if (SvUOK(obj)) {
    if (val) *val = SvUV(obj);
    return SWIG_OK;
  } else  if (SvIOK(obj)) {
    long v = SvIV(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else {
    int dispatch = 0;
    const char *nptr = SvPV_nolen(obj);
    if (nptr) {
      char *endptr;
      unsigned long v;
      errno = 0;
      v = strtoul(nptr, &endptr,0);
      if (errno == ERANGE) {
	errno = 0;
	return SWIG_OverflowError;
      } else {
	if (*endptr == '\0') {
	  if (val) *val = v;
	  return SWIG_Str2NumCast(SWIG_OK);
	}
      }
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int SWIG_PERL_DECL_ARGS_2(SV * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long SWIG_PERL_CALL_ARGS_2(obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsVal_long SWIG_PERL_DECL_ARGS_2(SV *obj, long* val)
{
  if (SvIOK(obj)) {
    if (val) *val = SvIV(obj);
    return SWIG_OK;
  } else {
    int dispatch = 0;
    const char *nptr = SvPV_nolen(obj);
    if (nptr) {
      char *endptr;
      long v;
      errno = 0;
      v = strtol(nptr, &endptr,0);
      if (errno == ERANGE) {
	errno = 0;
	return SWIG_OverflowError;
      } else {
	if (*endptr == '\0') {
	  if (val) *val = v;
	  return SWIG_Str2NumCast(SWIG_OK);
	}
      }
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_int SWIG_PERL_DECL_ARGS_2(SV * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE SV *
SWIG_From_unsigned_SS_long  SWIG_PERL_DECL_ARGS_1(unsigned long value)
{    
  SV *obj = sv_newmortal();
  sv_setuv(obj, (UV) value);
  return obj;
}


SWIGINTERNINLINE SV *
SWIG_From_unsigned_SS_int  SWIG_PERL_DECL_ARGS_1(unsigned int value)
{    
  return SWIG_From_unsigned_SS_long  SWIG_PERL_CALL_ARGS_1(value);
}

SWIGINTERN int std_vector_Sl_int_Sg__pop(std::vector< int > *self){
                if (self->size() == 0)
                    throw std::out_of_range("pop from empty vector");
                int x = self->back();
                self->pop_back();
                return x;
            }

SWIGINTERNINLINE SV *
SWIG_From_long  SWIG_PERL_DECL_ARGS_1(long value)
{    
  SV *obj = sv_newmortal();
  sv_setiv(obj, (IV) value);
  return obj;
}


SWIGINTERNINLINE SV *
SWIG_From_int  SWIG_PERL_DECL_ARGS_1(int value)
{    
  return SWIG_From_long  SWIG_PERL_CALL_ARGS_1(value);
}

SWIGINTERN int std_vector_Sl_int_Sg__get(std::vector< int > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_int_Sg__set(std::vector< int > *self,int i,int x){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = x;
                else
                    throw std::out_of_range("vector index out of range");
            }

SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(SV *obj, char** cptr, size_t* psize, int *alloc)
{
  if (SvMAGICAL(obj)) {
     SV *tmp = sv_newmortal();
     SvSetSV(tmp, obj);
     obj = tmp;
  }
  if (SvPOK(obj)) {
    STRLEN len = 0;
    char *cstr = SvPV(obj, len); 
    size_t size = len + 1;
    if (cptr)  {
      if (alloc) {
	if (*alloc == SWIG_NEWOBJ) {
	  *cptr = reinterpret_cast< char* >(memcpy((new char[size]), cstr, sizeof(char)*(size)));
	} else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      }
    }
    if (psize) *psize = size;
    return SWIG_OK;
  } else {
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      char* vptr = 0; 
      if (SWIG_ConvertPtr(obj, (void**)&vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = vptr;
	if (psize) *psize = vptr ? (strlen(vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsPtr_std_string SWIG_PERL_DECL_ARGS_2(SV * obj, std::string **val) 
{
  char* buf = 0 ; size_t size = 0; int alloc = SWIG_OLDOBJ;
  if (SWIG_IsOK((SWIG_AsCharPtrAndSize(obj, &buf, &size, &alloc)))) {
    if (buf) {
      if (val) *val = new std::string(buf, size - 1);
      if (alloc == SWIG_NEWOBJ) delete[] buf;
      return SWIG_NEWOBJ;
    } else {
      if (val) *val = 0;
      return SWIG_OLDOBJ;
    }
  } else {
    static int init = 0;
    static swig_type_info* descriptor = 0;
    if (!init) {
      descriptor = SWIG_TypeQuery("std::string" " *");
      init = 1;
    }
    if (descriptor) {
      std::string *vptr;
      int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
      if (SWIG_IsOK(res) && val) *val = vptr;
      return res;
    }
  }
  return SWIG_ERROR;
}

SWIGINTERN std::string std_vector_Sl_std_string_Sg__pop(std::vector< std::string > *self){
                if (self->size() == 0)
                    throw std::out_of_range("pop from empty vector");
                std::string x = self->back();
                self->pop_back();
                return x;
            }

SWIGINTERNINLINE SV *
SWIG_From_std_string  SWIG_PERL_DECL_ARGS_1(const std::string& s)
{
  return SWIG_FromCharPtrAndSize(s.data(), s.size());
}

SWIGINTERN std::string std_vector_Sl_std_string_Sg__get(std::vector< std::string > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_std_string_Sg__set(std::vector< std::string > *self,int i,std::string x){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = x;
                else
                    throw std::out_of_range("vector index out of range");
            }

SWIGINTERNINLINE int
SWIG_AsVal_size_t SWIG_PERL_DECL_ARGS_2(SV * obj, size_t *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long SWIG_PERL_CALL_ARGS_2(obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  return res;
}





#include <stdio.h>
#if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
# ifndef snprintf
#  define snprintf _snprintf
# endif
#endif


SWIGINTERNINLINE SV *
SWIG_From_long_SS_long  SWIG_PERL_DECL_ARGS_1(long long value)
{
  if (((long long) LONG_MIN <= value) && (value <= (long long) LONG_MAX)) {
    return SWIG_From_long  SWIG_PERL_CALL_ARGS_1(static_cast< long >(value));
  } else {    
    char temp[256]; 
    SV *obj = sv_newmortal();
    sprintf(temp, "%lld", value);
    sv_setpv(obj, temp);
    return obj;
  }
}


SWIGINTERNINLINE SV *
SWIG_From_unsigned_SS_long_SS_long  SWIG_PERL_DECL_ARGS_1(unsigned long long value)
{
  if (value < (unsigned long long) LONG_MAX) {
    return SWIG_From_long_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< long long >(value));
  } else {
    char temp[256]; 
    SV *obj = sv_newmortal();
    sprintf(temp, "%llu", value);
    sv_setpv(obj, temp);
    return obj;
  }
}


#include <stdlib.h>
#ifdef _MSC_VER
# ifndef strtoull
#  define strtoull _strtoui64
# endif
# ifndef strtoll
#  define strtoll _strtoi64
# endif
#endif


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_DECL_ARGS_2(SV *obj, unsigned long long *val)
{ 
  if (SvUOK(obj)) {
    if (val) *val = SvUV(obj);
    return SWIG_OK;
  } else  if (SvIOK(obj)) {
    long v = SvIV(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else {
    int dispatch = 0;
    const char *nptr = SvPV_nolen(obj);
    if (nptr) {
      char *endptr;
      unsigned long long v;
      errno = 0;
      v = strtoull(nptr, &endptr,0);
      if (errno == ERANGE) {
	errno = 0;
	return SWIG_OverflowError;
      } else {
	if (*endptr == '\0') {
	  if (val) *val = v;
	  return SWIG_Str2NumCast(SWIG_OK);
	}
      }
    }
    if (!dispatch) {
      const double mant_max = 1LL << DBL_MANT_DIG;
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, mant_max)) {
	if (val) *val = (unsigned long long)(d);
	return res;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_bool SWIG_PERL_DECL_ARGS_2(SV *obj, bool* val)
{
  if (obj == &PL_sv_yes) {
    if (val) *val = true;
    return SWIG_OK;
  } else if (obj == &PL_sv_no) { 
    if (val) *val = false;
    return SWIG_OK;
  } else {
    if (val) *val = SvTRUE(obj) ? true: false;
    return SWIG_AddCast(SWIG_OK);    
  }
  return SWIG_TypeError;
}


SWIGINTERNINLINE SV *
SWIG_From_double  SWIG_PERL_DECL_ARGS_1(double value)
{    
  SV *obj = sv_newmortal();
  sv_setnv(obj, value);
  return obj;
}


SWIGINTERN int
SWIG_AsCharArray(SV * obj, char *val, size_t size)
{ 
  char* cptr = 0; size_t csize = 0; int alloc = SWIG_OLDOBJ;
  int res = SWIG_AsCharPtrAndSize(obj, &cptr, &csize, &alloc);
  if (SWIG_IsOK(res)) {
    if ((csize == size + 1) && cptr && !(cptr[csize-1])) --csize;
    if (csize <= size) {
      if (val) {
	if (csize) memcpy(val, cptr, csize*sizeof(char));
	if (csize < size) memset(val + csize, 0, (size - csize)*sizeof(char));
      }
      if (alloc == SWIG_NEWOBJ) {
	delete[] cptr;
	res = SWIG_DelNewMask(res);
      }      
      return res;
    }
    if (alloc == SWIG_NEWOBJ) delete[] cptr;
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_char SWIG_PERL_DECL_ARGS_2(SV * obj, char *val)
{    
  int res = SWIG_AsCharArray(obj, val, 1);
  if (!SWIG_IsOK(res)) {
    long v;
    res = SWIG_AddCast(SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(obj, &v));
    if (SWIG_IsOK(res)) {
      if ((CHAR_MIN <= v) && (v <= CHAR_MAX)) {
	if (val) *val = static_cast< char >(v);
      } else {
	res = SWIG_OverflowError;
      }
    }
  }
  return res;
}


SWIGINTERNINLINE SV *
SWIG_From_float  SWIG_PERL_DECL_ARGS_1(float value)
{    
  return SWIG_From_double  SWIG_PERL_CALL_ARGS_1(value);
}


SWIGINTERNINLINE SV *
SWIG_From_size_t  SWIG_PERL_DECL_ARGS_1(size_t value)
{    
  return SWIG_From_unsigned_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long >(value));
}

#ifdef __cplusplus
extern "C" {
#endif

#ifdef PERL_OBJECT
#define MAGIC_CLASS _wrap_libferrisperl_var::
class _wrap_libferrisperl_var : public CPerlObj {
public:
#else
#define MAGIC_CLASS
#endif
SWIGCLASS_STATIC int swig_magic_readonly(pTHX_ SV *SWIGUNUSEDPARM(sv), MAGIC *SWIGUNUSEDPARM(mg)) {
    MAGIC_PPERL
    croak("Value is read-only.");
    return 0;
}
SWIGCLASS_STATIC int _wrap_NullTM_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setiv(SvRV(sv), PTR2IV(&Ferris::Time::NullTM));
  return 1;
}


SWIGCLASS_STATIC int _wrap_SCHEMA_DEFAULT_DISPLAY_WIDTH_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(Ferris::SCHEMA_DEFAULT_DISPLAY_WIDTH)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_SCHEMA_DEFAULT_DISPLAY_PRECISION_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(Ferris::SCHEMA_DEFAULT_DISPLAY_PRECISION)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_SCHEMA_JUSTIFICATION_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(Ferris::SCHEMA_JUSTIFICATION)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_SCHEMA_DEFAULTSORT_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(Ferris::SCHEMA_DEFAULTSORT)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_cursor_object_always_remake_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(Ferris::Config::cursor_object_always_remake)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_cursor_object_list_size_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(Ferris::Config::cursor_object_list_size)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_MAX_REF_COUNT_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setiv(SvRV(sv), PTR2IV(&Ferris::ImplementationDetail::MAX_REF_COUNT));
  return 1;
}




#ifdef PERL_OBJECT
};
#endif

#ifdef __cplusplus
}
#endif

#ifdef __cplusplus
extern "C" {
#endif
XS(_wrap_new_RefLinkedBase__SWIG_0) {
  {
    int argvi = 0;
    Loki::Private::RefLinkedBase *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_RefLinkedBase();");
    }
    result = (Loki::Private::RefLinkedBase *)new Loki::Private::RefLinkedBase();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Loki__Private__RefLinkedBase, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_RefLinkedBase__SWIG_1) {
  {
    Loki::Private::RefLinkedBase *arg1 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    Loki::Private::RefLinkedBase *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_RefLinkedBase(rhs);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Loki__Private__RefLinkedBase,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_RefLinkedBase" "', argument " "1"" of type '" "Loki::Private::RefLinkedBase const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RefLinkedBase" "', argument " "1"" of type '" "Loki::Private::RefLinkedBase const &""'"); 
    }
    arg1 = reinterpret_cast< Loki::Private::RefLinkedBase * >(argp1);
    result = (Loki::Private::RefLinkedBase *)new Loki::Private::RefLinkedBase((Loki::Private::RefLinkedBase const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Loki__Private__RefLinkedBase, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_RefLinkedBase) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Loki__Private__RefLinkedBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_RefLinkedBase__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_RefLinkedBase__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_RefLinkedBase'");
  XSRETURN(0);
}


XS(_wrap_RefLinkedBase_Release) {
  {
    Loki::Private::RefLinkedBase *arg1 = (Loki::Private::RefLinkedBase *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: RefLinkedBase_Release(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Loki__Private__RefLinkedBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RefLinkedBase_Release" "', argument " "1"" of type '" "Loki::Private::RefLinkedBase *""'"); 
    }
    arg1 = reinterpret_cast< Loki::Private::RefLinkedBase * >(argp1);
    result = (bool)(arg1)->Release();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_RefLinkedBase_Swap) {
  {
    Loki::Private::RefLinkedBase *arg1 = (Loki::Private::RefLinkedBase *) 0 ;
    Loki::Private::RefLinkedBase *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: RefLinkedBase_Swap(self,rhs);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Loki__Private__RefLinkedBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RefLinkedBase_Swap" "', argument " "1"" of type '" "Loki::Private::RefLinkedBase *""'"); 
    }
    arg1 = reinterpret_cast< Loki::Private::RefLinkedBase * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Loki__Private__RefLinkedBase,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RefLinkedBase_Swap" "', argument " "2"" of type '" "Loki::Private::RefLinkedBase &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RefLinkedBase_Swap" "', argument " "2"" of type '" "Loki::Private::RefLinkedBase &""'"); 
    }
    arg2 = reinterpret_cast< Loki::Private::RefLinkedBase * >(argp2);
    (arg1)->Swap(*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_RefLinkedBase) {
  {
    Loki::Private::RefLinkedBase *arg1 = (Loki::Private::RefLinkedBase *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_RefLinkedBase(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Loki__Private__RefLinkedBase, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RefLinkedBase" "', argument " "1"" of type '" "Loki::Private::RefLinkedBase *""'"); 
    }
    arg1 = reinterpret_cast< Loki::Private::RefLinkedBase * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AllowConversion_Swap) {
  {
    Loki::AllowConversion *arg1 = (Loki::AllowConversion *) 0 ;
    Loki::AllowConversion *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: AllowConversion_Swap(self,Loki::AllowConversion &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Loki__AllowConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AllowConversion_Swap" "', argument " "1"" of type '" "Loki::AllowConversion *""'"); 
    }
    arg1 = reinterpret_cast< Loki::AllowConversion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Loki__AllowConversion,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AllowConversion_Swap" "', argument " "2"" of type '" "Loki::AllowConversion &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AllowConversion_Swap" "', argument " "2"" of type '" "Loki::AllowConversion &""'"); 
    }
    arg2 = reinterpret_cast< Loki::AllowConversion * >(argp2);
    (arg1)->Swap(*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_AllowConversion) {
  {
    int argvi = 0;
    Loki::AllowConversion *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_AllowConversion();");
    }
    result = (Loki::AllowConversion *)new Loki::AllowConversion();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Loki__AllowConversion, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_AllowConversion) {
  {
    Loki::AllowConversion *arg1 = (Loki::AllowConversion *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_AllowConversion(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Loki__AllowConversion, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AllowConversion" "', argument " "1"" of type '" "Loki::AllowConversion *""'"); 
    }
    arg1 = reinterpret_cast< Loki::AllowConversion * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_DisallowConversion__SWIG_0) {
  {
    int argvi = 0;
    Loki::DisallowConversion *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_DisallowConversion();");
    }
    result = (Loki::DisallowConversion *)new Loki::DisallowConversion();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Loki__DisallowConversion, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_DisallowConversion__SWIG_1) {
  {
    Loki::AllowConversion *arg1 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    Loki::DisallowConversion *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_DisallowConversion(Loki::AllowConversion const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Loki__AllowConversion,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DisallowConversion" "', argument " "1"" of type '" "Loki::AllowConversion const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DisallowConversion" "', argument " "1"" of type '" "Loki::AllowConversion const &""'"); 
    }
    arg1 = reinterpret_cast< Loki::AllowConversion * >(argp1);
    result = (Loki::DisallowConversion *)new Loki::DisallowConversion((Loki::AllowConversion const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Loki__DisallowConversion, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_DisallowConversion) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Loki__AllowConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_DisallowConversion__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_DisallowConversion__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_DisallowConversion'");
  XSRETURN(0);
}


XS(_wrap_DisallowConversion_Swap) {
  {
    Loki::DisallowConversion *arg1 = (Loki::DisallowConversion *) 0 ;
    Loki::DisallowConversion *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: DisallowConversion_Swap(self,Loki::DisallowConversion &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Loki__DisallowConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DisallowConversion_Swap" "', argument " "1"" of type '" "Loki::DisallowConversion *""'"); 
    }
    arg1 = reinterpret_cast< Loki::DisallowConversion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Loki__DisallowConversion,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DisallowConversion_Swap" "', argument " "2"" of type '" "Loki::DisallowConversion &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DisallowConversion_Swap" "', argument " "2"" of type '" "Loki::DisallowConversion &""'"); 
    }
    arg2 = reinterpret_cast< Loki::DisallowConversion * >(argp2);
    (arg1)->Swap(*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_DisallowConversion) {
  {
    Loki::DisallowConversion *arg1 = (Loki::DisallowConversion *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_DisallowConversion(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Loki__DisallowConversion, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DisallowConversion" "', argument " "1"" of type '" "Loki::DisallowConversion *""'"); 
    }
    arg1 = reinterpret_cast< Loki::DisallowConversion * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_NullPointerException) {
  {
    int argvi = 0;
    Loki::NullPointerException *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_NullPointerException();");
    }
    result = (Loki::NullPointerException *)new Loki::NullPointerException();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Loki__NullPointerException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_NullPointerException_what) {
  {
    Loki::NullPointerException *arg1 = (Loki::NullPointerException *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    char *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: NullPointerException_what(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Loki__NullPointerException, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NullPointerException_what" "', argument " "1"" of type '" "Loki::NullPointerException const *""'"); 
    }
    arg1 = reinterpret_cast< Loki::NullPointerException * >(argp1);
    result = (char *)((Loki::NullPointerException const *)arg1)->what();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_NullPointerException) {
  {
    Loki::NullPointerException *arg1 = (Loki::NullPointerException *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_NullPointerException(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Loki__NullPointerException, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_NullPointerException" "', argument " "1"" of type '" "Loki::NullPointerException *""'"); 
    }
    arg1 = reinterpret_cast< Loki::NullPointerException * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_IntVector__SWIG_0) {
  {
    unsigned int arg1 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    std::vector< int > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_IntVector(size);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_IntVector" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (std::vector< int > *)new std::vector< int >(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_int_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_IntVector__SWIG_1) {
  {
    int argvi = 0;
    std::vector< int > *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_IntVector();");
    }
    result = (std::vector< int > *)new std::vector< int >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_int_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_IntVector__SWIG_2) {
  {
    unsigned int arg1 ;
    int arg2 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    std::vector< int > *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_IntVector(size,value);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_IntVector" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_IntVector" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (std::vector< int > *)new std::vector< int >(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_int_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_IntVector__SWIG_3) {
  {
    std::vector< int > *arg1 = 0 ;
    std::vector< int > temp1 ;
    std::vector< int > *v1 ;
    int argvi = 0;
    std::vector< int > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_IntVector(std::vector< int > const &);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorT_int_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of new_IntVector. "
          "Expected an array of ""int");
        SV **tv;
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SvIOK(*tv)) {
            temp1.push_back((int)SvIVX(*tv));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "new_IntVector. "
              "Expected an array of ""int");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of new_IntVector. "
          "Expected an array of ""int");
      }
    }
    result = (std::vector< int > *)new std::vector< int >((std::vector< int > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_int_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_IntVector) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          {
            /* wrapped vector? */
            std::vector<int >* v;
            if (SWIG_ConvertPtr(ST(0),(void **) &v, 
                SWIGTYPE_p_std__vectorT_int_t,0) != -1) {
              _v = 1;
            } else if (SvROK(ST(0))) {
              /* native sequence? */
              AV *av = (AV *)SvRV(ST(0));
              if (SvTYPE(av) == SVt_PVAV) {
                I32 len = av_len(av) + 1;
                if (len == 0) {
                  /* an empty sequence can be of any type */
                  _v = 1;
                } else {
                  /* check the first element only */
                  SV **tv = av_fetch(av, 0, 0);
                  if (SvIOK(*tv))
                  _v = 1;
                  else
                  _v = 0;
                }
              }
            } else {
              _v = 0;
            }
          }
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_IntVector__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_IntVector__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_IntVector__SWIG_3); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_IntVector__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_IntVector'");
  XSRETURN(0);
}


XS(_wrap_IntVector_size) {
  {
    std::vector< int > *arg1 = (std::vector< int > *) 0 ;
    std::vector< int > temp1 ;
    std::vector< int > *v1 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: IntVector_size(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorT_int_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of IntVector_size. "
          "Expected an array of ""int");
        SV **tv;
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SvIOK(*tv)) {
            temp1.push_back((int)SvIVX(*tv));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "IntVector_size. "
              "Expected an array of ""int");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of IntVector_size. "
          "Expected an array of ""int");
      }
    }
    result = (unsigned int)((std::vector< int > const *)arg1)->size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_IntVector_empty) {
  {
    std::vector< int > *arg1 = (std::vector< int > *) 0 ;
    std::vector< int > temp1 ;
    std::vector< int > *v1 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: IntVector_empty(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorT_int_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of IntVector_empty. "
          "Expected an array of ""int");
        SV **tv;
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SvIOK(*tv)) {
            temp1.push_back((int)SvIVX(*tv));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "IntVector_empty. "
              "Expected an array of ""int");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of IntVector_empty. "
          "Expected an array of ""int");
      }
    }
    result = (bool)((std::vector< int > const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_IntVector_clear) {
  {
    std::vector< int > *arg1 = (std::vector< int > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: IntVector_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_int_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_clear" "', argument " "1"" of type '" "std::vector< int > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< int > * >(argp1);
    (arg1)->clear();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_IntVector_push) {
  {
    std::vector< int > *arg1 = (std::vector< int > *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: IntVector_push(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_int_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_push" "', argument " "1"" of type '" "std::vector< int > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< int > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IntVector_push" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->push_back(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_IntVector_pop) {
  {
    std::vector< int > *arg1 = (std::vector< int > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: IntVector_pop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_int_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_pop" "', argument " "1"" of type '" "std::vector< int > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< int > * >(argp1);
    try {
      result = (int)std_vector_Sl_int_Sg__pop(arg1);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_IntVector_get) {
  {
    std::vector< int > *arg1 = (std::vector< int > *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: IntVector_get(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_int_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_get" "', argument " "1"" of type '" "std::vector< int > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< int > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IntVector_get" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    try {
      result = (int)std_vector_Sl_int_Sg__get(arg1,arg2);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_IntVector_set) {
  {
    std::vector< int > *arg1 = (std::vector< int > *) 0 ;
    int arg2 ;
    int arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: IntVector_set(self,i,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_int_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_set" "', argument " "1"" of type '" "std::vector< int > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< int > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IntVector_set" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IntVector_set" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    try {
      std_vector_Sl_int_Sg__set(arg1,arg2,arg3);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_IntVector) {
  {
    std::vector< int > *arg1 = (std::vector< int > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_IntVector(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_int_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IntVector" "', argument " "1"" of type '" "std::vector< int > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< int > * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_StringVector__SWIG_0) {
  {
    unsigned int arg1 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    std::vector< std::string > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_StringVector(size);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_StringVector" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (std::vector< std::string > *)new std::vector< std::string >(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_StringVector__SWIG_1) {
  {
    int argvi = 0;
    std::vector< std::string > *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_StringVector();");
    }
    result = (std::vector< std::string > *)new std::vector< std::string >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_StringVector__SWIG_2) {
  {
    unsigned int arg1 ;
    std::string arg2 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    std::vector< std::string > *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_StringVector(size,value);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_StringVector" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_StringVector" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = (std::vector< std::string > *)new std::vector< std::string >(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_StringVector__SWIG_3) {
  {
    std::vector< std::string > *arg1 = 0 ;
    std::vector< std::string > temp1 ;
    std::vector< std::string > *v1 ;
    int argvi = 0;
    std::vector< std::string > *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_StringVector(std::vector< std::string > const &);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorT_std__string_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of new_StringVector. "
          "Expected an array of ""std::string");
        SV **tv;
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SvPOK(*tv)) {
            temp1.push_back((std::string)SwigSvToString(*tv));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "new_StringVector. "
              "Expected an array of ""std::string");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of new_StringVector. "
          "Expected an array of ""std::string");
      }
    }
    result = (std::vector< std::string > *)new std::vector< std::string >((std::vector< std::string > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_StringVector) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          {
            /* wrapped vector? */
            std::vector<std::string >* v;
            if (SWIG_ConvertPtr(ST(0),(void **) &v, 
                SWIGTYPE_p_std__vectorT_std__string_t,0) != -1) {
              _v = 1;
            } else if (SvROK(ST(0))) {
              /* native sequence? */
              AV *av = (AV *)SvRV(ST(0));
              if (SvTYPE(av) == SVt_PVAV) {
                I32 len = av_len(av) + 1;
                if (len == 0) {
                  /* an empty sequence can be of any type */
                  _v = 1;
                } else {
                  /* check the first element only */
                  SV **tv = av_fetch(av, 0, 0);
                  if (SvPOK(*tv))
                  _v = 1;
                  else
                  _v = 0;
                }
              }
            } else {
              _v = 0;
            }
          }
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_StringVector__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_StringVector__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_StringVector__SWIG_3); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_StringVector__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_StringVector'");
  XSRETURN(0);
}


XS(_wrap_StringVector_size) {
  {
    std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
    std::vector< std::string > temp1 ;
    std::vector< std::string > *v1 ;
    int argvi = 0;
    unsigned int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: StringVector_size(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorT_std__string_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of StringVector_size. "
          "Expected an array of ""std::string");
        SV **tv;
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SvPOK(*tv)) {
            temp1.push_back((std::string)SwigSvToString(*tv));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "StringVector_size. "
              "Expected an array of ""std::string");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of StringVector_size. "
          "Expected an array of ""std::string");
      }
    }
    result = (unsigned int)((std::vector< std::string > const *)arg1)->size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_StringVector_empty) {
  {
    std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
    std::vector< std::string > temp1 ;
    std::vector< std::string > *v1 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: StringVector_empty(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorT_std__string_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of StringVector_empty. "
          "Expected an array of ""std::string");
        SV **tv;
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SvPOK(*tv)) {
            temp1.push_back((std::string)SwigSvToString(*tv));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "StringVector_empty. "
              "Expected an array of ""std::string");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of StringVector_empty. "
          "Expected an array of ""std::string");
      }
    }
    result = (bool)((std::vector< std::string > const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_StringVector_clear) {
  {
    std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: StringVector_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_std__string_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_clear" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
    (arg1)->clear();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_StringVector_push) {
  {
    std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
    std::string arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: StringVector_push(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_std__string_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_push" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StringVector_push" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    (arg1)->push_back(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_StringVector_pop) {
  {
    std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: StringVector_pop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_std__string_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_pop" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
    try {
      result = std_vector_Sl_std_string_Sg__pop(arg1);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_StringVector_get) {
  {
    std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: StringVector_get(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_std__string_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_get" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringVector_get" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    try {
      result = std_vector_Sl_std_string_Sg__get(arg1,arg2);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_StringVector_set) {
  {
    std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
    int arg2 ;
    std::string arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: StringVector_set(self,i,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_std__string_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_set" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringVector_set" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "StringVector_set" "', argument " "3"" of type '" "std::string""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    try {
      std_vector_Sl_std_string_Sg__set(arg1,arg2,arg3);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_StringVector) {
  {
    std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_StringVector(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorT_std__string_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_StringVector" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Handlable_private_AboutToBeDeleted) {
  {
    FerrisLoki::Handlable *arg1 = (FerrisLoki::Handlable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Handlable_private_AboutToBeDeleted(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_FerrisLoki__Handlable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Handlable_private_AboutToBeDeleted" "', argument " "1"" of type '" "FerrisLoki::Handlable *""'"); 
    }
    arg1 = reinterpret_cast< FerrisLoki::Handlable * >(argp1);
    (arg1)->private_AboutToBeDeleted();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_Handlable) {
  {
    int argvi = 0;
    FerrisLoki::Handlable *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_Handlable();");
    }
    result = (FerrisLoki::Handlable *)new FerrisLoki::Handlable();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FerrisLoki__Handlable, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_Handlable) {
  {
    FerrisLoki::Handlable *arg1 = (FerrisLoki::Handlable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_Handlable(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_FerrisLoki__Handlable, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Handlable" "', argument " "1"" of type '" "FerrisLoki::Handlable *""'"); 
    }
    arg1 = reinterpret_cast< FerrisLoki::Handlable * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Handlable_AddRef) {
  {
    FerrisLoki::Handlable *arg1 = (FerrisLoki::Handlable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Handlable_AddRef(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_FerrisLoki__Handlable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Handlable_AddRef" "', argument " "1"" of type '" "FerrisLoki::Handlable *""'"); 
    }
    arg1 = reinterpret_cast< FerrisLoki::Handlable * >(argp1);
    result = (arg1)->AddRef();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Handlable_Release) {
  {
    FerrisLoki::Handlable *arg1 = (FerrisLoki::Handlable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Handlable_Release(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_FerrisLoki__Handlable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Handlable_Release" "', argument " "1"" of type '" "FerrisLoki::Handlable *""'"); 
    }
    arg1 = reinterpret_cast< FerrisLoki::Handlable * >(argp1);
    result = (arg1)->Release();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Handlable_getReferenceCount) {
  {
    FerrisLoki::Handlable *arg1 = (FerrisLoki::Handlable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Handlable_getReferenceCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_FerrisLoki__Handlable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Handlable_getReferenceCount" "', argument " "1"" of type '" "FerrisLoki::Handlable *""'"); 
    }
    arg1 = reinterpret_cast< FerrisLoki::Handlable * >(argp1);
    result = (arg1)->getReferenceCount();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Handlable_getGenericCloseSig) {
  {
    FerrisLoki::Handlable *arg1 = (FerrisLoki::Handlable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::GenericCloseSignal_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Handlable_getGenericCloseSig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_FerrisLoki__Handlable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Handlable_getGenericCloseSig" "', argument " "1"" of type '" "FerrisLoki::Handlable *""'"); 
    }
    arg1 = reinterpret_cast< FerrisLoki::Handlable * >(argp1);
    result = (FerrisLoki::Handlable::GenericCloseSignal_t *) &(arg1)->getGenericCloseSig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal1T_void_FerrisLoki__Handlable_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisSmallObjAllocator__SWIG_0) {
  {
    std::size_t arg1 ;
    std::size_t arg2 ;
    std::size_t arg3 ;
    size_t val1 ;
    int ecode1 = 0 ;
    size_t val2 ;
    int ecode2 = 0 ;
    size_t val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    FerrisLoki::FerrisSmallObjAllocator *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisSmallObjAllocator(maxObjectSize,pageSize,objectAlignSize);");
    }
    ecode1 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_FerrisSmallObjAllocator" "', argument " "1"" of type '" "std::size_t""'");
    } 
    arg1 = static_cast< std::size_t >(val1);
    ecode2 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FerrisSmallObjAllocator" "', argument " "2"" of type '" "std::size_t""'");
    } 
    arg2 = static_cast< std::size_t >(val2);
    ecode3 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_FerrisSmallObjAllocator" "', argument " "3"" of type '" "std::size_t""'");
    } 
    arg3 = static_cast< std::size_t >(val3);
    result = (FerrisLoki::FerrisSmallObjAllocator *)new FerrisLoki::FerrisSmallObjAllocator(arg1,arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FerrisLoki__FerrisSmallObjAllocator, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisSmallObjAllocator__SWIG_1) {
  {
    std::size_t arg1 ;
    std::size_t arg2 ;
    size_t val1 ;
    int ecode1 = 0 ;
    size_t val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    FerrisLoki::FerrisSmallObjAllocator *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_FerrisSmallObjAllocator(maxObjectSize,pageSize);");
    }
    ecode1 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_FerrisSmallObjAllocator" "', argument " "1"" of type '" "std::size_t""'");
    } 
    arg1 = static_cast< std::size_t >(val1);
    ecode2 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FerrisSmallObjAllocator" "', argument " "2"" of type '" "std::size_t""'");
    } 
    arg2 = static_cast< std::size_t >(val2);
    result = (FerrisLoki::FerrisSmallObjAllocator *)new FerrisLoki::FerrisSmallObjAllocator(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FerrisLoki__FerrisSmallObjAllocator, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisSmallObjAllocator__SWIG_2) {
  {
    std::size_t arg1 ;
    size_t val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    FerrisLoki::FerrisSmallObjAllocator *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_FerrisSmallObjAllocator(maxObjectSize);");
    }
    ecode1 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_FerrisSmallObjAllocator" "', argument " "1"" of type '" "std::size_t""'");
    } 
    arg1 = static_cast< std::size_t >(val1);
    result = (FerrisLoki::FerrisSmallObjAllocator *)new FerrisLoki::FerrisSmallObjAllocator(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FerrisLoki__FerrisSmallObjAllocator, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisSmallObjAllocator) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisSmallObjAllocator__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisSmallObjAllocator__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisSmallObjAllocator__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisSmallObjAllocator'");
  XSRETURN(0);
}


XS(_wrap_FerrisSmallObjAllocator_Allocate) {
  {
    FerrisLoki::FerrisSmallObjAllocator *arg1 = (FerrisLoki::FerrisSmallObjAllocator *) 0 ;
    std::size_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    size_t val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    void *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: FerrisSmallObjAllocator_Allocate(self,size);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_FerrisLoki__FerrisSmallObjAllocator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FerrisSmallObjAllocator_Allocate" "', argument " "1"" of type '" "FerrisLoki::FerrisSmallObjAllocator *""'"); 
    }
    arg1 = reinterpret_cast< FerrisLoki::FerrisSmallObjAllocator * >(argp1);
    ecode2 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FerrisSmallObjAllocator_Allocate" "', argument " "2"" of type '" "std::size_t""'");
    } 
    arg2 = static_cast< std::size_t >(val2);
    result = (void *)(arg1)->Allocate(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_FerrisSmallObjAllocator) {
  {
    FerrisLoki::FerrisSmallObjAllocator *arg1 = (FerrisLoki::FerrisSmallObjAllocator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_FerrisSmallObjAllocator(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_FerrisLoki__FerrisSmallObjAllocator, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FerrisSmallObjAllocator" "', argument " "1"" of type '" "FerrisLoki::FerrisSmallObjAllocator *""'"); 
    }
    arg1 = reinterpret_cast< FerrisLoki::FerrisSmallObjAllocator * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisException_CodeState) {
  {
    std::string *arg1 = 0 ;
    int arg2 ;
    std::string *arg3 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisException_CodeState *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisException_CodeState(fi,li,fu);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisException_CodeState" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisException_CodeState" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FerrisException_CodeState" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisException_CodeState" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisException_CodeState" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisException_CodeState *)new Ferris::FerrisException_CodeState((std::string const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisException_CodeState, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_FerrisException_CodeState_getFileName) {
  {
    Ferris::FerrisException_CodeState *arg1 = (Ferris::FerrisException_CodeState *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: FerrisException_CodeState_getFileName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__FerrisException_CodeState, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FerrisException_CodeState_getFileName" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    result = (std::string *) &((Ferris::FerrisException_CodeState const *)arg1)->getFileName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_FerrisException_CodeState_getFunctionName) {
  {
    Ferris::FerrisException_CodeState *arg1 = (Ferris::FerrisException_CodeState *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: FerrisException_CodeState_getFunctionName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__FerrisException_CodeState, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FerrisException_CodeState_getFunctionName" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    result = (std::string *) &((Ferris::FerrisException_CodeState const *)arg1)->getFunctionName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_FerrisException_CodeState_getLineNumber) {
  {
    Ferris::FerrisException_CodeState *arg1 = (Ferris::FerrisException_CodeState *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: FerrisException_CodeState_getLineNumber(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__FerrisException_CodeState, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FerrisException_CodeState_getLineNumber" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    result = (int)((Ferris::FerrisException_CodeState const *)arg1)->getLineNumber();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_FerrisException_CodeState) {
  {
    Ferris::FerrisException_CodeState *arg1 = (Ferris::FerrisException_CodeState *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_FerrisException_CodeState(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__FerrisException_CodeState, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FerrisException_CodeState" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisExceptionBase__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    fh_ostream arg2 ;
    char *arg3 = (char *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 ;
    char *buf3 = 0 ;
    int alloc3 = 0 ;
    int argvi = 0;
    Ferris::FerrisExceptionBase *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisExceptionBase(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisExceptionBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisExceptionBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_fh_ostream,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisExceptionBase" "', argument " "2"" of type '" "fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisExceptionBase" "', argument " "2"" of type '" "fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< fh_ostream * >(argp2));
      }
    }
    res3 = SWIG_AsCharPtrAndSize(ST(2), &buf3, NULL, &alloc3);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisExceptionBase" "', argument " "3"" of type '" "char const *""'");
    }
    arg3 = reinterpret_cast< char * >(buf3);
    result = (Ferris::FerrisExceptionBase *)new Ferris::FerrisExceptionBase((Ferris::FerrisException_CodeState const &)*arg1,arg2,(char const *)arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisExceptionBase, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    XSRETURN(argvi);
  fail:
    
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisExceptionBase__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    fh_ostream arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    Ferris::FerrisExceptionBase *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_FerrisExceptionBase(state,log);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisExceptionBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisExceptionBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_fh_ostream,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisExceptionBase" "', argument " "2"" of type '" "fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisExceptionBase" "', argument " "2"" of type '" "fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< fh_ostream * >(argp2));
      }
    }
    result = (Ferris::FerrisExceptionBase *)new Ferris::FerrisExceptionBase((Ferris::FerrisException_CodeState const &)*arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisExceptionBase, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisExceptionBase) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_fh_ostream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_fh_ostream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(2), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisExceptionBase__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisExceptionBase__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisExceptionBase'");
  XSRETURN(0);
}


XS(_wrap_delete_FerrisExceptionBase) {
  {
    Ferris::FerrisExceptionBase *arg1 = (Ferris::FerrisExceptionBase *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_FerrisExceptionBase(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__FerrisExceptionBase, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FerrisExceptionBase" "', argument " "1"" of type '" "Ferris::FerrisExceptionBase *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisExceptionBase * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_FerrisExceptionBase_whats) {
  {
    Ferris::FerrisExceptionBase *arg1 = (Ferris::FerrisExceptionBase *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: FerrisExceptionBase_whats(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__FerrisExceptionBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FerrisExceptionBase_whats" "', argument " "1"" of type '" "Ferris::FerrisExceptionBase const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisExceptionBase * >(argp1);
    result = (std::string *) &((Ferris::FerrisExceptionBase const *)arg1)->whats();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_FerrisExceptionBase_what) {
  {
    Ferris::FerrisExceptionBase *arg1 = (Ferris::FerrisExceptionBase *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    char *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: FerrisExceptionBase_what(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__FerrisExceptionBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FerrisExceptionBase_what" "', argument " "1"" of type '" "Ferris::FerrisExceptionBase const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisExceptionBase * >(argp1);
    result = (char *)((Ferris::FerrisExceptionBase const *)arg1)->what();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisStreamException) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    fh_ostream arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisStreamException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisStreamException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisStreamException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisStreamException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_fh_ostream,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisStreamException" "', argument " "2"" of type '" "fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisStreamException" "', argument " "2"" of type '" "fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisStreamException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisStreamException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisStreamException *)new Ferris::FerrisStreamException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisStreamException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_delete_FerrisStreamException) {
  {
    Ferris::FerrisStreamException *arg1 = (Ferris::FerrisStreamException *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_FerrisStreamException(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__FerrisStreamException, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FerrisStreamException" "', argument " "1"" of type '" "Ferris::FerrisStreamException *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisStreamException * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_StreamThrowFromErrno__SWIG_0) {
  {
    int arg1 ;
    std::string *arg2 = 0 ;
    void *arg3 = (void *) 0 ;
    int val1 ;
    int ecode1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: StreamThrowFromErrno(eno,e,p);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "StreamThrowFromErrno" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StreamThrowFromErrno" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StreamThrowFromErrno" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2),SWIG_as_voidptrptr(&arg3), 0, 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "StreamThrowFromErrno" "', argument " "3"" of type '" "void *""'"); 
    }
    Ferris::StreamThrowFromErrno(arg1,(std::string const &)*arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_StreamThrowFromErrno__SWIG_1) {
  {
    int arg1 ;
    std::string *arg2 = 0 ;
    int val1 ;
    int ecode1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: StreamThrowFromErrno(eno,e);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "StreamThrowFromErrno" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StreamThrowFromErrno" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StreamThrowFromErrno" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    Ferris::StreamThrowFromErrno(arg1,(std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_StreamThrowFromErrno) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *ptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &ptr, 0, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_StreamThrowFromErrno__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_StreamThrowFromErrno__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'StreamThrowFromErrno'");
  XSRETURN(0);
}


XS(_wrap_new_UnspoortedBlockSize) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    fh_ostream arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::UnspoortedBlockSize *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_UnspoortedBlockSize(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_UnspoortedBlockSize" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UnspoortedBlockSize" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_fh_ostream,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_UnspoortedBlockSize" "', argument " "2"" of type '" "fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UnspoortedBlockSize" "', argument " "2"" of type '" "fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_UnspoortedBlockSize" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UnspoortedBlockSize" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::UnspoortedBlockSize *)new Ferris::UnspoortedBlockSize((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__UnspoortedBlockSize, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_delete_UnspoortedBlockSize) {
  {
    Ferris::UnspoortedBlockSize *arg1 = (Ferris::UnspoortedBlockSize *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_UnspoortedBlockSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__UnspoortedBlockSize, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_UnspoortedBlockSize" "', argument " "1"" of type '" "Ferris::UnspoortedBlockSize *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::UnspoortedBlockSize * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_MalformedURL) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    fh_ostream arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::MalformedURL *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_MalformedURL(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MalformedURL" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MalformedURL" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_fh_ostream,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MalformedURL" "', argument " "2"" of type '" "fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MalformedURL" "', argument " "2"" of type '" "fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_MalformedURL" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MalformedURL" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::MalformedURL *)new Ferris::MalformedURL((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__MalformedURL, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_delete_MalformedURL) {
  {
    Ferris::MalformedURL *arg1 = (Ferris::MalformedURL *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_MalformedURL(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__MalformedURL, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MalformedURL" "', argument " "1"" of type '" "Ferris::MalformedURL *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::MalformedURL * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CreateFIFO) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    fh_ostream arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::CreateFIFO *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CreateFIFO(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CreateFIFO" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CreateFIFO" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_fh_ostream,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CreateFIFO" "', argument " "2"" of type '" "fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CreateFIFO" "', argument " "2"" of type '" "fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CreateFIFO" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CreateFIFO" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::CreateFIFO *)new Ferris::CreateFIFO((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CreateFIFO, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CreateFIFO) {
  {
    Ferris::CreateFIFO *arg1 = (Ferris::CreateFIFO *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CreateFIFO(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__CreateFIFO, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CreateFIFO" "', argument " "1"" of type '" "Ferris::CreateFIFO *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::CreateFIFO * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ferris_g_get_home_dir) {
  {
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: ferris_g_get_home_dir();");
    }
    result = Ferris::ferris_g_get_home_dir();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_errnum_to_string) {
  {
    std::string *arg1 = 0 ;
    int arg2 ;
    int res1 = SWIG_OLDOBJ ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: errnum_to_string(prefix,en);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "errnum_to_string" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "errnum_to_string" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "errnum_to_string" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = Ferris::errnum_to_string((std::string const &)*arg1,arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    SWIG_croak_null();
  }
}


XS(_wrap_ferris_ios_maskOffFerrisOptions__SWIG_0) {
  {
    std::ios::openmode arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::ios::openmode result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ferris_ios_maskOffFerrisOptions(m);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__ios__openmode,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ferris_ios_maskOffFerrisOptions" "', argument " "1"" of type '" "std::ios::openmode""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ferris_ios_maskOffFerrisOptions" "', argument " "1"" of type '" "std::ios::openmode""'");
      } else {
        arg1 = *(reinterpret_cast< std::ios::openmode * >(argp1));
      }
    }
    result = Ferris::ferris_ios::maskOffFerrisOptions(arg1);
    ST(argvi) = SWIG_NewPointerObj((new std::ios::openmode(static_cast< const std::ios::openmode& >(result))), SWIGTYPE_p_std__ios__openmode, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_ferris_ios_maskOffFerrisOptions__SWIG_1) {
  {
    Ferris::ferris_ios::openmode arg1 ;
    unsigned long long val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    std::ios::openmode result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ferris_ios_maskOffFerrisOptions(m);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "ferris_ios_maskOffFerrisOptions" "', argument " "1"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg1 = static_cast< Ferris::ferris_ios::openmode >(val1);
    result = Ferris::ferris_ios::maskOffFerrisOptions(arg1);
    ST(argvi) = SWIG_NewPointerObj((new std::ios::openmode(static_cast< const std::ios::openmode& >(result))), SWIGTYPE_p_std__ios__openmode, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ferris_ios_maskOffFerrisOptions) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__ios__openmode, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ferris_ios_maskOffFerrisOptions__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ferris_ios_maskOffFerrisOptions__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'ferris_ios_maskOffFerrisOptions'");
  XSRETURN(0);
}


XS(_wrap_new_ferris_ios) {
  {
    int argvi = 0;
    Ferris::ferris_ios *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_ferris_ios();");
    }
    result = (Ferris::ferris_ios *)new Ferris::ferris_ios();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ferris_ios, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_ferris_ios) {
  {
    Ferris::ferris_ios *arg1 = (Ferris::ferris_ios *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_ferris_ios(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ferris_ios, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ferris_ios" "', argument " "1"" of type '" "Ferris::ferris_ios *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ferris_ios * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CleanupURL__SWIG_0) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CleanupURL(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CleanupURL" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CleanupURL" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::CleanupURL((std::string const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_CleanupURL__SWIG_1) {
  {
    std::string *arg1 = 0 ;
    bool arg2 ;
    bool arg3 ;
    int res1 = SWIG_OLDOBJ ;
    bool val2 ;
    int ecode2 = 0 ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CleanupURL(s,stripFileSchemePrefix,leaveURIConstructsIntact);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CleanupURL" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CleanupURL" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CleanupURL" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CleanupURL" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = Ferris::CleanupURL((std::string const &)*arg1,arg2,arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CleanupURL) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_CleanupURL__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_CleanupURL__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'CleanupURL'");
  XSRETURN(0);
}


XS(_wrap_new_ferris_basic_streambuf_onemeg) {
  {
    int argvi = 0;
    Ferris::ferris_basic_streambuf_onemeg *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_ferris_basic_streambuf_onemeg();");
    }
    result = (Ferris::ferris_basic_streambuf_onemeg *)new Ferris::ferris_basic_streambuf_onemeg();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ferris_basic_streambuf_onemeg, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_ferris_basic_streambuf_onemeg) {
  {
    Ferris::ferris_basic_streambuf_onemeg *arg1 = (Ferris::ferris_basic_streambuf_onemeg *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_ferris_basic_streambuf_onemeg(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ferris_basic_streambuf_onemeg, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ferris_basic_streambuf_onemeg" "', argument " "1"" of type '" "Ferris::ferris_basic_streambuf_onemeg *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ferris_basic_streambuf_onemeg * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_ferris_basic_streambuf_sixteenk) {
  {
    int argvi = 0;
    Ferris::ferris_basic_streambuf_sixteenk *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_ferris_basic_streambuf_sixteenk();");
    }
    result = (Ferris::ferris_basic_streambuf_sixteenk *)new Ferris::ferris_basic_streambuf_sixteenk();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ferris_basic_streambuf_sixteenk, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_ferris_basic_streambuf_sixteenk) {
  {
    Ferris::ferris_basic_streambuf_sixteenk *arg1 = (Ferris::ferris_basic_streambuf_sixteenk *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_ferris_basic_streambuf_sixteenk(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ferris_basic_streambuf_sixteenk, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ferris_basic_streambuf_sixteenk" "', argument " "1"" of type '" "Ferris::ferris_basic_streambuf_sixteenk *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ferris_basic_streambuf_sixteenk * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_ferris_basic_streambuf_fourk) {
  {
    int argvi = 0;
    Ferris::ferris_basic_streambuf_fourk *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_ferris_basic_streambuf_fourk();");
    }
    result = (Ferris::ferris_basic_streambuf_fourk *)new Ferris::ferris_basic_streambuf_fourk();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ferris_basic_streambuf_fourk, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_ferris_basic_streambuf_fourk) {
  {
    Ferris::ferris_basic_streambuf_fourk *arg1 = (Ferris::ferris_basic_streambuf_fourk *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_ferris_basic_streambuf_fourk(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ferris_basic_streambuf_fourk, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ferris_basic_streambuf_fourk" "', argument " "1"" of type '" "Ferris::ferris_basic_streambuf_fourk *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ferris_basic_streambuf_fourk * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_ferris_basic_streambuf_quartk) {
  {
    int argvi = 0;
    Ferris::ferris_basic_streambuf_quartk *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_ferris_basic_streambuf_quartk();");
    }
    result = (Ferris::ferris_basic_streambuf_quartk *)new Ferris::ferris_basic_streambuf_quartk();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ferris_basic_streambuf_quartk, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_ferris_basic_streambuf_quartk) {
  {
    Ferris::ferris_basic_streambuf_quartk *arg1 = (Ferris::ferris_basic_streambuf_quartk *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_ferris_basic_streambuf_quartk(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ferris_basic_streambuf_quartk, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ferris_basic_streambuf_quartk" "', argument " "1"" of type '" "Ferris::ferris_basic_streambuf_quartk *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ferris_basic_streambuf_quartk * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_ferris_basic_streambuf_sixteenbytes) {
  {
    int argvi = 0;
    Ferris::ferris_basic_streambuf_sixteenbytes *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_ferris_basic_streambuf_sixteenbytes();");
    }
    result = (Ferris::ferris_basic_streambuf_sixteenbytes *)new Ferris::ferris_basic_streambuf_sixteenbytes();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ferris_basic_streambuf_sixteenbytes, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_ferris_basic_streambuf_sixteenbytes) {
  {
    Ferris::ferris_basic_streambuf_sixteenbytes *arg1 = (Ferris::ferris_basic_streambuf_sixteenbytes *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_ferris_basic_streambuf_sixteenbytes(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ferris_basic_streambuf_sixteenbytes, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ferris_basic_streambuf_sixteenbytes" "', argument " "1"" of type '" "Ferris::ferris_basic_streambuf_sixteenbytes *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ferris_basic_streambuf_sixteenbytes * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_ferris_basic_streambuf_virtual) {
  {
    Ferris::ferris_basic_streambuf_virtual *arg1 = (Ferris::ferris_basic_streambuf_virtual *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_ferris_basic_streambuf_virtual(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ferris_basic_streambuf_virtual, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ferris_basic_streambuf_virtual" "', argument " "1"" of type '" "Ferris::ferris_basic_streambuf_virtual *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ferris_basic_streambuf_virtual * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_connectStreamBufferClosedSignal) {
  {
    std::basic_streambuf< char,std::char_traits< char > > *arg1 = (std::basic_streambuf< char,std::char_traits< char > > *) 0 ;
    Ferris::ferris_streambuf< char,std::char_traits< char > > *arg2 = (Ferris::ferris_streambuf< char,std::char_traits< char > > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: connectStreamBufferClosedSignal(sb,sh);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "connectStreamBufferClosedSignal" "', argument " "1"" of type '" "std::basic_streambuf< char,std::char_traits< char > > *""'"); 
    }
    arg1 = reinterpret_cast< std::basic_streambuf< char,std::char_traits< char > > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__ferris_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "connectStreamBufferClosedSignal" "', argument " "2"" of type '" "Ferris::ferris_streambuf< char,std::char_traits< char > > *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::ferris_streambuf< char,std::char_traits< char > > * >(argp2);
    Ferris::connectStreamBufferClosedSignal(arg1,arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_getClosedSignal) {
  {
    Ferris::ferris_streambuf< char,std::char_traits< char > > *arg1 = (Ferris::ferris_streambuf< char,std::char_traits< char > > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::closeSignal_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: getClosedSignal(sh);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ferris_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getClosedSignal" "', argument " "1"" of type '" "Ferris::ferris_streambuf< char,std::char_traits< char > > *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ferris_streambuf< char,std::char_traits< char > > * >(argp1);
    result = (Ferris::closeSignal_t *) &Ferris::getClosedSignal(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal2T_void_Ferris__closeSignalStream_t_R_std__streamsize_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_modifyFileBufferForExtendedFlags) {
  {
    __gnu_cxx::stdio_filebuf< char,std::char_traits< char > > *arg1 = (__gnu_cxx::stdio_filebuf< char,std::char_traits< char > > *) 0 ;
    Ferris::ferris_ios::openmode arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: modifyFileBufferForExtendedFlags(fb,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p___gnu_cxx__stdio_filebufT_char_std__char_traitsT_char_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "modifyFileBufferForExtendedFlags" "', argument " "1"" of type '" "__gnu_cxx::stdio_filebuf< char,std::char_traits< char > > *""'"); 
    }
    arg1 = reinterpret_cast< __gnu_cxx::stdio_filebuf< char,std::char_traits< char > > * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "modifyFileBufferForExtendedFlags" "', argument " "2"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg2 = static_cast< Ferris::ferris_ios::openmode >(val2);
    Ferris::Private::modifyFileBufferForExtendedFlags(arg1,arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_tostr__SWIG_0) {
  {
    long arg1 ;
    long val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: tostr(x);");
    }
    ecode1 = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "tostr" "', argument " "1"" of type '" "long""'");
    } 
    arg1 = static_cast< long >(val1);
    result = Ferris::tostr(arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_toint) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: toint(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "toint" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "toint" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = (int)Ferris::toint((std::string const &)*arg1);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_todouble) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    double result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: todouble(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "todouble" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "todouble" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = (double)Ferris::todouble((std::string const &)*arg1);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_tostr__SWIG_1) {
  {
    std::istringstream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: tostr(oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__istringstream,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tostr" "', argument " "1"" of type '" "std::istringstream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tostr" "', argument " "1"" of type '" "std::istringstream &""'"); 
    }
    arg1 = reinterpret_cast< std::istringstream * >(argp1);
    result = Ferris::tostr(*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_tostr__SWIG_2) {
  {
    std::ostringstream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: tostr(oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__ostringstream,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tostr" "', argument " "1"" of type '" "std::ostringstream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tostr" "', argument " "1"" of type '" "std::ostringstream &""'"); 
    }
    arg1 = reinterpret_cast< std::ostringstream * >(argp1);
    result = Ferris::tostr(*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_tostr__SWIG_3) {
  {
    std::stringstream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: tostr(oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__stringstream,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tostr" "', argument " "1"" of type '" "std::stringstream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tostr" "', argument " "1"" of type '" "std::stringstream &""'"); 
    }
    arg1 = reinterpret_cast< std::stringstream * >(argp1);
    result = Ferris::tostr(*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_tostr__SWIG_4) {
  {
    std::istringstream **arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: tostr(oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_p_std__istringstream,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tostr" "', argument " "1"" of type '" "std::istringstream *&""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tostr" "', argument " "1"" of type '" "std::istringstream *&""'"); 
    }
    arg1 = reinterpret_cast< std::istringstream ** >(argp1);
    result = Ferris::tostr(*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_tostr__SWIG_5) {
  {
    std::ostringstream **arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: tostr(oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_p_std__ostringstream,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tostr" "', argument " "1"" of type '" "std::ostringstream *&""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tostr" "', argument " "1"" of type '" "std::ostringstream *&""'"); 
    }
    arg1 = reinterpret_cast< std::ostringstream ** >(argp1);
    result = Ferris::tostr(*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_tostr__SWIG_6) {
  {
    std::stringstream **arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: tostr(oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_p_std__stringstream,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tostr" "', argument " "1"" of type '" "std::stringstream *&""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tostr" "', argument " "1"" of type '" "std::stringstream *&""'"); 
    }
    arg1 = reinterpret_cast< std::stringstream ** >(argp1);
    result = Ferris::tostr(*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_tostr__SWIG_7) {
  {
    Ferris::fh_ostringstream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: tostr(oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_ostringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tostr" "', argument " "1"" of type '" "Ferris::fh_ostringstream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tostr" "', argument " "1"" of type '" "Ferris::fh_ostringstream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_ostringstream * >(argp1);
    result = Ferris::tostr(*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_tostr__SWIG_8) {
  {
    Ferris::fh_stringstream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: tostr(oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_stringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tostr" "', argument " "1"" of type '" "Ferris::fh_stringstream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tostr" "', argument " "1"" of type '" "Ferris::fh_stringstream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_stringstream * >(argp1);
    result = Ferris::tostr(*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_StreamToString__SWIG_0) {
  {
    Ferris::fh_istream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: StreamToString(iss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamToString" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StreamToString" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_istream * >(argp1);
    result = Ferris::StreamToString(*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_StreamToString__SWIG_1) {
  {
    Ferris::fh_istream *arg1 = 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    std::string *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: StreamToString(iss,ret);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamToString" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StreamToString" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_istream * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StreamToString" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StreamToString" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    result = (std::string *) &Ferris::StreamToString(*arg1,*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_StreamToString) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_StreamToString__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_StreamToString__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'StreamToString'");
  XSRETURN(0);
}


XS(_wrap_getFirstLine) {
  {
    Ferris::fh_istream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: getFirstLine(iss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getFirstLine" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getFirstLine" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_istream * >(argp1);
    result = Ferris::getFirstLine(*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ends_with) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ends_with(s,ending);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ends_with" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ends_with" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ends_with" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ends_with" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)Ferris::ends_with((std::string const &)*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_starts_with__SWIG_0) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: starts_with(s,starting);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "starts_with" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "starts_with" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "starts_with" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "starts_with" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)Ferris::starts_with((std::string const &)*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_starts_with__SWIG_1) {
  {
    std::string *arg1 = 0 ;
    char *arg2 = (char *) 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: starts_with(s,starting);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "starts_with" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "starts_with" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "starts_with" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)Ferris::starts_with((std::string const &)*arg1,(char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_starts_with) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_starts_with__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_starts_with__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'starts_with'");
  XSRETURN(0);
}


XS(_wrap_contains__SWIG_0) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: contains(s,target);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "contains" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "contains" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "contains" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "contains" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)Ferris::contains((std::string const &)*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_cmp_nocase) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: cmp_nocase(s,s2);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "cmp_nocase" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "cmp_nocase" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "cmp_nocase" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "cmp_nocase" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (int)Ferris::cmp_nocase((std::string const &)*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_MakeLimitingIStream) {
  {
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > arg1 ;
    std::streampos arg2 ;
    std::streampos arg3 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: MakeLimitingIStream(ss,be,en);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MakeLimitingIStream" "', argument " "1"" of type '" "Ferris::fh_istream""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MakeLimitingIStream" "', argument " "1"" of type '" "Ferris::fh_istream""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_istream * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__streampos,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MakeLimitingIStream" "', argument " "2"" of type '" "std::streampos""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MakeLimitingIStream" "', argument " "2"" of type '" "std::streampos""'");
      } else {
        arg2 = *(reinterpret_cast< std::streampos * >(argp2));
      }
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__streampos,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MakeLimitingIStream" "', argument " "3"" of type '" "std::streampos""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MakeLimitingIStream" "', argument " "3"" of type '" "std::streampos""'");
      } else {
        arg3 = *(reinterpret_cast< std::streampos * >(argp3));
      }
    }
    result = Ferris::Factory::MakeLimitingIStream(arg1,arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_MakeProxyStream__SWIG_0) {
  {
    std::istream *arg1 = (std::istream *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: MakeProxyStream(base,takeOwnerShip);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__istream, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MakeProxyStream" "', argument " "1"" of type '" "std::istream *""'"); 
    }
    arg1 = reinterpret_cast< std::istream * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MakeProxyStream" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = Ferris::Factory::MakeProxyStream(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeProxyStream__SWIG_1) {
  {
    std::istream *arg1 = (std::istream *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MakeProxyStream(base);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__istream, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MakeProxyStream" "', argument " "1"" of type '" "std::istream *""'"); 
    }
    arg1 = reinterpret_cast< std::istream * >(argp1);
    result = Ferris::Factory::MakeProxyStream(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeProxyStream__SWIG_2) {
  {
    std::iostream *arg1 = (std::iostream *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: MakeProxyStream(base,takeOwnerShip);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__iostream, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MakeProxyStream" "', argument " "1"" of type '" "std::iostream *""'"); 
    }
    arg1 = reinterpret_cast< std::iostream * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MakeProxyStream" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = Ferris::Factory::MakeProxyStream(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeProxyStream__SWIG_3) {
  {
    std::iostream *arg1 = (std::iostream *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MakeProxyStream(base);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__iostream, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MakeProxyStream" "', argument " "1"" of type '" "std::iostream *""'"); 
    }
    arg1 = reinterpret_cast< std::iostream * >(argp1);
    result = Ferris::Factory::MakeProxyStream(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeProxyStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__istream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__iostream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__iostream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__istream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeProxyStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeProxyStream__SWIG_3); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeProxyStream__SWIG_2); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeProxyStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'MakeProxyStream'");
  XSRETURN(0);
}


XS(_wrap_MakeTeeStream) {
  {
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg1 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: MakeTeeStream(oss1,oss2);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MakeTeeStream" "', argument " "1"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MakeTeeStream" "', argument " "1"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_ostream * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MakeTeeStream" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MakeTeeStream" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    result = Ferris::Factory::MakeTeeStream(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_ostream(static_cast< const Ferris::fh_ostream& >(result))), SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_MakeTeeIOStream) {
  {
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg1 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: MakeTeeIOStream(oss1,oss2);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MakeTeeIOStream" "', argument " "1"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MakeTeeIOStream" "', argument " "1"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_ostream * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MakeTeeIOStream" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MakeTeeIOStream" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    result = Ferris::Factory::MakeTeeIOStream(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_fcin) {
  {
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: fcin();");
    }
    result = Ferris::Factory::fcin();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_fcout) {
  {
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: fcout();");
    }
    result = Ferris::Factory::fcout();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_ostream(static_cast< const Ferris::fh_ostream& >(result))), SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_fcerr) {
  {
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: fcerr();");
    }
    result = Ferris::Factory::fcerr();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_ostream(static_cast< const Ferris::fh_ostream& >(result))), SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_fcnull) {
  {
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: fcnull();");
    }
    result = Ferris::Factory::fcnull();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_ostream(static_cast< const Ferris::fh_ostream& >(result))), SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_MakeFdIStream__SWIG_0) {
  {
    int arg1 ;
    int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MakeFdIStream(fd);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MakeFdIStream" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    result = Ferris::Factory::MakeFdIStream(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeFdOStream__SWIG_0) {
  {
    int arg1 ;
    int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MakeFdOStream(fd);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MakeFdOStream" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    result = Ferris::Factory::MakeFdOStream(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_ostream(static_cast< const Ferris::fh_ostream& >(result))), SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeFdIOStream__SWIG_0) {
  {
    int arg1 ;
    int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MakeFdIOStream(fd);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MakeFdIOStream" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    result = Ferris::Factory::MakeFdIOStream(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeFdIStream__SWIG_1) {
  {
    int arg1 ;
    bool arg2 ;
    int val1 ;
    int ecode1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: MakeFdIStream(fd,closeFD);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MakeFdIStream" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MakeFdIStream" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = Ferris::Factory::MakeFdIStream(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeFdIStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeFdIStream__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeFdIStream__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'MakeFdIStream'");
  XSRETURN(0);
}


XS(_wrap_MakeFdOStream__SWIG_1) {
  {
    int arg1 ;
    bool arg2 ;
    int val1 ;
    int ecode1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: MakeFdOStream(fd,closeFD);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MakeFdOStream" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MakeFdOStream" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = Ferris::Factory::MakeFdOStream(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_ostream(static_cast< const Ferris::fh_ostream& >(result))), SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeFdOStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeFdOStream__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeFdOStream__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'MakeFdOStream'");
  XSRETURN(0);
}


XS(_wrap_MakeFdIOStream__SWIG_1) {
  {
    int arg1 ;
    bool arg2 ;
    int val1 ;
    int ecode1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: MakeFdIOStream(fd,closeFD);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MakeFdIOStream" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MakeFdIOStream" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = Ferris::Factory::MakeFdIOStream(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeFdIOStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeFdIOStream__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeFdIOStream__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'MakeFdIOStream'");
  XSRETURN(0);
}


XS(_wrap_MakeHoleyOStream__SWIG_0) {
  {
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg1 ;
    int arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: MakeHoleyOStream(ss,blocksize);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MakeHoleyOStream" "', argument " "1"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MakeHoleyOStream" "', argument " "1"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_ostream * >(argp1));
      }
    }
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MakeHoleyOStream" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = Ferris::Factory::MakeHoleyOStream(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_ostream(static_cast< const Ferris::fh_ostream& >(result))), SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeHoleyOStream__SWIG_1) {
  {
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MakeHoleyOStream(ss);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MakeHoleyOStream" "', argument " "1"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MakeHoleyOStream" "', argument " "1"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_ostream * >(argp1));
      }
    }
    result = Ferris::Factory::MakeHoleyOStream(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_ostream(static_cast< const Ferris::fh_ostream& >(result))), SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_MakeHoleyOStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeHoleyOStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeHoleyOStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'MakeHoleyOStream'");
  XSRETURN(0);
}


XS(_wrap_MakeMemoryIStream) {
  {
    void *arg1 = (void *) 0 ;
    int arg2 ;
    int res1 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: MakeMemoryIStream(data,data_size);");
    }
    res1 = SWIG_ConvertPtr(ST(0),SWIG_as_voidptrptr(&arg1), 0, 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MakeMemoryIStream" "', argument " "1"" of type '" "void *""'"); 
    }
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MakeMemoryIStream" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = Ferris::Factory::MakeMemoryIStream(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeMemoryIOStream) {
  {
    void *arg1 = (void *) 0 ;
    int arg2 ;
    int res1 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: MakeMemoryIOStream(data,data_size);");
    }
    res1 = SWIG_ConvertPtr(ST(0),SWIG_as_voidptrptr(&arg1), 0, 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MakeMemoryIOStream" "', argument " "1"" of type '" "void *""'"); 
    }
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MakeMemoryIOStream" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = Ferris::Factory::MakeMemoryIOStream(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeReadOnlyIOStream) {
  {
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MakeReadOnlyIOStream(ss);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MakeReadOnlyIOStream" "', argument " "1"" of type '" "Ferris::fh_istream""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MakeReadOnlyIOStream" "', argument " "1"" of type '" "Ferris::fh_istream""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_istream * >(argp1));
      }
    }
    result = Ferris::Factory::MakeReadOnlyIOStream(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_MakeMMapIStream__SWIG_0) {
  {
    int arg1 ;
    Ferris::ferris_ios::openmode arg2 ;
    std::string arg3 ;
    int val1 ;
    int ecode1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: MakeMMapIStream(fd,m,pathdesc);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MakeMMapIStream" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MakeMMapIStream" "', argument " "2"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg2 = static_cast< Ferris::ferris_ios::openmode >(val2);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "MakeMMapIStream" "', argument " "3"" of type '" "std::string const""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = Ferris::Factory::MakeMMapIStream(arg1,arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeMMapIStream__SWIG_1) {
  {
    int arg1 ;
    Ferris::ferris_ios::openmode arg2 ;
    int val1 ;
    int ecode1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: MakeMMapIStream(fd,m);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MakeMMapIStream" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MakeMMapIStream" "', argument " "2"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg2 = static_cast< Ferris::ferris_ios::openmode >(val2);
    result = Ferris::Factory::MakeMMapIStream(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeMMapIStream__SWIG_2) {
  {
    int arg1 ;
    int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MakeMMapIStream(fd);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MakeMMapIStream" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    result = Ferris::Factory::MakeMMapIStream(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeMMapIStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeMMapIStream__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeMMapIStream__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeMMapIStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'MakeMMapIStream'");
  XSRETURN(0);
}


XS(_wrap_MakeMMapIOStream__SWIG_0) {
  {
    int arg1 ;
    Ferris::ferris_ios::openmode arg2 ;
    std::string arg3 ;
    int val1 ;
    int ecode1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: MakeMMapIOStream(fd,m,pathdesc);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MakeMMapIOStream" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MakeMMapIOStream" "', argument " "2"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg2 = static_cast< Ferris::ferris_ios::openmode >(val2);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "MakeMMapIOStream" "', argument " "3"" of type '" "std::string const""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = Ferris::Factory::MakeMMapIOStream(arg1,arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeMMapIOStream__SWIG_1) {
  {
    int arg1 ;
    Ferris::ferris_ios::openmode arg2 ;
    int val1 ;
    int ecode1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: MakeMMapIOStream(fd,m);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MakeMMapIOStream" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MakeMMapIOStream" "', argument " "2"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg2 = static_cast< Ferris::ferris_ios::openmode >(val2);
    result = Ferris::Factory::MakeMMapIOStream(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeMMapIOStream__SWIG_2) {
  {
    int arg1 ;
    int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MakeMMapIOStream(fd);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "MakeMMapIOStream" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    result = Ferris::Factory::MakeMMapIOStream(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeMMapIOStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeMMapIOStream__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeMMapIOStream__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeMMapIOStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'MakeMMapIOStream'");
  XSRETURN(0);
}


XS(_wrap_MakeFIFO__SWIG_0) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MakeFIFO(path);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MakeFIFO" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MakeFIFO" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    try {
      result = (int)Ferris::Factory::MakeFIFO((std::string const &)*arg1);
    }
    catch(Ferris::CreateFIFO &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CreateFIFO(static_cast< const Ferris::CreateFIFO& >(_e))),SWIGTYPE_p_Ferris__CreateFIFO,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_MakeFIFO__SWIG_1) {
  {
    std::string *arg1 = 0 ;
    bool arg2 ;
    int arg3 ;
    int res1 = SWIG_OLDOBJ ;
    bool val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: MakeFIFO(path,should_open,openmode);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MakeFIFO" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MakeFIFO" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MakeFIFO" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MakeFIFO" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    try {
      result = (int)Ferris::Factory::MakeFIFO((std::string const &)*arg1,arg2,arg3);
    }
    catch(Ferris::CreateFIFO &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CreateFIFO(static_cast< const Ferris::CreateFIFO& >(_e))),SWIGTYPE_p_Ferris__CreateFIFO,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeFIFO__SWIG_2) {
  {
    std::string *arg1 = 0 ;
    bool arg2 ;
    int res1 = SWIG_OLDOBJ ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: MakeFIFO(path,should_open);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MakeFIFO" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MakeFIFO" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MakeFIFO" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    try {
      result = (int)Ferris::Factory::MakeFIFO((std::string const &)*arg1,arg2);
    }
    catch(Ferris::CreateFIFO &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CreateFIFO(static_cast< const Ferris::CreateFIFO& >(_e))),SWIGTYPE_p_Ferris__CreateFIFO,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeFIFO) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeFIFO__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeFIFO__SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeFIFO__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'MakeFIFO'");
  XSRETURN(0);
}


XS(_wrap_Context___deref__) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Context *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context___deref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context___deref__" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (Ferris::Context *)(arg1)->operator ->();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Context, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getContextClassStatelessEANames) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::stringset_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getContextClassStatelessEANames(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getContextClassStatelessEANames" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (Ferris::stringset_t *) &(*arg1)->getContextClassStatelessEANames();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__setT_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_isDir) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_isDir(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_isDir" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (bool)(*arg1)->isDir();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getDirName) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getDirName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getDirName" "', argument " "1"" of type '" "Ferris::fh_context const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (std::string *) &(*arg1)->getDirName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getParent) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Attribute::Parent_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getParent(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getParent" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    try {
      result = (Ferris::Attribute::Parent_t)(*arg1)->getParent();
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Context, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_isParentBound) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_isParentBound(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_isParentBound" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (bool)(*arg1)->isParentBound();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getRecommendedEA) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getRecommendedEA(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getRecommendedEA" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (*arg1)->getRecommendedEA();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getHasSubContextsGuess) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getHasSubContextsGuess(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getHasSubContextsGuess" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (bool)(*arg1)->getHasSubContextsGuess();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getHaveReadDir) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getHaveReadDir(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getHaveReadDir" "', argument " "1"" of type '" "Ferris::fh_context const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (int)(*arg1)->getHaveReadDir();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_toAttribute) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::fh_attribute result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_toAttribute(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_toAttribute" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (*arg1)->toAttribute();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_attribute(static_cast< const Ferris::fh_attribute& >(result))), SWIGTYPE_p_Ferris__fh_attribute, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getSchema) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_getSchema(self,eaname);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getSchema" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_getSchema" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_getSchema" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->getSchema((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getSchemaOrDefault) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::XSDBasic_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Context_getSchemaOrDefault(self,eaname,sct);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getSchemaOrDefault" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_getSchemaOrDefault" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_getSchemaOrDefault" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Context_getSchemaOrDefault" "', argument " "3"" of type '" "Ferris::XSDBasic_t""'");
    } 
    arg3 = static_cast< Ferris::XSDBasic_t >(val3);
    result = (*arg1)->getSchemaOrDefault((std::string const &)*arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_begin) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Context::iterator result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_begin(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_begin" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (*arg1)->begin();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::Context::iterator(static_cast< const Ferris::Context::iterator& >(result))), SWIGTYPE_p_Ferris__ContextIterator, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_end) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Context::iterator result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_end(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_end" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (*arg1)->end();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::Context::iterator(static_cast< const Ferris::Context::iterator& >(result))), SWIGTYPE_p_Ferris__ContextIterator, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_rbegin) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::reverse_iterator< Ferris::ContextIterator > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_rbegin(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_rbegin" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (*arg1)->rbegin();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::Context::reverse_iterator(static_cast< const Ferris::Context::reverse_iterator& >(result))), SWIGTYPE_p_std__reverse_iteratorT_Ferris__ContextIterator_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_rend) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::reverse_iterator< Ferris::ContextIterator > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_rend(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_rend" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (*arg1)->rend();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::Context::reverse_iterator(static_cast< const Ferris::Context::reverse_iterator& >(result))), SWIGTYPE_p_std__reverse_iteratorT_Ferris__ContextIterator_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_find) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::Context::iterator result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_find(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_find" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_find" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_find" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->find((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::Context::iterator(static_cast< const Ferris::Context::iterator& >(result))), SWIGTYPE_p_Ferris__ContextIterator, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Context_monsterName) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_monsterName(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_monsterName" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_monsterName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_monsterName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->monsterName((std::string const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getIsNativeContext) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getIsNativeContext(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getIsNativeContext" "', argument " "1"" of type '" "Ferris::fh_context const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (bool)(*arg1)->getIsNativeContext();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_setHasDynamicAttributes) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_setHasDynamicAttributes(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_setHasDynamicAttributes" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Context_setHasDynamicAttributes" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (*arg1)->setHasDynamicAttributes(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_setAttribute__SWIG_0) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::EA_Atom *arg3 = (Ferris::EA_Atom *) 0 ;
    bool arg4 ;
    Ferris::XSDBasic_t arg5 ;
    bool arg6 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    bool val6 ;
    int ecode6 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: Context_setAttribute(self,rdn,atx,addToREA,sct,isStateLess);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_setAttribute" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_setAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_setAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_Ferris__EA_Atom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Context_setAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom *""'"); 
    }
    arg3 = reinterpret_cast< Ferris::EA_Atom * >(argp3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Context_setAttribute" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Context_setAttribute" "', argument " "5"" of type '" "Ferris::XSDBasic_t""'");
    } 
    arg5 = static_cast< Ferris::XSDBasic_t >(val5);
    ecode6 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "Context_setAttribute" "', argument " "6"" of type '" "bool""'");
    } 
    arg6 = static_cast< bool >(val6);
    try {
      result = (bool)(*arg1)->setAttribute((std::string const &)*arg2,arg3,arg4,arg5,arg6);
    }
    catch(Ferris::AttributeAlreadyInUse &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeAlreadyInUse(static_cast< const Ferris::AttributeAlreadyInUse& >(_e))),SWIGTYPE_p_Ferris__AttributeAlreadyInUse,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_setAttribute__SWIG_1) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::EA_Atom *arg3 = (Ferris::EA_Atom *) 0 ;
    bool arg4 ;
    Ferris::XSDBasic_t arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: Context_setAttribute(self,rdn,atx,addToREA,sct);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_setAttribute" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_setAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_setAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_Ferris__EA_Atom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Context_setAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom *""'"); 
    }
    arg3 = reinterpret_cast< Ferris::EA_Atom * >(argp3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Context_setAttribute" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Context_setAttribute" "', argument " "5"" of type '" "Ferris::XSDBasic_t""'");
    } 
    arg5 = static_cast< Ferris::XSDBasic_t >(val5);
    try {
      result = (bool)(*arg1)->setAttribute((std::string const &)*arg2,arg3,arg4,arg5);
    }
    catch(Ferris::AttributeAlreadyInUse &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeAlreadyInUse(static_cast< const Ferris::AttributeAlreadyInUse& >(_e))),SWIGTYPE_p_Ferris__AttributeAlreadyInUse,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_setAttribute__SWIG_2) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::EA_Atom *arg3 = (Ferris::EA_Atom *) 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: Context_setAttribute(self,rdn,atx,addToREA);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_setAttribute" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_setAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_setAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_Ferris__EA_Atom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Context_setAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom *""'"); 
    }
    arg3 = reinterpret_cast< Ferris::EA_Atom * >(argp3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Context_setAttribute" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    try {
      result = (bool)(*arg1)->setAttribute((std::string const &)*arg2,arg3,arg4);
    }
    catch(Ferris::AttributeAlreadyInUse &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeAlreadyInUse(static_cast< const Ferris::AttributeAlreadyInUse& >(_e))),SWIGTYPE_p_Ferris__AttributeAlreadyInUse,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_setAttribute) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Ferris__EA_Atom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Ferris__EA_Atom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 6) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Ferris__EA_Atom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_setAttribute__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_setAttribute__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_setAttribute__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Context_setAttribute'");
  XSRETURN(0);
}


XS(_wrap_Context_getSubContextAttributesWithSameNameHaveSameSchema) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getSubContextAttributesWithSameNameHaveSameSchema(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getSubContextAttributesWithSameNameHaveSameSchema" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (bool)(*arg1)->getSubContextAttributesWithSameNameHaveSameSchema();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_dumpOutItems) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_dumpOutItems(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_dumpOutItems" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    (*arg1)->dumpOutItems();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getOverMountContext) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Context *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getOverMountContext(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getOverMountContext" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (Ferris::Context *)(*arg1)->getOverMountContext();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Context, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_remove__SWIG_0) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_remove(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_remove" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_remove" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_remove" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (*arg1)->remove((std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Context_remove__SWIG_1) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    Ferris::fh_context arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_remove(self,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_remove" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_remove" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_remove" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    (*arg1)->remove(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_remove) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_remove__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_remove__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Context_remove'");
  XSRETURN(0);
}


XS(_wrap_Context_rename__SWIG_0) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    bool arg4 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: Context_rename(self,rdn,newPath,TryToCopyOverFileSystems,OverWriteDstIfExists);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_rename" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_rename" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_rename" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Context_rename" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_rename" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Context_rename" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Context_rename" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    result = (*arg1)->rename((std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_rename__SWIG_1) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: Context_rename(self,rdn,newPath,TryToCopyOverFileSystems);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_rename" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_rename" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_rename" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Context_rename" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_rename" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Context_rename" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = (*arg1)->rename((std::string const &)*arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_rename__SWIG_2) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Context_rename(self,rdn,newPath);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_rename" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_rename" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_rename" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Context_rename" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_rename" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (*arg1)->rename((std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_Context_rename) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_rename__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_rename__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_rename__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Context_rename'");
  XSRETURN(0);
}


XS(_wrap_Context_copyTo__SWIG_0) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Context_copyTo(self,newPath,OverWriteDstIfExists);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_copyTo" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_copyTo" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_copyTo" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Context_copyTo" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (*arg1)->copyTo((std::string const &)*arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_copyTo__SWIG_1) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_copyTo(self,newPath);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_copyTo" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_copyTo" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_copyTo" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->copyTo((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Context_copyTo) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_copyTo__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_copyTo__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Context_copyTo'");
  XSRETURN(0);
}


XS(_wrap_Context_createAttribute) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_attribute result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_createAttribute(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_createAttribute" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_createAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_createAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    try {
      result = (*arg1)->createAttribute((std::string const &)*arg2);
    }
    catch(Ferris::FerrisCreateAttributeFailed &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisCreateAttributeFailed(static_cast< const Ferris::FerrisCreateAttributeFailed& >(_e))),SWIGTYPE_p_Ferris__FerrisCreateAttributeFailed,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::FerrisCreateAttributeNotSupported &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisCreateAttributeNotSupported(static_cast< const Ferris::FerrisCreateAttributeNotSupported& >(_e))),SWIGTYPE_p_Ferris__FerrisCreateAttributeNotSupported,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::AttributeAlreadyInUse &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeAlreadyInUse(static_cast< const Ferris::AttributeAlreadyInUse& >(_e))),SWIGTYPE_p_Ferris__AttributeAlreadyInUse,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_attribute(static_cast< const Ferris::fh_attribute& >(result))), SWIGTYPE_p_Ferris__fh_attribute, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Context_acquireAttribute) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_attribute result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_acquireAttribute(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_acquireAttribute" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_acquireAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_acquireAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    try {
      result = (*arg1)->acquireAttribute((std::string const &)*arg2);
    }
    catch(Ferris::FerrisCreateAttributeFailed &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisCreateAttributeFailed(static_cast< const Ferris::FerrisCreateAttributeFailed& >(_e))),SWIGTYPE_p_Ferris__FerrisCreateAttributeFailed,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::FerrisCreateAttributeNotSupported &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisCreateAttributeNotSupported(static_cast< const Ferris::FerrisCreateAttributeNotSupported& >(_e))),SWIGTYPE_p_Ferris__FerrisCreateAttributeNotSupported,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_attribute(static_cast< const Ferris::fh_attribute& >(result))), SWIGTYPE_p_Ferris__fh_attribute, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getCreateSubContextSchema) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getCreateSubContextSchema(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getCreateSubContextSchema" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (*arg1)->getCreateSubContextSchema();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_createSubContext__SWIG_0) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::fh_context arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Context_createSubContext(self,rdn,md);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_createSubContext" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_createSubContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_createSubContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Context_createSubContext" "', argument " "3"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_createSubContext" "', argument " "3"" of type '" "Ferris::fh_context""'");
      } else {
        arg3 = *(reinterpret_cast< Ferris::fh_context * >(argp3));
      }
    }
    try {
      result = (*arg1)->createSubContext((std::string const &)*arg2,arg3);
    }
    catch(Ferris::FerrisCreateSubContextFailed &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisCreateSubContextFailed(static_cast< const Ferris::FerrisCreateSubContextFailed& >(_e))),SWIGTYPE_p_Ferris__FerrisCreateSubContextFailed,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::FerrisCreateSubContextNotSupported &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisCreateSubContextNotSupported(static_cast< const Ferris::FerrisCreateSubContextNotSupported& >(_e))),SWIGTYPE_p_Ferris__FerrisCreateSubContextNotSupported,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Context_createSubContext__SWIG_1) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_createSubContext(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_createSubContext" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_createSubContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_createSubContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    try {
      result = (*arg1)->createSubContext((std::string const &)*arg2);
    }
    catch(Ferris::FerrisCreateSubContextFailed &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisCreateSubContextFailed(static_cast< const Ferris::FerrisCreateSubContextFailed& >(_e))),SWIGTYPE_p_Ferris__FerrisCreateSubContextFailed,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::FerrisCreateSubContextNotSupported &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisCreateSubContextNotSupported(static_cast< const Ferris::FerrisCreateSubContextNotSupported& >(_e))),SWIGTYPE_p_Ferris__FerrisCreateSubContextNotSupported,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Context_createSubContext__SWIG_2) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    SwigValueWrapper< Loki::SmartPtr< Ferris::CreateMetaDataContext,::Ferris::FerrisExRefCountedContext,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Context_createSubContext(self,rdn,md);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_createSubContext" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_createSubContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_createSubContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Loki__SmartPtrT_Ferris__CreateMetaDataContext___Ferris__FerrisExRefCountedContext_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Context_createSubContext" "', argument " "3"" of type '" "Ferris::fh_mdcontext""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_createSubContext" "', argument " "3"" of type '" "Ferris::fh_mdcontext""'");
      } else {
        arg3 = *(reinterpret_cast< Ferris::fh_mdcontext * >(argp3));
      }
    }
    try {
      result = (*arg1)->createSubContext((std::string const &)*arg2,arg3);
    }
    catch(Ferris::FerrisCreateSubContextFailed &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisCreateSubContextFailed(static_cast< const Ferris::FerrisCreateSubContextFailed& >(_e))),SWIGTYPE_p_Ferris__FerrisCreateSubContextFailed,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::FerrisCreateSubContextNotSupported &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisCreateSubContextNotSupported(static_cast< const Ferris::FerrisCreateSubContextNotSupported& >(_e))),SWIGTYPE_p_Ferris__FerrisCreateSubContextNotSupported,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Context_createSubContext) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Loki__SmartPtrT_Ferris__CreateMetaDataContext___Ferris__FerrisExRefCountedContext_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_createSubContext__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_createSubContext__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_createSubContext__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'Context_createSubContext'");
  XSRETURN(0);
}


XS(_wrap_Context_getRelativeContext__SWIG_0) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::RootContextFactory *arg3 = (Ferris::RootContextFactory *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Context_getRelativeContext(self,xdn,f);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getRelativeContext" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_getRelativeContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_getRelativeContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_Ferris__RootContextFactory, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Context_getRelativeContext" "', argument " "3"" of type '" "Ferris::RootContextFactory *""'"); 
    }
    arg3 = reinterpret_cast< Ferris::RootContextFactory * >(argp3);
    try {
      result = (*arg1)->getRelativeContext((std::string const &)*arg2,arg3);
    }
    catch(Ferris::NoSuchSubContext &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::NoSuchSubContext(static_cast< const Ferris::NoSuchSubContext& >(_e))),SWIGTYPE_p_Ferris__NoSuchSubContext,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getRelativeContext__SWIG_1) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_getRelativeContext(self,xdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getRelativeContext" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_getRelativeContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_getRelativeContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    try {
      result = (*arg1)->getRelativeContext((std::string const &)*arg2);
    }
    catch(Ferris::NoSuchSubContext &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::NoSuchSubContext(static_cast< const Ferris::NoSuchSubContext& >(_e))),SWIGTYPE_p_Ferris__NoSuchSubContext,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getRelativeContext) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Ferris__RootContextFactory, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_getRelativeContext__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_getRelativeContext__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Context_getRelativeContext'");
  XSRETURN(0);
}


XS(_wrap_Context_getSubContextNames) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::ContextCollection::SubContextNames_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getSubContextNames(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getSubContextNames" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (Ferris::ContextCollection::SubContextNames_t *) &(*arg1)->getSubContextNames();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getSubContext) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_getSubContext(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getSubContext" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_getSubContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_getSubContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    try {
      result = (*arg1)->getSubContext((std::string const &)*arg2);
    }
    catch(Ferris::NoSuchSubContext &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::NoSuchSubContext(static_cast< const Ferris::NoSuchSubContext& >(_e))),SWIGTYPE_p_Ferris__NoSuchSubContext,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Context_priv_isSubContextBound) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_priv_isSubContextBound(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_priv_isSubContextBound" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_priv_isSubContextBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_priv_isSubContextBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(*arg1)->priv_isSubContextBound((std::string const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Context_isSubContextBound) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_isSubContextBound(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_isSubContextBound" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_isSubContextBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_isSubContextBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(*arg1)->isSubContextBound((std::string const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Context_read__SWIG_0) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_read(self,force);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_read" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Context_read" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (*arg1)->read(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_read__SWIG_1) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_read(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_read" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    (*arg1)->read();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_read) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_read__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_read__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Context_read'");
  XSRETURN(0);
}


XS(_wrap_Context_guessSize) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    long result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_guessSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_guessSize" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (long)(*arg1)->guessSize();
    ST(argvi) = SWIG_From_long  SWIG_PERL_CALL_ARGS_1(static_cast< long >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_hasSubContexts) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_hasSubContexts(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_hasSubContexts" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (bool)(*arg1)->hasSubContexts();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_SubContextCount) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_SubContextCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_SubContextCount" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (int)(*arg1)->SubContextCount();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_AddRef) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_AddRef(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_AddRef" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (*arg1)->AddRef();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_Release) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_Release(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_Release" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (*arg1)->Release();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_all_attributes_have_single_ref_count) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_all_attributes_have_single_ref_count(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_all_attributes_have_single_ref_count" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (bool)(*arg1)->all_attributes_have_single_ref_count();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_isAttributeBound__SWIG_0) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Context_isAttributeBound(self,rdn,createIfNotThere);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_isAttributeBound" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_isAttributeBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_isAttributeBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Context_isAttributeBound" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    try {
      result = (bool)(*arg1)->isAttributeBound((std::string const &)*arg2,arg3);
    }
    catch(Ferris::NoSuchAttribute &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::NoSuchAttribute(static_cast< const Ferris::NoSuchAttribute& >(_e))),SWIGTYPE_p_Ferris__NoSuchAttribute,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_isAttributeBound__SWIG_1) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_isAttributeBound(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_isAttributeBound" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_isAttributeBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_isAttributeBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    try {
      result = (bool)(*arg1)->isAttributeBound((std::string const &)*arg2);
    }
    catch(Ferris::NoSuchAttribute &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::NoSuchAttribute(static_cast< const Ferris::NoSuchAttribute& >(_e))),SWIGTYPE_p_Ferris__NoSuchAttribute,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Context_isAttributeBound) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_isAttributeBound__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_isAttributeBound__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Context_isAttributeBound'");
  XSRETURN(0);
}


XS(_wrap_Context_getAttribute) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_attribute result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_getAttribute(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getAttribute" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_getAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_getAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    try {
      result = (*arg1)->getAttribute((std::string const &)*arg2);
    }
    catch(Ferris::NoSuchAttribute &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::NoSuchAttribute(static_cast< const Ferris::NoSuchAttribute& >(_e))),SWIGTYPE_p_Ferris__NoSuchAttribute,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_attribute(static_cast< const Ferris::fh_attribute& >(result))), SWIGTYPE_p_Ferris__fh_attribute, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getAttributeCount) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getAttributeCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getAttributeCount" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (int)(*arg1)->getAttributeCount();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getAttributeRootEmblem) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::fh_emblem result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getAttributeRootEmblem(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getAttributeRootEmblem" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (*arg1)->getAttributeRootEmblem();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_emblem(static_cast< const Ferris::fh_emblem& >(result))), SWIGTYPE_p_Ferris__fh_emblem, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_Emit_Changed) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    NamingEvent_Changed *arg2 = (NamingEvent_Changed *) 0 ;
    std::string *arg3 = 0 ;
    std::string *arg4 = 0 ;
    sigc::trackable *arg5 = (sigc::trackable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: Context_Emit_Changed(self,e,olddn,newdn,ExtraData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_Emit_Changed" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_NamingEvent_Changed, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_Emit_Changed" "', argument " "2"" of type '" "NamingEvent_Changed *""'"); 
    }
    arg2 = reinterpret_cast< NamingEvent_Changed * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Context_Emit_Changed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_Emit_Changed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Context_Emit_Changed" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_Emit_Changed" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      arg4 = ptr;
    }
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_sigc__trackable, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Context_Emit_Changed" "', argument " "5"" of type '" "sigc::trackable *""'"); 
    }
    arg5 = reinterpret_cast< sigc::trackable * >(argp5);
    (*arg1)->Emit_Changed(arg2,(std::string const &)*arg3,(std::string const &)*arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    if (SWIG_IsNewObj(res4)) delete arg4;
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    if (SWIG_IsNewObj(res4)) delete arg4;
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_Emit_Deleted) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    NamingEvent_Deleted *arg2 = (NamingEvent_Deleted *) 0 ;
    std::string arg3 ;
    std::string arg4 ;
    sigc::trackable *arg5 = (sigc::trackable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: Context_Emit_Deleted(self,e,olddn,newdn,ExtraData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_Emit_Deleted" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_NamingEvent_Deleted, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_Emit_Deleted" "', argument " "2"" of type '" "NamingEvent_Deleted *""'"); 
    }
    arg2 = reinterpret_cast< NamingEvent_Deleted * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Context_Emit_Deleted" "', argument " "3"" of type '" "std::string""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Context_Emit_Deleted" "', argument " "4"" of type '" "std::string""'"); 
      }
      arg4 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_sigc__trackable, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Context_Emit_Deleted" "', argument " "5"" of type '" "sigc::trackable *""'"); 
    }
    arg5 = reinterpret_cast< sigc::trackable * >(argp5);
    (*arg1)->Emit_Deleted(arg2,arg3,arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_Emit_Start_Execute) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    NamingEvent_Start_Execute *arg2 = (NamingEvent_Start_Execute *) 0 ;
    std::string arg3 ;
    std::string arg4 ;
    sigc::trackable *arg5 = (sigc::trackable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: Context_Emit_Start_Execute(self,e,olddn,newdn,ExtraData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_Emit_Start_Execute" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_NamingEvent_Start_Execute, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_Emit_Start_Execute" "', argument " "2"" of type '" "NamingEvent_Start_Execute *""'"); 
    }
    arg2 = reinterpret_cast< NamingEvent_Start_Execute * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Context_Emit_Start_Execute" "', argument " "3"" of type '" "std::string""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Context_Emit_Start_Execute" "', argument " "4"" of type '" "std::string""'"); 
      }
      arg4 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_sigc__trackable, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Context_Emit_Start_Execute" "', argument " "5"" of type '" "sigc::trackable *""'"); 
    }
    arg5 = reinterpret_cast< sigc::trackable * >(argp5);
    (*arg1)->Emit_Start_Execute(arg2,arg3,arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_Emit_Stop_Execute) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    NamingEvent_Stop_Execute *arg2 = (NamingEvent_Stop_Execute *) 0 ;
    std::string arg3 ;
    std::string arg4 ;
    sigc::trackable *arg5 = (sigc::trackable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: Context_Emit_Stop_Execute(self,e,olddn,newdn,ExtraData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_Emit_Stop_Execute" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_NamingEvent_Stop_Execute, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_Emit_Stop_Execute" "', argument " "2"" of type '" "NamingEvent_Stop_Execute *""'"); 
    }
    arg2 = reinterpret_cast< NamingEvent_Stop_Execute * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Context_Emit_Stop_Execute" "', argument " "3"" of type '" "std::string""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Context_Emit_Stop_Execute" "', argument " "4"" of type '" "std::string""'"); 
      }
      arg4 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_sigc__trackable, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Context_Emit_Stop_Execute" "', argument " "5"" of type '" "sigc::trackable *""'"); 
    }
    arg5 = reinterpret_cast< sigc::trackable * >(argp5);
    (*arg1)->Emit_Stop_Execute(arg2,arg3,arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_Emit_Created) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    NamingEvent_Created *arg2 = (NamingEvent_Created *) 0 ;
    Ferris::fh_context *arg3 = 0 ;
    std::string arg4 ;
    std::string arg5 ;
    sigc::trackable *arg6 = (sigc::trackable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp6 = 0 ;
    int res6 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: Context_Emit_Created(self,e,newc,olddn,newdn,ExtraData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_Emit_Created" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_NamingEvent_Created, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_Emit_Created" "', argument " "2"" of type '" "NamingEvent_Created *""'"); 
    }
    arg2 = reinterpret_cast< NamingEvent_Created * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Ferris__fh_context,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Context_Emit_Created" "', argument " "3"" of type '" "Ferris::fh_context const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_Emit_Created" "', argument " "3"" of type '" "Ferris::fh_context const &""'"); 
    }
    arg3 = reinterpret_cast< Ferris::fh_context * >(argp3);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Context_Emit_Created" "', argument " "4"" of type '" "std::string""'"); 
      }
      arg4 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Context_Emit_Created" "', argument " "5"" of type '" "std::string""'"); 
      }
      arg5 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    res6 = SWIG_ConvertPtr(ST(5), &argp6,SWIGTYPE_p_sigc__trackable, 0 |  0 );
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "Context_Emit_Created" "', argument " "6"" of type '" "sigc::trackable *""'"); 
    }
    arg6 = reinterpret_cast< sigc::trackable * >(argp6);
    (*arg1)->Emit_Created(arg2,(Ferris::fh_context const &)*arg3,arg4,arg5,arg6);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_Emit_Moved) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    NamingEvent_Moved *arg2 = (NamingEvent_Moved *) 0 ;
    std::string arg3 ;
    std::string arg4 ;
    sigc::trackable *arg5 = (sigc::trackable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: Context_Emit_Moved(self,e,olddn,newdn,ExtraData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_Emit_Moved" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_NamingEvent_Moved, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_Emit_Moved" "', argument " "2"" of type '" "NamingEvent_Moved *""'"); 
    }
    arg2 = reinterpret_cast< NamingEvent_Moved * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Context_Emit_Moved" "', argument " "3"" of type '" "std::string""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Context_Emit_Moved" "', argument " "4"" of type '" "std::string""'"); 
      }
      arg4 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_sigc__trackable, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Context_Emit_Moved" "', argument " "5"" of type '" "sigc::trackable *""'"); 
    }
    arg5 = reinterpret_cast< sigc::trackable * >(argp5);
    (*arg1)->Emit_Moved(arg2,arg3,arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_Emit_Exists) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    NamingEvent_Exists *arg2 = (NamingEvent_Exists *) 0 ;
    Ferris::fh_context *arg3 = 0 ;
    std::string arg4 ;
    std::string arg5 ;
    sigc::trackable *arg6 = (sigc::trackable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp6 = 0 ;
    int res6 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: Context_Emit_Exists(self,e,newc,olddn,newdn,ExtraData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_Emit_Exists" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_NamingEvent_Exists, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_Emit_Exists" "', argument " "2"" of type '" "NamingEvent_Exists *""'"); 
    }
    arg2 = reinterpret_cast< NamingEvent_Exists * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Ferris__fh_context,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Context_Emit_Exists" "', argument " "3"" of type '" "Ferris::fh_context const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_Emit_Exists" "', argument " "3"" of type '" "Ferris::fh_context const &""'"); 
    }
    arg3 = reinterpret_cast< Ferris::fh_context * >(argp3);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Context_Emit_Exists" "', argument " "4"" of type '" "std::string""'"); 
      }
      arg4 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Context_Emit_Exists" "', argument " "5"" of type '" "std::string""'"); 
      }
      arg5 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    res6 = SWIG_ConvertPtr(ST(5), &argp6,SWIGTYPE_p_sigc__trackable, 0 |  0 );
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "Context_Emit_Exists" "', argument " "6"" of type '" "sigc::trackable *""'"); 
    }
    arg6 = reinterpret_cast< sigc::trackable * >(argp6);
    (*arg1)->Emit_Exists(arg2,(Ferris::fh_context const &)*arg3,arg4,arg5,arg6);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_Emit_Start_Reading_Context) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    NamingEvent_Start_Reading_Context *arg2 = (NamingEvent_Start_Reading_Context *) 0 ;
    sigc::trackable *arg3 = (sigc::trackable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Context_Emit_Start_Reading_Context(self,e,ExtraData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_Emit_Start_Reading_Context" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_NamingEvent_Start_Reading_Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_Emit_Start_Reading_Context" "', argument " "2"" of type '" "NamingEvent_Start_Reading_Context *""'"); 
    }
    arg2 = reinterpret_cast< NamingEvent_Start_Reading_Context * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_sigc__trackable, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Context_Emit_Start_Reading_Context" "', argument " "3"" of type '" "sigc::trackable *""'"); 
    }
    arg3 = reinterpret_cast< sigc::trackable * >(argp3);
    (*arg1)->Emit_Start_Reading_Context(arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_Emit_Stop_Reading_Context) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    NamingEvent_Stop_Reading_Context *arg2 = (NamingEvent_Stop_Reading_Context *) 0 ;
    sigc::trackable *arg3 = (sigc::trackable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Context_Emit_Stop_Reading_Context(self,e,ExtraData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_Emit_Stop_Reading_Context" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_NamingEvent_Stop_Reading_Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_Emit_Stop_Reading_Context" "', argument " "2"" of type '" "NamingEvent_Stop_Reading_Context *""'"); 
    }
    arg2 = reinterpret_cast< NamingEvent_Stop_Reading_Context * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_sigc__trackable, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Context_Emit_Stop_Reading_Context" "', argument " "3"" of type '" "sigc::trackable *""'"); 
    }
    arg3 = reinterpret_cast< sigc::trackable * >(argp3);
    (*arg1)->Emit_Stop_Reading_Context(arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getURL) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getURL(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getURL" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (*arg1)->getURL();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_SubCreate_file) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    Ferris::fh_context arg2 ;
    Ferris::fh_context arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Context_SubCreate_file(self,c,md);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_SubCreate_file" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_SubCreate_file" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_SubCreate_file" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Context_SubCreate_file" "', argument " "3"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_SubCreate_file" "', argument " "3"" of type '" "Ferris::fh_context""'");
      } else {
        arg3 = *(reinterpret_cast< Ferris::fh_context * >(argp3));
      }
    }
    result = (*arg1)->SubCreate_file(arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_dumpRefDebugData) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_dumpRefDebugData(self,ss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_dumpRefDebugData" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_dumpRefDebugData" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_dumpRefDebugData" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    (*arg1)->dumpRefDebugData(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_splitPath) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< std::list< std::string > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_splitPath(self,dn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_splitPath" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_splitPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_splitPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->splitPath((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::Context::SplitPath_t(static_cast< const Ferris::Context::SplitPath_t& >(result))), SWIGTYPE_p_std__listT_std__string_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Context_unSplitPath) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    Ferris::Context::SplitPath_t *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_unSplitPath(self,pa);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_unSplitPath" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__listT_std__string_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_unSplitPath" "', argument " "2"" of type '" "Ferris::Context::SplitPath_t const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_unSplitPath" "', argument " "2"" of type '" "Ferris::Context::SplitPath_t const &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context::SplitPath_t * >(argp2);
    result = (*arg1)->unSplitPath((Ferris::Context::SplitPath_t const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getMimeType__SWIG_0) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_getMimeType(self,fromContent);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getMimeType" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Context_getMimeType" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (*arg1)->getMimeType(arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getMimeType__SWIG_1) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getMimeType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getMimeType" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (*arg1)->getMimeType();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getMimeType) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_getMimeType__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_getMimeType__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Context_getMimeType'");
  XSRETURN(0);
}


XS(_wrap_Context_getFileType) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getFileType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getFileType" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (*arg1)->getFileType();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getMedallion) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::fh_medallion result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getMedallion(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getMedallion" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (*arg1)->getMedallion();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_medallion(static_cast< const Ferris::fh_medallion& >(result))), SWIGTYPE_p_Ferris__fh_medallion, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_hasMedallion) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_hasMedallion(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_hasMedallion" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (bool)(*arg1)->hasMedallion();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getNamespacePrefixes) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< std::string > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getNamespacePrefixes(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getNamespacePrefixes" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (*arg1)->getNamespacePrefixes();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::stringlist_t(static_cast< const Ferris::stringlist_t& >(result))), SWIGTYPE_p_std__listT_std__string_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getBranchFileSystem) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getBranchFileSystem(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getBranchFileSystem" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (*arg1)->getBranchFileSystem();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getNameExtension) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getNameExtension(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getNameExtension" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (*arg1)->getNameExtension();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getImage) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Image,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getImage(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getImage" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (*arg1)->getImage();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_image(static_cast< const Ferris::fh_image& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getImageOrNULL) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Image,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getImageOrNULL(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getImageOrNULL" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (*arg1)->getImageOrNULL();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_image(static_cast< const Ferris::fh_image& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_priv_getImage) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Image,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_priv_getImage(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_priv_getImage" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (*arg1)->priv_getImage();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_image(static_cast< const Ferris::fh_image& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_taintImage) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Image,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_taintImage(self,im);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_taintImage" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_taintImage" "', argument " "2"" of type '" "Ferris::fh_image""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_taintImage" "', argument " "2"" of type '" "Ferris::fh_image""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_image * >(argp2));
      }
    }
    (*arg1)->taintImage(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_RegisterImageEAGeneratorModule) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    bool arg3 ;
    std::string *arg4 = 0 ;
    std::string *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int res5 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: Context_RegisterImageEAGeneratorModule(self,ext,writable,implname,shortname);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_RegisterImageEAGeneratorModule" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_RegisterImageEAGeneratorModule" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_RegisterImageEAGeneratorModule" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Context_RegisterImageEAGeneratorModule" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    {
      std::string *ptr = (std::string *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Context_RegisterImageEAGeneratorModule" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_RegisterImageEAGeneratorModule" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      arg4 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Context_RegisterImageEAGeneratorModule" "', argument " "5"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_RegisterImageEAGeneratorModule" "', argument " "5"" of type '" "std::string const &""'"); 
      }
      arg5 = ptr;
    }
    result = (bool)(*arg1)->RegisterImageEAGeneratorModule((std::string const &)*arg2,arg3,(std::string const &)*arg4,(std::string const &)*arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    if (SWIG_IsNewObj(res4)) delete arg4;
    if (SWIG_IsNewObj(res5)) delete arg5;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    if (SWIG_IsNewObj(res4)) delete arg4;
    if (SWIG_IsNewObj(res5)) delete arg5;
    SWIG_croak_null();
  }
}


XS(_wrap_Context_UnrollRegisteredImageEAGeneratorModule) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    bool arg3 ;
    std::string *arg4 = 0 ;
    Ferris::Context::f_imageEAGenerator *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    void *argp5 ;
    int res5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: Context_UnrollRegisteredImageEAGeneratorModule(self,ext,writable,implname,f);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_UnrollRegisteredImageEAGeneratorModule" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_UnrollRegisteredImageEAGeneratorModule" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_UnrollRegisteredImageEAGeneratorModule" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Context_UnrollRegisteredImageEAGeneratorModule" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    {
      std::string *ptr = (std::string *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Context_UnrollRegisteredImageEAGeneratorModule" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_UnrollRegisteredImageEAGeneratorModule" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      arg4 = ptr;
    }
    res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_Loki__FunctorT_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Context_UnrollRegisteredImageEAGeneratorModule" "', argument " "5"" of type '" "Ferris::Context::f_imageEAGenerator const &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_UnrollRegisteredImageEAGeneratorModule" "', argument " "5"" of type '" "Ferris::Context::f_imageEAGenerator const &""'"); 
    }
    arg5 = reinterpret_cast< Ferris::Context::f_imageEAGenerator * >(argp5);
    result = (bool)(*arg1)->UnrollRegisteredImageEAGeneratorModule((std::string const &)*arg2,arg3,(std::string const &)*arg4,(Ferris::Context::f_imageEAGenerator const &)*arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    if (SWIG_IsNewObj(res4)) delete arg4;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    if (SWIG_IsNewObj(res4)) delete arg4;
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_isCompressedContext) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_isCompressedContext(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_isCompressedContext" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (bool)(*arg1)->isCompressedContext();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_addHandlableToBeReleasedWithContext) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    Ferris::Handlable *arg2 = (Ferris::Handlable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_addHandlableToBeReleasedWithContext(self,h);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_addHandlableToBeReleasedWithContext" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Handlable, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_addHandlableToBeReleasedWithContext" "', argument " "2"" of type '" "Ferris::Handlable *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Handlable * >(argp2);
    (*arg1)->addHandlableToBeReleasedWithContext(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_SubCreate_dir) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    Ferris::fh_context arg2 ;
    Ferris::fh_context arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Context_SubCreate_dir(self,c,md);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_SubCreate_dir" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_SubCreate_dir" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_SubCreate_dir" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Context_SubCreate_dir" "', argument " "3"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_SubCreate_dir" "', argument " "3"" of type '" "Ferris::fh_context""'");
      } else {
        arg3 = *(reinterpret_cast< Ferris::fh_context * >(argp3));
      }
    }
    result = (*arg1)->SubCreate_dir(arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_dumpTree) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_dumpTree(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_dumpTree" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    (*arg1)->dumpTree();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getLastPartOfName) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_getLastPartOfName(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getLastPartOfName" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_getLastPartOfName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_getLastPartOfName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->getLastPartOfName((std::string const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Context_appendToPath__SWIG_0) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: Context_appendToPath(self,p,d,allowDirToBeAbsolute);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_appendToPath" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_appendToPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_appendToPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Context_appendToPath" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_appendToPath" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Context_appendToPath" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = (*arg1)->appendToPath((std::string const &)*arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_appendToPath__SWIG_1) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Context_appendToPath(self,p,d);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_appendToPath" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_appendToPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_appendToPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Context_appendToPath" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_appendToPath" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (*arg1)->appendToPath((std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_Context_appendToPath) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_appendToPath__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_appendToPath__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Context_appendToPath'");
  XSRETURN(0);
}


XS(_wrap_Context_getIStream__SWIG_0) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    Ferris::ferris_ios::openmode arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_getIStream(self,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getIStream" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Context_getIStream" "', argument " "2"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg2 = static_cast< Ferris::ferris_ios::openmode >(val2);
    try {
      result = (*arg1)->getIStream(arg2);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getIStream__SWIG_1) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getIStream(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getIStream" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    try {
      result = (*arg1)->getIStream();
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getIStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_getIStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_getIStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Context_getIStream'");
  XSRETURN(0);
}


XS(_wrap_Context_getLocalIStream__SWIG_0) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::ferris_ios::openmode arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    unsigned long long val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Context_getLocalIStream(self,new_dn,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getLocalIStream" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_getLocalIStream" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_getLocalIStream" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    ecode3 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Context_getLocalIStream" "', argument " "3"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg3 = static_cast< Ferris::ferris_ios::openmode >(val3);
    try {
      result = (*arg1)->getLocalIStream(*arg2,arg3);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getLocalIStream__SWIG_1) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_getLocalIStream(self,new_dn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getLocalIStream" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Context_getLocalIStream" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Context_getLocalIStream" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    try {
      result = (*arg1)->getLocalIStream(*arg2);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getLocalIStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_getLocalIStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_getLocalIStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Context_getLocalIStream'");
  XSRETURN(0);
}


XS(_wrap_Context_getIOStream__SWIG_0) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    Ferris::ferris_ios::openmode arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_getIOStream(self,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getIOStream" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Context_getIOStream" "', argument " "2"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg2 = static_cast< Ferris::ferris_ios::openmode >(val2);
    try {
      result = (*arg1)->getIOStream(arg2);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::AttributeNotWritable &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeNotWritable(static_cast< const Ferris::AttributeNotWritable& >(_e))),SWIGTYPE_p_Ferris__AttributeNotWritable,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getIOStream__SWIG_1) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getIOStream(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getIOStream" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    try {
      result = (*arg1)->getIOStream();
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::AttributeNotWritable &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeNotWritable(static_cast< const Ferris::AttributeNotWritable& >(_e))),SWIGTYPE_p_Ferris__AttributeNotWritable,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getIOStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_getIOStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Context_getIOStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Context_getIOStream'");
  XSRETURN(0);
}


XS(_wrap_Context_checkOpenModeSupported) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    Ferris::ferris_ios::openmode arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Context_checkOpenModeSupported(self,userm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_checkOpenModeSupported" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Context_checkOpenModeSupported" "', argument " "2"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg2 = static_cast< Ferris::ferris_ios::openmode >(val2);
    result = (bool)(*arg1)->checkOpenModeSupported(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getSupportedOpenModes) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::ferris_ios::openmode result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getSupportedOpenModes(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getSupportedOpenModes" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (Ferris::ferris_ios::openmode)(*arg1)->getSupportedOpenModes();
    ST(argvi) = SWIG_From_unsigned_SS_long_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long long >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getDirPath) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getDirPath(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getDirPath" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    try {
      result = (*arg1)->getDirPath();
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getSubContextCount) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getSubContextCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getSubContextCount" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (int)(*arg1)->getSubContextCount();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_empty) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_empty(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_empty" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (bool)(*arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getNamingEvent_MedallionUpdated_Sig) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_MedallionUpdated_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getNamingEvent_MedallionUpdated_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getNamingEvent_MedallionUpdated_Sig" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_MedallionUpdated_Sig_t *) &(*arg1)->getNamingEvent_MedallionUpdated_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal1T_void_Ferris__fh_context_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getNamingEvent_Changed_Sig) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Changed_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getNamingEvent_Changed_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getNamingEvent_Changed_Sig" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Changed_Sig_t *) &(*arg1)->getNamingEvent_Changed_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal3T_void_NamingEvent_Changed_p_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getNamingEvent_Deleted_Sig) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Deleted_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getNamingEvent_Deleted_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getNamingEvent_Deleted_Sig" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Deleted_Sig_t *) &(*arg1)->getNamingEvent_Deleted_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal3T_void_NamingEvent_Deleted_p_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getNamingEvent_Start_Execute_Sig) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Start_Execute_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getNamingEvent_Start_Execute_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getNamingEvent_Start_Execute_Sig" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Start_Execute_Sig_t *) &(*arg1)->getNamingEvent_Start_Execute_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal3T_void_NamingEvent_Start_Execute_p_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getNamingEvent_Stop_Execute_Sig) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Stop_Execute_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getNamingEvent_Stop_Execute_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getNamingEvent_Stop_Execute_Sig" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Stop_Execute_Sig_t *) &(*arg1)->getNamingEvent_Stop_Execute_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal3T_void_NamingEvent_Stop_Execute_p_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getNamingEvent_Created_Sig) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Created_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getNamingEvent_Created_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getNamingEvent_Created_Sig" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Created_Sig_t *) &(*arg1)->getNamingEvent_Created_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal4T_void_NamingEvent_Created_p_Ferris__fh_context_const_R_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getNamingEvent_Moved_Sig) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Moved_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getNamingEvent_Moved_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getNamingEvent_Moved_Sig" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Moved_Sig_t *) &(*arg1)->getNamingEvent_Moved_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal3T_void_NamingEvent_Moved_p_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getNamingEvent_Exists_Sig) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Exists_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getNamingEvent_Exists_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getNamingEvent_Exists_Sig" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Exists_Sig_t *) &(*arg1)->getNamingEvent_Exists_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal4T_void_NamingEvent_Exists_p_Ferris__fh_context_const_R_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getNamingEvent_Start_Reading_Context_Sig) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Start_Reading_Context_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getNamingEvent_Start_Reading_Context_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getNamingEvent_Start_Reading_Context_Sig" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Start_Reading_Context_Sig_t *) &(*arg1)->getNamingEvent_Start_Reading_Context_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal1T_void_NamingEvent_Start_Reading_Context_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getNamingEvent_Stop_Reading_Context_Sig) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Stop_Reading_Context_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getNamingEvent_Stop_Reading_Context_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getNamingEvent_Stop_Reading_Context_Sig" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Stop_Reading_Context_Sig_t *) &(*arg1)->getNamingEvent_Stop_Reading_Context_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal1T_void_NamingEvent_Stop_Reading_Context_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Context_getContextEvent_Headers_Received_Sig) {
  {
    Ferris::fh_context *arg1 = (Ferris::fh_context *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::ContextEvent_Headers_Received_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Context_getContextEvent_Headers_Received_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Context_getContextEvent_Headers_Received_Sig" "', argument " "1"" of type '" "Ferris::fh_context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    result = (Ferris::MutableCollectionEvents::ContextEvent_Headers_Received_Sig_t *) &(*arg1)->getContextEvent_Headers_Received_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal2T_void_Ferris__fh_context_Ferris__stringset_t_const_R_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy___deref__) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::AttributeProxy *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeProxy___deref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy___deref__" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    result = (Ferris::AttributeProxy *)(arg1)->operator ->();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__AttributeProxy, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_AddRef) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeProxy_AddRef(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_AddRef" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    result = (*arg1)->AddRef();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_Release) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeProxy_Release(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_Release" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    result = (*arg1)->Release();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_getIStream__SWIG_0) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    Ferris::ferris_ios::openmode arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: AttributeProxy_getIStream(self,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_getIStream" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AttributeProxy_getIStream" "', argument " "2"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg2 = static_cast< Ferris::ferris_ios::openmode >(val2);
    try {
      result = (*arg1)->getIStream(arg2);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_getIStream__SWIG_1) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeProxy_getIStream(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_getIStream" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    try {
      result = (*arg1)->getIStream();
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_getIStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeProxy_getIStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeProxy_getIStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'AttributeProxy_getIStream'");
  XSRETURN(0);
}


XS(_wrap_AttributeProxy_getLocalIStream__SWIG_0) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::ferris_ios::openmode arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    unsigned long long val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: AttributeProxy_getLocalIStream(self,new_dn,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_getLocalIStream" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeProxy_getLocalIStream" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeProxy_getLocalIStream" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    ecode3 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AttributeProxy_getLocalIStream" "', argument " "3"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg3 = static_cast< Ferris::ferris_ios::openmode >(val3);
    try {
      result = (*arg1)->getLocalIStream(*arg2,arg3);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_getLocalIStream__SWIG_1) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: AttributeProxy_getLocalIStream(self,new_dn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_getLocalIStream" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeProxy_getLocalIStream" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeProxy_getLocalIStream" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    try {
      result = (*arg1)->getLocalIStream(*arg2);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_getLocalIStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeProxy_getLocalIStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeProxy_getLocalIStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'AttributeProxy_getLocalIStream'");
  XSRETURN(0);
}


XS(_wrap_AttributeProxy_getIOStream__SWIG_0) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    Ferris::ferris_ios::openmode arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: AttributeProxy_getIOStream(self,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_getIOStream" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AttributeProxy_getIOStream" "', argument " "2"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg2 = static_cast< Ferris::ferris_ios::openmode >(val2);
    try {
      result = (*arg1)->getIOStream(arg2);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::AttributeNotWritable &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeNotWritable(static_cast< const Ferris::AttributeNotWritable& >(_e))),SWIGTYPE_p_Ferris__AttributeNotWritable,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_getIOStream__SWIG_1) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeProxy_getIOStream(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_getIOStream" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    try {
      result = (*arg1)->getIOStream();
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::AttributeNotWritable &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeNotWritable(static_cast< const Ferris::AttributeNotWritable& >(_e))),SWIGTYPE_p_Ferris__AttributeNotWritable,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_getIOStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeProxy_getIOStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeProxy_getIOStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'AttributeProxy_getIOStream'");
  XSRETURN(0);
}


XS(_wrap_AttributeProxy_getDirName) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeProxy_getDirName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_getDirName" "', argument " "1"" of type '" "Ferris::fh_attribute const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    result = (std::string *) &(*arg1)->getDirName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_getDirPath) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeProxy_getDirPath(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_getDirPath" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    try {
      result = (*arg1)->getDirPath();
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_checkOpenModeSupported) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    Ferris::ferris_ios::openmode arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: AttributeProxy_checkOpenModeSupported(self,userm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_checkOpenModeSupported" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AttributeProxy_checkOpenModeSupported" "', argument " "2"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg2 = static_cast< Ferris::ferris_ios::openmode >(val2);
    result = (bool)(*arg1)->checkOpenModeSupported(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_getSupportedOpenModes) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::ferris_ios::openmode result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeProxy_getSupportedOpenModes(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_getSupportedOpenModes" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    result = (Ferris::ferris_ios::openmode)(*arg1)->getSupportedOpenModes();
    ST(argvi) = SWIG_From_unsigned_SS_long_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long long >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_getLastPartOfName) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: AttributeProxy_getLastPartOfName(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_getLastPartOfName" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeProxy_getLastPartOfName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeProxy_getLastPartOfName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->getLastPartOfName((std::string const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_appendToPath__SWIG_0) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: AttributeProxy_appendToPath(self,p,d,allowDirToBeAbsolute);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_appendToPath" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeProxy_appendToPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeProxy_appendToPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeProxy_appendToPath" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeProxy_appendToPath" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "AttributeProxy_appendToPath" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = (*arg1)->appendToPath((std::string const &)*arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_appendToPath__SWIG_1) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: AttributeProxy_appendToPath(self,p,d);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_appendToPath" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeProxy_appendToPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeProxy_appendToPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeProxy_appendToPath" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeProxy_appendToPath" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (*arg1)->appendToPath((std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_appendToPath) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeProxy_appendToPath__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeProxy_appendToPath__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'AttributeProxy_appendToPath'");
  XSRETURN(0);
}


XS(_wrap_AttributeProxy_getParent) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Attribute::Parent_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeProxy_getParent(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_getParent" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    try {
      result = (Ferris::Attribute::Parent_t)(*arg1)->getParent();
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Context, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_isParentBound) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeProxy_isParentBound(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_isParentBound" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    result = (bool)(*arg1)->isParentBound();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_copyTo__SWIG_0) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: AttributeProxy_copyTo(self,oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_copyTo" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeProxy_copyTo" "', argument " "2"" of type '" "Ferris::fh_iostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeProxy_copyTo" "', argument " "2"" of type '" "Ferris::fh_iostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_iostream * >(argp2));
      }
    }
    result = (*arg1)->copyTo(arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_copyTo__SWIG_1) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: AttributeProxy_copyTo(self,oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_copyTo" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeProxy_copyTo" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeProxy_copyTo" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    result = (*arg1)->copyTo(arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_ostream(static_cast< const Ferris::fh_ostream& >(result))), SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_copyTo) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeProxy_copyTo__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeProxy_copyTo__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'AttributeProxy_copyTo'");
  XSRETURN(0);
}


XS(_wrap_AttributeProxy_private_AboutToBeDeleted) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeProxy_private_AboutToBeDeleted(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_private_AboutToBeDeleted" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    (*arg1)->private_AboutToBeDeleted();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_getReferenceCount) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeProxy_getReferenceCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_getReferenceCount" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    result = (*arg1)->getReferenceCount();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeProxy_getGenericCloseSig) {
  {
    Ferris::fh_attribute *arg1 = (Ferris::fh_attribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::GenericCloseSignal_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeProxy_getGenericCloseSig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeProxy_getGenericCloseSig" "', argument " "1"" of type '" "Ferris::fh_attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attribute * >(argp1);
    result = (FerrisLoki::Handlable::GenericCloseSignal_t *) &(*arg1)->getGenericCloseSig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal1T_void_FerrisLoki__Handlable_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection___deref__) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::AttributeCollection *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeCollection___deref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection___deref__" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    result = (Ferris::AttributeCollection *)(arg1)->operator ->();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__AttributeCollection, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_getIsNativeContext) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeCollection_getIsNativeContext(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_getIsNativeContext" "', argument " "1"" of type '" "Ferris::fh_attrcol const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    result = (bool)(*arg1)->getIsNativeContext();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_getAttribute) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_attribute result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: AttributeCollection_getAttribute(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_getAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_getAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_getAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    try {
      result = (*arg1)->getAttribute((std::string const &)*arg2);
    }
    catch(Ferris::NoSuchAttribute &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::NoSuchAttribute(static_cast< const Ferris::NoSuchAttribute& >(_e))),SWIGTYPE_p_Ferris__NoSuchAttribute,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_attribute(static_cast< const Ferris::fh_attribute& >(result))), SWIGTYPE_p_Ferris__fh_attribute, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_getAttributeNames) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    Ferris::AttributeCollection::AttributeNames_t *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    Ferris::AttributeCollection::AttributeNames_t *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: AttributeCollection_getAttributeNames(self,ret);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_getAttributeNames" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__listT_std__string_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_getAttributeNames" "', argument " "2"" of type '" "Ferris::AttributeCollection::AttributeNames_t &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_getAttributeNames" "', argument " "2"" of type '" "Ferris::AttributeCollection::AttributeNames_t &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::AttributeCollection::AttributeNames_t * >(argp2);
    result = (Ferris::AttributeCollection::AttributeNames_t *) &(*arg1)->getAttributeNames(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_std__string_t, 0 | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_getAttributeCount) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeCollection_getAttributeCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_getAttributeCount" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    result = (int)(*arg1)->getAttributeCount();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_isAttributeBound__SWIG_0) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: AttributeCollection_isAttributeBound(self,rdn,createIfNotThere);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_isAttributeBound" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_isAttributeBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_isAttributeBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AttributeCollection_isAttributeBound" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    try {
      result = (bool)(*arg1)->isAttributeBound((std::string const &)*arg2,arg3);
    }
    catch(Ferris::NoSuchAttribute &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::NoSuchAttribute(static_cast< const Ferris::NoSuchAttribute& >(_e))),SWIGTYPE_p_Ferris__NoSuchAttribute,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_isAttributeBound__SWIG_1) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: AttributeCollection_isAttributeBound(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_isAttributeBound" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_isAttributeBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_isAttributeBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    try {
      result = (bool)(*arg1)->isAttributeBound((std::string const &)*arg2);
    }
    catch(Ferris::NoSuchAttribute &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::NoSuchAttribute(static_cast< const Ferris::NoSuchAttribute& >(_e))),SWIGTYPE_p_Ferris__NoSuchAttribute,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_isAttributeBound) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_isAttributeBound__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_isAttributeBound__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'AttributeCollection_isAttributeBound'");
  XSRETURN(0);
}


XS(_wrap_AttributeCollection_dumpAttributeNames) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeCollection_dumpAttributeNames(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_dumpAttributeNames" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    (*arg1)->dumpAttributeNames();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_addAttribute__SWIG_0) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::EA_Atom_ReadOnly::GetIStream_Func_t *arg3 = 0 ;
    XSDBasic_t arg4 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 ;
    int res4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: AttributeCollection_addAttribute(self,rdn,f,sct,addToREA);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_addAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom_ReadOnly::GetIStream_Func_t const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom_ReadOnly::GetIStream_Func_t const &""'"); 
    }
    arg3 = reinterpret_cast< Ferris::EA_Atom_ReadOnly::GetIStream_Func_t * >(argp3);
    {
      res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_XSDBasic_t,  0 );
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "XSDBasic_t""'"); 
      }  
      if (!argp4) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "XSDBasic_t""'");
      } else {
        arg4 = *(reinterpret_cast< XSDBasic_t * >(argp4));
      }
    }
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "AttributeCollection_addAttribute" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    result = (bool)(*arg1)->addAttribute((std::string const &)*arg2,(Ferris::EA_Atom_ReadOnly::GetIStream_Func_t const &)*arg3,arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_addAttribute__SWIG_1) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::EA_Atom_ReadOnly::GetIStream_Func_t *arg3 = 0 ;
    XSDBasic_t arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: AttributeCollection_addAttribute(self,rdn,f,sct);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_addAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom_ReadOnly::GetIStream_Func_t const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom_ReadOnly::GetIStream_Func_t const &""'"); 
    }
    arg3 = reinterpret_cast< Ferris::EA_Atom_ReadOnly::GetIStream_Func_t * >(argp3);
    {
      res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_XSDBasic_t,  0 );
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "XSDBasic_t""'"); 
      }  
      if (!argp4) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "XSDBasic_t""'");
      } else {
        arg4 = *(reinterpret_cast< XSDBasic_t * >(argp4));
      }
    }
    result = (bool)(*arg1)->addAttribute((std::string const &)*arg2,(Ferris::EA_Atom_ReadOnly::GetIStream_Func_t const &)*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_addAttribute__SWIG_2) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::EA_Atom_ReadOnly::GetIStream_Func_t *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: AttributeCollection_addAttribute(self,rdn,f);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_addAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom_ReadOnly::GetIStream_Func_t const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom_ReadOnly::GetIStream_Func_t const &""'"); 
    }
    arg3 = reinterpret_cast< Ferris::EA_Atom_ReadOnly::GetIStream_Func_t * >(argp3);
    result = (bool)(*arg1)->addAttribute((std::string const &)*arg2,(Ferris::EA_Atom_ReadOnly::GetIStream_Func_t const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_addAttribute__SWIG_9) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::EA_Atom_ReadOnly::GetIStream_Func_t *arg3 = 0 ;
    Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t *arg4 = 0 ;
    Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t *arg5 = 0 ;
    XSDBasic_t arg6 ;
    bool arg7 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 ;
    int res4 = 0 ;
    void *argp5 ;
    int res5 = 0 ;
    void *argp6 ;
    int res6 = 0 ;
    bool val7 ;
    int ecode7 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 7) || (items > 7)) {
      SWIG_croak("Usage: AttributeCollection_addAttribute(self,rdn,f_i,f_io,f_closed,sct,addToREA);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_addAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom_ReadOnly::GetIStream_Func_t const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom_ReadOnly::GetIStream_Func_t const &""'"); 
    }
    arg3 = reinterpret_cast< Ferris::EA_Atom_ReadOnly::GetIStream_Func_t * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t const &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t const &""'"); 
    }
    arg4 = reinterpret_cast< Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t * >(argp4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_Ferris__EA_Atom_ReadWrite__RWBase_t__IOStreamClosed_Func_t,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "AttributeCollection_addAttribute" "', argument " "5"" of type '" "Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t const &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "5"" of type '" "Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t const &""'"); 
    }
    arg5 = reinterpret_cast< Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t * >(argp5);
    {
      res6 = SWIG_ConvertPtr(ST(5), &argp6, SWIGTYPE_p_XSDBasic_t,  0 );
      if (!SWIG_IsOK(res6)) {
        SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "AttributeCollection_addAttribute" "', argument " "6"" of type '" "XSDBasic_t""'"); 
      }  
      if (!argp6) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "6"" of type '" "XSDBasic_t""'");
      } else {
        arg6 = *(reinterpret_cast< XSDBasic_t * >(argp6));
      }
    }
    ecode7 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(6), &val7);
    if (!SWIG_IsOK(ecode7)) {
      SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "AttributeCollection_addAttribute" "', argument " "7"" of type '" "bool""'");
    } 
    arg7 = static_cast< bool >(val7);
    result = (bool)(*arg1)->addAttribute((std::string const &)*arg2,(Ferris::EA_Atom_ReadOnly::GetIStream_Func_t const &)*arg3,(Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t const &)*arg4,(Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t const &)*arg5,arg6,arg7);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_addAttribute__SWIG_10) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::EA_Atom_ReadOnly::GetIStream_Func_t *arg3 = 0 ;
    Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t *arg4 = 0 ;
    Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t *arg5 = 0 ;
    XSDBasic_t arg6 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 ;
    int res4 = 0 ;
    void *argp5 ;
    int res5 = 0 ;
    void *argp6 ;
    int res6 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: AttributeCollection_addAttribute(self,rdn,f_i,f_io,f_closed,sct);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_addAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom_ReadOnly::GetIStream_Func_t const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom_ReadOnly::GetIStream_Func_t const &""'"); 
    }
    arg3 = reinterpret_cast< Ferris::EA_Atom_ReadOnly::GetIStream_Func_t * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t const &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t const &""'"); 
    }
    arg4 = reinterpret_cast< Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t * >(argp4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_Ferris__EA_Atom_ReadWrite__RWBase_t__IOStreamClosed_Func_t,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "AttributeCollection_addAttribute" "', argument " "5"" of type '" "Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t const &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "5"" of type '" "Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t const &""'"); 
    }
    arg5 = reinterpret_cast< Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t * >(argp5);
    {
      res6 = SWIG_ConvertPtr(ST(5), &argp6, SWIGTYPE_p_XSDBasic_t,  0 );
      if (!SWIG_IsOK(res6)) {
        SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "AttributeCollection_addAttribute" "', argument " "6"" of type '" "XSDBasic_t""'"); 
      }  
      if (!argp6) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "6"" of type '" "XSDBasic_t""'");
      } else {
        arg6 = *(reinterpret_cast< XSDBasic_t * >(argp6));
      }
    }
    result = (bool)(*arg1)->addAttribute((std::string const &)*arg2,(Ferris::EA_Atom_ReadOnly::GetIStream_Func_t const &)*arg3,(Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t const &)*arg4,(Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t const &)*arg5,arg6);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_addAttribute__SWIG_11) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::EA_Atom_ReadOnly::GetIStream_Func_t *arg3 = 0 ;
    Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t *arg4 = 0 ;
    Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 ;
    int res4 = 0 ;
    void *argp5 ;
    int res5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: AttributeCollection_addAttribute(self,rdn,f_i,f_io,f_closed);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_addAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom_ReadOnly::GetIStream_Func_t const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom_ReadOnly::GetIStream_Func_t const &""'"); 
    }
    arg3 = reinterpret_cast< Ferris::EA_Atom_ReadOnly::GetIStream_Func_t * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t const &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t const &""'"); 
    }
    arg4 = reinterpret_cast< Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t * >(argp4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_Ferris__EA_Atom_ReadWrite__RWBase_t__IOStreamClosed_Func_t,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "AttributeCollection_addAttribute" "', argument " "5"" of type '" "Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t const &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "5"" of type '" "Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t const &""'"); 
    }
    arg5 = reinterpret_cast< Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t * >(argp5);
    result = (bool)(*arg1)->addAttribute((std::string const &)*arg2,(Ferris::EA_Atom_ReadOnly::GetIStream_Func_t const &)*arg3,(Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t const &)*arg4,(Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t const &)*arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_addAttribute__SWIG_18) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    XSDBasic_t arg4 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 ;
    int res4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: AttributeCollection_addAttribute(self,rdn,v,sct,addToREA);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_addAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    {
      res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_XSDBasic_t,  0 );
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "XSDBasic_t""'"); 
      }  
      if (!argp4) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "XSDBasic_t""'");
      } else {
        arg4 = *(reinterpret_cast< XSDBasic_t * >(argp4));
      }
    }
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "AttributeCollection_addAttribute" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    result = (bool)(*arg1)->addAttribute((std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_addAttribute__SWIG_19) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    XSDBasic_t arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: AttributeCollection_addAttribute(self,rdn,v,sct);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_addAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    {
      res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_XSDBasic_t,  0 );
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "XSDBasic_t""'"); 
      }  
      if (!argp4) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "XSDBasic_t""'");
      } else {
        arg4 = *(reinterpret_cast< XSDBasic_t * >(argp4));
      }
    }
    result = (bool)(*arg1)->addAttribute((std::string const &)*arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_addAttribute__SWIG_20) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: AttributeCollection_addAttribute(self,rdn,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_addAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(*arg1)->addAttribute((std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_addAttribute__SWIG_21) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    char *arg3 = (char *) 0 ;
    XSDBasic_t arg4 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 ;
    char *buf3 = 0 ;
    int alloc3 = 0 ;
    void *argp4 ;
    int res4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: AttributeCollection_addAttribute(self,rdn,v,sct,addToREA);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_addAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_AsCharPtrAndSize(ST(2), &buf3, NULL, &alloc3);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "char *""'");
    }
    arg3 = reinterpret_cast< char * >(buf3);
    {
      res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_XSDBasic_t,  0 );
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "XSDBasic_t""'"); 
      }  
      if (!argp4) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "XSDBasic_t""'");
      } else {
        arg4 = *(reinterpret_cast< XSDBasic_t * >(argp4));
      }
    }
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "AttributeCollection_addAttribute" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    result = (bool)(*arg1)->addAttribute((std::string const &)*arg2,arg3,arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_addAttribute__SWIG_22) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    char *arg3 = (char *) 0 ;
    XSDBasic_t arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 ;
    char *buf3 = 0 ;
    int alloc3 = 0 ;
    void *argp4 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: AttributeCollection_addAttribute(self,rdn,v,sct);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_addAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_AsCharPtrAndSize(ST(2), &buf3, NULL, &alloc3);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "char *""'");
    }
    arg3 = reinterpret_cast< char * >(buf3);
    {
      res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_XSDBasic_t,  0 );
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "XSDBasic_t""'"); 
      }  
      if (!argp4) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "XSDBasic_t""'");
      } else {
        arg4 = *(reinterpret_cast< XSDBasic_t * >(argp4));
      }
    }
    result = (bool)(*arg1)->addAttribute((std::string const &)*arg2,arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_addAttribute__SWIG_23) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    char *arg3 = (char *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 ;
    char *buf3 = 0 ;
    int alloc3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: AttributeCollection_addAttribute(self,rdn,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_addAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_AsCharPtrAndSize(ST(2), &buf3, NULL, &alloc3);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "char *""'");
    }
    arg3 = reinterpret_cast< char * >(buf3);
    result = (bool)(*arg1)->addAttribute((std::string const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_addAttribute__SWIG_24) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    char *arg3 = (char *) 0 ;
    XSDBasic_t arg4 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 ;
    char *buf3 = 0 ;
    int alloc3 = 0 ;
    void *argp4 ;
    int res4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: AttributeCollection_addAttribute(self,rdn,v,sct,addToREA);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_addAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_AsCharPtrAndSize(ST(2), &buf3, NULL, &alloc3);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "char const *""'");
    }
    arg3 = reinterpret_cast< char * >(buf3);
    {
      res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_XSDBasic_t,  0 );
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "XSDBasic_t""'"); 
      }  
      if (!argp4) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "XSDBasic_t""'");
      } else {
        arg4 = *(reinterpret_cast< XSDBasic_t * >(argp4));
      }
    }
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "AttributeCollection_addAttribute" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    result = (bool)(*arg1)->addAttribute((std::string const &)*arg2,(char const *)arg3,arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_addAttribute__SWIG_25) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    char *arg3 = (char *) 0 ;
    XSDBasic_t arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 ;
    char *buf3 = 0 ;
    int alloc3 = 0 ;
    void *argp4 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: AttributeCollection_addAttribute(self,rdn,v,sct);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_addAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_AsCharPtrAndSize(ST(2), &buf3, NULL, &alloc3);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "char const *""'");
    }
    arg3 = reinterpret_cast< char * >(buf3);
    {
      res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_XSDBasic_t,  0 );
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "XSDBasic_t""'"); 
      }  
      if (!argp4) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "XSDBasic_t""'");
      } else {
        arg4 = *(reinterpret_cast< XSDBasic_t * >(argp4));
      }
    }
    result = (bool)(*arg1)->addAttribute((std::string const &)*arg2,(char const *)arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_addAttribute__SWIG_26) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    char *arg3 = (char *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 ;
    char *buf3 = 0 ;
    int alloc3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: AttributeCollection_addAttribute(self,rdn,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_addAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_AsCharPtrAndSize(ST(2), &buf3, NULL, &alloc3);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "char const *""'");
    }
    arg3 = reinterpret_cast< char * >(buf3);
    result = (bool)(*arg1)->addAttribute((std::string const &)*arg2,(char const *)arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_addAttribute__SWIG_27) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::EA_Atom *arg3 = (Ferris::EA_Atom *) 0 ;
    XSDBasic_t arg4 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 ;
    int res4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: AttributeCollection_addAttribute(self,rdn,atom,sct,addToREA);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_addAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_Ferris__EA_Atom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom *""'"); 
    }
    arg3 = reinterpret_cast< Ferris::EA_Atom * >(argp3);
    {
      res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_XSDBasic_t,  0 );
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "XSDBasic_t""'"); 
      }  
      if (!argp4) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "XSDBasic_t""'");
      } else {
        arg4 = *(reinterpret_cast< XSDBasic_t * >(argp4));
      }
    }
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "AttributeCollection_addAttribute" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    result = (bool)(*arg1)->addAttribute((std::string const &)*arg2,arg3,arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_addAttribute__SWIG_28) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::EA_Atom *arg3 = (Ferris::EA_Atom *) 0 ;
    XSDBasic_t arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 ;
    int res4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: AttributeCollection_addAttribute(self,rdn,atom,sct);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_addAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_Ferris__EA_Atom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom *""'"); 
    }
    arg3 = reinterpret_cast< Ferris::EA_Atom * >(argp3);
    {
      res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_XSDBasic_t,  0 );
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "XSDBasic_t""'"); 
      }  
      if (!argp4) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "4"" of type '" "XSDBasic_t""'");
      } else {
        arg4 = *(reinterpret_cast< XSDBasic_t * >(argp4));
      }
    }
    result = (bool)(*arg1)->addAttribute((std::string const &)*arg2,arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_addAttribute__SWIG_29) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::EA_Atom *arg3 = (Ferris::EA_Atom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: AttributeCollection_addAttribute(self,rdn,atom);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_addAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_addAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_Ferris__EA_Atom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_addAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom *""'"); 
    }
    arg3 = reinterpret_cast< Ferris::EA_Atom * >(argp3);
    result = (bool)(*arg1)->addAttribute((std::string const &)*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_addAttribute) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Ferris__EA_Atom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(2), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(2), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_XSDBasic_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 6;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_6:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Ferris__EA_Atom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_XSDBasic_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 7;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_7:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_XSDBasic_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 8;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_8:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_9;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_9;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(2), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_9;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_XSDBasic_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_9;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 9;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_9:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_10;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_10;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(2), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_10;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_XSDBasic_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_10;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 10;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_10:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_11;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_11;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_11;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_11;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(4), &vptr, SWIGTYPE_p_Ferris__EA_Atom_ReadWrite__RWBase_t__IOStreamClosed_Func_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_11;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 11;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_11:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_12;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_12;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Ferris__EA_Atom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_12;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_XSDBasic_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_12;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_12;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 12;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_12:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_13;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_13;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_13;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_XSDBasic_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_13;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_13;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 13;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_13:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_14;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_14;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_14;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_XSDBasic_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_14;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_14;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 14;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_14:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_15;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_15;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(2), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_15;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_XSDBasic_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_15;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_15;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 15;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_15:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_16;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_16;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(2), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_16;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_XSDBasic_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_16;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_16;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 16;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_16:
    
    if (items == 6) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_17;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_17;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_17;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_17;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(4), &vptr, SWIGTYPE_p_Ferris__EA_Atom_ReadWrite__RWBase_t__IOStreamClosed_Func_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_17;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(5), &vptr, SWIGTYPE_p_XSDBasic_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_17;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 17;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_17:
    
    if (items == 7) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_18;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_18;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_18;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_18;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(4), &vptr, SWIGTYPE_p_Ferris__EA_Atom_ReadWrite__RWBase_t__IOStreamClosed_Func_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_18;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(5), &vptr, SWIGTYPE_p_XSDBasic_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_18;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(6), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_18;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 18;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_18:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_addAttribute__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_addAttribute__SWIG_29); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_addAttribute__SWIG_20); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_addAttribute__SWIG_26); return;
    case 5:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_addAttribute__SWIG_23); return;
    case 6:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_addAttribute__SWIG_1); return;
    case 7:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_addAttribute__SWIG_28); return;
    case 8:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_addAttribute__SWIG_19); return;
    case 9:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_addAttribute__SWIG_25); return;
    case 10:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_addAttribute__SWIG_22); return;
    case 11:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_addAttribute__SWIG_11); return;
    case 12:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_addAttribute__SWIG_27); return;
    case 13:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_addAttribute__SWIG_0); return;
    case 14:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_addAttribute__SWIG_18); return;
    case 15:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_addAttribute__SWIG_21); return;
    case 16:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_addAttribute__SWIG_24); return;
    case 17:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_addAttribute__SWIG_10); return;
    case 18:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_addAttribute__SWIG_9); return;
    }
  }
  
  croak("No matching function for overloaded 'AttributeCollection_addAttribute'");
  XSRETURN(0);
}


XS(_wrap_AttributeCollection_setAttribute__SWIG_0) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::EA_Atom *arg3 = (Ferris::EA_Atom *) 0 ;
    bool arg4 ;
    XSDBasic_t arg5 ;
    bool arg6 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    void *argp5 ;
    int res5 = 0 ;
    bool val6 ;
    int ecode6 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: AttributeCollection_setAttribute(self,rdn,atx,addToREA,sct,isStateLess);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_setAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_setAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_setAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_Ferris__EA_Atom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_setAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom *""'"); 
    }
    arg3 = reinterpret_cast< Ferris::EA_Atom * >(argp3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "AttributeCollection_setAttribute" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    {
      res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_XSDBasic_t,  0 );
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "AttributeCollection_setAttribute" "', argument " "5"" of type '" "XSDBasic_t""'"); 
      }  
      if (!argp5) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_setAttribute" "', argument " "5"" of type '" "XSDBasic_t""'");
      } else {
        arg5 = *(reinterpret_cast< XSDBasic_t * >(argp5));
      }
    }
    ecode6 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "AttributeCollection_setAttribute" "', argument " "6"" of type '" "bool""'");
    } 
    arg6 = static_cast< bool >(val6);
    try {
      result = (bool)(*arg1)->setAttribute((std::string const &)*arg2,arg3,arg4,arg5,arg6);
    }
    catch(Ferris::AttributeAlreadyInUse &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeAlreadyInUse(static_cast< const Ferris::AttributeAlreadyInUse& >(_e))),SWIGTYPE_p_Ferris__AttributeAlreadyInUse,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_setAttribute__SWIG_1) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::EA_Atom *arg3 = (Ferris::EA_Atom *) 0 ;
    bool arg4 ;
    XSDBasic_t arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    void *argp5 ;
    int res5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: AttributeCollection_setAttribute(self,rdn,atx,addToREA,sct);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_setAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_setAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_setAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_Ferris__EA_Atom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_setAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom *""'"); 
    }
    arg3 = reinterpret_cast< Ferris::EA_Atom * >(argp3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "AttributeCollection_setAttribute" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    {
      res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_XSDBasic_t,  0 );
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "AttributeCollection_setAttribute" "', argument " "5"" of type '" "XSDBasic_t""'"); 
      }  
      if (!argp5) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_setAttribute" "', argument " "5"" of type '" "XSDBasic_t""'");
      } else {
        arg5 = *(reinterpret_cast< XSDBasic_t * >(argp5));
      }
    }
    try {
      result = (bool)(*arg1)->setAttribute((std::string const &)*arg2,arg3,arg4,arg5);
    }
    catch(Ferris::AttributeAlreadyInUse &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeAlreadyInUse(static_cast< const Ferris::AttributeAlreadyInUse& >(_e))),SWIGTYPE_p_Ferris__AttributeAlreadyInUse,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_setAttribute__SWIG_2) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::EA_Atom *arg3 = (Ferris::EA_Atom *) 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: AttributeCollection_setAttribute(self,rdn,atx,addToREA);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_setAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_setAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_setAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_Ferris__EA_Atom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_setAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom *""'"); 
    }
    arg3 = reinterpret_cast< Ferris::EA_Atom * >(argp3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "AttributeCollection_setAttribute" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    try {
      result = (bool)(*arg1)->setAttribute((std::string const &)*arg2,arg3,arg4);
    }
    catch(Ferris::AttributeAlreadyInUse &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeAlreadyInUse(static_cast< const Ferris::AttributeAlreadyInUse& >(_e))),SWIGTYPE_p_Ferris__AttributeAlreadyInUse,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_setAttribute) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Ferris__EA_Atom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Ferris__EA_Atom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(4), &vptr, SWIGTYPE_p_XSDBasic_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 6) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_attrcol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Ferris__EA_Atom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(4), &vptr, SWIGTYPE_p_XSDBasic_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_setAttribute__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_setAttribute__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AttributeCollection_setAttribute__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'AttributeCollection_setAttribute'");
  XSRETURN(0);
}


XS(_wrap_AttributeCollection_expandEAName) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: AttributeCollection_expandEAName(self,s,expandInternalFerrisNamespaces);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_expandEAName" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_expandEAName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_expandEAName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AttributeCollection_expandEAName" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (*arg1)->expandEAName((std::string const &)*arg2,arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_setNamespace) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: AttributeCollection_setNamespace(self,prefix,URI);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_setNamespace" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_setNamespace" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_setNamespace" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AttributeCollection_setNamespace" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_setNamespace" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    (*arg1)->setNamespace((std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_resolveNamespace) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: AttributeCollection_resolveNamespace(self,prefix);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_resolveNamespace" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_resolveNamespace" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_resolveNamespace" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->resolveNamespace((std::string const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_removeNamespace) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: AttributeCollection_removeNamespace(self,prefix);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_removeNamespace" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_removeNamespace" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_removeNamespace" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (*arg1)->removeNamespace((std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_getNamespacePrefixes) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< std::string > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeCollection_getNamespacePrefixes(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_getNamespacePrefixes" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    result = (*arg1)->getNamespacePrefixes();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::stringlist_t(static_cast< const Ferris::stringlist_t& >(result))), SWIGTYPE_p_std__listT_std__string_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_isStatelessAttributeBound) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: AttributeCollection_isStatelessAttributeBound(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_isStatelessAttributeBound" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_isStatelessAttributeBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_isStatelessAttributeBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    try {
      result = (bool)(*arg1)->isStatelessAttributeBound((std::string const &)*arg2);
    }
    catch(Ferris::NoSuchAttribute &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::NoSuchAttribute(static_cast< const Ferris::NoSuchAttribute& >(_e))),SWIGTYPE_p_Ferris__NoSuchAttribute,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_unsetAttribute) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: AttributeCollection_unsetAttribute(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_unsetAttribute" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AttributeCollection_unsetAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AttributeCollection_unsetAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (*arg1)->unsetAttribute((std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_getMTime) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeCollection_getMTime(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_getMTime" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    result = (*arg1)->getMTime();
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_getRDFCacheMTime) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeCollection_getRDFCacheMTime(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_getRDFCacheMTime" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    result = (*arg1)->getRDFCacheMTime();
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_getVersion) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Versioned::Version_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeCollection_getVersion(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_getVersion" "', argument " "1"" of type '" "Ferris::fh_attrcol const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    result = (*arg1)->getVersion();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::Versioned::Version_t(static_cast< const Ferris::Versioned::Version_t& >(result))), SWIGTYPE_p_guint32, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_private_AboutToBeDeleted) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeCollection_private_AboutToBeDeleted(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_private_AboutToBeDeleted" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    (*arg1)->private_AboutToBeDeleted();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_AddRef) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeCollection_AddRef(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_AddRef" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    result = (*arg1)->AddRef();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_Release) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeCollection_Release(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_Release" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    result = (*arg1)->Release();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_getReferenceCount) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeCollection_getReferenceCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_getReferenceCount" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    result = (*arg1)->getReferenceCount();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AttributeCollection_getGenericCloseSig) {
  {
    Ferris::fh_attrcol *arg1 = (Ferris::fh_attrcol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::GenericCloseSignal_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: AttributeCollection_getGenericCloseSig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_attrcol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AttributeCollection_getGenericCloseSig" "', argument " "1"" of type '" "Ferris::fh_attrcol *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_attrcol * >(argp1);
    result = (FerrisLoki::Handlable::GenericCloseSignal_t *) &(*arg1)->getGenericCloseSig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal1T_void_FerrisLoki__Handlable_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner___deref__) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Runner *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner___deref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner___deref__" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    result = (Ferris::Runner *)(arg1)->operator ->();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Runner, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_operator_assignment) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    Ferris::Runner *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    Ferris::Runner *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Runner_operator_assignment(self,Ferris::Runner const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_operator_assignment" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Runner,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Runner_operator_assignment" "', argument " "2"" of type '" "Ferris::Runner const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Runner_operator_assignment" "', argument " "2"" of type '" "Ferris::Runner const &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Runner * >(argp2);
    result = (Ferris::Runner *) &(*arg1)->operator =((Ferris::Runner const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Runner, 0 | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_setCommandLine) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Runner_setCommandLine(self,cmdline);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_setCommandLine" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Runner_setCommandLine" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Runner_setCommandLine" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (*arg1)->setCommandLine((std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_pushCommandLineArg) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Runner_pushCommandLineArg(self,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_pushCommandLineArg" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Runner_pushCommandLineArg" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Runner_pushCommandLineArg" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (*arg1)->pushCommandLineArg((std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_getArgv) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Runner::ArgArray_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_getArgv(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_getArgv" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    result = (Ferris::Runner::ArgArray_t *) &(*arg1)->getArgv();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_getEnvp) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Runner::ArgArray_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_getEnvp(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_getEnvp" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    result = (Ferris::Runner::ArgArray_t *) &(*arg1)->getEnvp();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_argvPushPath) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Runner_argvPushPath(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_argvPushPath" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Runner_argvPushPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Runner_argvPushPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (*arg1)->argvPushPath((std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_setSpawnFlags) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    GSpawnFlags arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Runner_setSpawnFlags(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_setSpawnFlags" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_GSpawnFlags,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Runner_setSpawnFlags" "', argument " "2"" of type '" "GSpawnFlags""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Runner_setSpawnFlags" "', argument " "2"" of type '" "GSpawnFlags""'");
      } else {
        arg2 = *(reinterpret_cast< GSpawnFlags * >(argp2));
      }
    }
    (*arg1)->setSpawnFlags(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_getSpawnFlags) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    GSpawnFlags result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_getSpawnFlags(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_getSpawnFlags" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    result = (*arg1)->getSpawnFlags();
    ST(argvi) = SWIG_NewPointerObj((new GSpawnFlags(static_cast< const GSpawnFlags& >(result))), SWIGTYPE_p_GSpawnFlags, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_setWorkingDir) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    std::string arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Runner_setWorkingDir(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_setWorkingDir" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Runner_setWorkingDir" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    (*arg1)->setWorkingDir(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_getStdIn__SWIG_0) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Runner_getStdIn(self,AutoCloseFDOnStreamBufDtor);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_getStdIn" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Runner_getStdIn" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (*arg1)->getStdIn(arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_ostream(static_cast< const Ferris::fh_ostream& >(result))), SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_getStdIn__SWIG_1) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_getStdIn(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_getStdIn" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    result = (*arg1)->getStdIn();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_ostream(static_cast< const Ferris::fh_ostream& >(result))), SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_getStdIn) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_runner, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_runner, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Runner_getStdIn__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Runner_getStdIn__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Runner_getStdIn'");
  XSRETURN(0);
}


XS(_wrap_Runner_getStdOut__SWIG_0) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Runner_getStdOut(self,AutoCloseFDOnStreamBufDtor);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_getStdOut" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Runner_getStdOut" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (*arg1)->getStdOut(arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_getStdOut__SWIG_1) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_getStdOut(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_getStdOut" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    result = (*arg1)->getStdOut();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_getStdOut) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_runner, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_runner, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Runner_getStdOut__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Runner_getStdOut__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Runner_getStdOut'");
  XSRETURN(0);
}


XS(_wrap_Runner_getStdErr__SWIG_0) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Runner_getStdErr(self,AutoCloseFDOnStreamBufDtor);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_getStdErr" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Runner_getStdErr" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (*arg1)->getStdErr(arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_getStdErr__SWIG_1) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_getStdErr(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_getStdErr" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    result = (*arg1)->getStdErr();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_getStdErr) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_runner, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_runner, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Runner_getStdErr__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Runner_getStdErr__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Runner_getStdErr'");
  XSRETURN(0);
}


XS(_wrap_Runner_getStdInFd) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_getStdInFd(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_getStdInFd" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    result = (int)(*arg1)->getStdInFd();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_getStdOutFd) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_getStdOutFd(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_getStdOutFd" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    result = (int)(*arg1)->getStdOutFd();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_getStdErrFd) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_getStdErrFd(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_getStdErrFd" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    result = (int)(*arg1)->getStdErrFd();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_getChildProcessID) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    pid_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_getChildProcessID(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_getChildProcessID" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    result = (*arg1)->getChildProcessID();
    ST(argvi) = SWIG_NewPointerObj((new pid_t(static_cast< const pid_t& >(result))), SWIGTYPE_p_pid_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_signalChild__SWIG_0) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Runner_signalChild(self,sig);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_signalChild" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Runner_signalChild" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->signalChild(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_signalChild__SWIG_1) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_signalChild(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_signalChild" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    (*arg1)->signalChild();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_signalChild) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_runner, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_runner, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Runner_signalChild__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Runner_signalChild__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Runner_signalChild'");
  XSRETURN(0);
}


XS(_wrap_Runner_killChild) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_killChild(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_killChild" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    (*arg1)->killChild();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_getExitStatus) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    gint result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_getExitStatus(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_getExitStatus" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    result = (*arg1)->getExitStatus();
    ST(argvi) = SWIG_NewPointerObj((new gint(static_cast< const gint& >(result))), SWIGTYPE_p_gint, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_closeChildStdOut) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_closeChildStdOut(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_closeChildStdOut" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    (*arg1)->closeChildStdOut();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_closeChildStdErr) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_closeChildStdErr(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_closeChildStdErr" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    (*arg1)->closeChildStdErr();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_closeChildStdIn) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_closeChildStdIn(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_closeChildStdIn" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    (*arg1)->closeChildStdIn();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_setConnect_ChildStdOut_To_ParentStdOut) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Runner_setConnect_ChildStdOut_To_ParentStdOut(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_setConnect_ChildStdOut_To_ParentStdOut" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Runner_setConnect_ChildStdOut_To_ParentStdOut" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (*arg1)->setConnect_ChildStdOut_To_ParentStdOut(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_setConnect_ChildStdErr_To_ParentStdErr) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Runner_setConnect_ChildStdErr_To_ParentStdErr(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_setConnect_ChildStdErr_To_ParentStdErr" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Runner_setConnect_ChildStdErr_To_ParentStdErr" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (*arg1)->setConnect_ChildStdErr_To_ParentStdErr(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_setExitStatus) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    gint arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Runner_setExitStatus(self,status);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_setExitStatus" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_gint,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Runner_setExitStatus" "', argument " "2"" of type '" "gint""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Runner_setExitStatus" "', argument " "2"" of type '" "gint""'");
      } else {
        arg2 = *(reinterpret_cast< gint * >(argp2));
      }
    }
    (*arg1)->setExitStatus(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_setConnectStdIn) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Runner_setConnectStdIn(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_setConnectStdIn" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Runner_setConnectStdIn" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (*arg1)->setConnectStdIn(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_setWaitTimeOut) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Runner_setWaitTimeOut(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_setWaitTimeOut" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Runner_setWaitTimeOut" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->setWaitTimeOut(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_setInheritENV) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Runner_setInheritENV(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_setInheritENV" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Runner_setInheritENV" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (*arg1)->setInheritENV(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_getErrorString) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_getErrorString(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_getErrorString" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    result = (*arg1)->getErrorString();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner___call__) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner___call__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner___call__" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    (*arg1)->operator ()();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_Run) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_Run(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_Run" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    (*arg1)->Run();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_RunWithStdoutAsReadablePipe) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_RunWithStdoutAsReadablePipe(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_RunWithStdoutAsReadablePipe" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    result = (*arg1)->RunWithStdoutAsReadablePipe();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_getDescription) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_getDescription(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_getDescription" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    result = (*arg1)->getDescription();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_setChildSetupFunctor) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    Ferris::Runner::ChildSetupFunctor_t *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Runner_setChildSetupFunctor(self,f);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_setChildSetupFunctor" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Loki__FunctorT_void_LOKI_TYPELIST_1_fFerris__fh_runnerF_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Runner_setChildSetupFunctor" "', argument " "2"" of type '" "Ferris::Runner::ChildSetupFunctor_t const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Runner_setChildSetupFunctor" "', argument " "2"" of type '" "Ferris::Runner::ChildSetupFunctor_t const &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Runner::ChildSetupFunctor_t * >(argp2);
    (*arg1)->setChildSetupFunctor((Ferris::Runner::ChildSetupFunctor_t const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_executeAndReturnStdOut) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Runner_executeAndReturnStdOut(self,ret);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_executeAndReturnStdOut" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Runner_executeAndReturnStdOut" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Runner_executeAndReturnStdOut" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    result = (int)(*arg1)->executeAndReturnStdOut(*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_private_AboutToBeDeleted) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_private_AboutToBeDeleted(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_private_AboutToBeDeleted" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    (*arg1)->private_AboutToBeDeleted();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_AddRef) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_AddRef(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_AddRef" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    result = (*arg1)->AddRef();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_Release) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_Release(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_Release" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    result = (*arg1)->Release();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_getReferenceCount) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_getReferenceCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_getReferenceCount" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    result = (*arg1)->getReferenceCount();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Runner_getGenericCloseSig) {
  {
    Ferris::fh_runner *arg1 = (Ferris::fh_runner *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::GenericCloseSignal_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Runner_getGenericCloseSig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_runner, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Runner_getGenericCloseSig" "', argument " "1"" of type '" "Ferris::fh_runner *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    result = (FerrisLoki::Handlable::GenericCloseSignal_t *) &(*arg1)->getGenericCloseSig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal1T_void_FerrisLoki__Handlable_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_PreprocessedSortString___deref__) {
  {
    Ferris::fh_sorter *arg1 = (Ferris::fh_sorter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::PreprocessedSortString *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: PreprocessedSortString___deref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_sorter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PreprocessedSortString___deref__" "', argument " "1"" of type '" "Ferris::fh_sorter *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_sorter * >(argp1);
    result = (Ferris::PreprocessedSortString *)(arg1)->operator ->();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__PreprocessedSortString, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem___deref__) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Emblem *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem___deref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem___deref__" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (Ferris::Emblem *)(arg1)->operator ->();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Emblem, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getID) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::emblemID_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getID(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getID" "', argument " "1"" of type '" "Ferris::fh_emblem const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (*arg1)->getID();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblemID_t(static_cast< const Ferris::emblemID_t& >(result))), SWIGTYPE_p_guint32, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getParents) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< Ferris::fh_emblem > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getParents(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getParents" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (*arg1)->getParents();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblems_t(static_cast< const Ferris::emblems_t& >(result))), SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getChildren) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< Ferris::fh_emblem > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getChildren(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getChildren" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (*arg1)->getChildren();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblems_t(static_cast< const Ferris::emblems_t& >(result))), SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_hasChildren) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_hasChildren(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_hasChildren" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (bool)(*arg1)->hasChildren();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_forceUpdateParentsAndChildrenIDs) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_forceUpdateParentsAndChildrenIDs(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_forceUpdateParentsAndChildrenIDs" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    (*arg1)->forceUpdateParentsAndChildrenIDs();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getUpset) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::emblems_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getUpset(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getUpset" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (Ferris::emblems_t *) &(*arg1)->getUpset();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getDownset) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< Ferris::fh_emblem > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getDownset(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getDownset" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (*arg1)->getDownset();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblems_t(static_cast< const Ferris::emblems_t& >(result))), SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getPossibleParents) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< Ferris::fh_emblem > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getPossibleParents(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getPossibleParents" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (*arg1)->getPossibleParents();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblems_t(static_cast< const Ferris::emblems_t& >(result))), SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getPossibleChildren) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< Ferris::fh_emblem > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getPossibleChildren(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getPossibleChildren" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (*arg1)->getPossibleChildren();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblems_t(static_cast< const Ferris::emblems_t& >(result))), SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_hasParent) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    Ferris::fh_emblem arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Emblem_hasParent(self,em);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_hasParent" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Emblem_hasParent" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Emblem_hasParent" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    result = (bool)(*arg1)->hasParent(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_hasChild) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    Ferris::fh_emblem arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Emblem_hasChild(self,em);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_hasChild" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Emblem_hasChild" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Emblem_hasChild" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    result = (bool)(*arg1)->hasChild(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_obtainChild) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_emblem result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Emblem_obtainChild(self,name);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_obtainChild" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Emblem_obtainChild" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Emblem_obtainChild" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->obtainChild((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_emblem(static_cast< const Ferris::fh_emblem& >(result))), SWIGTYPE_p_Ferris__fh_emblem, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_obtainChild_EAOrdering) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_emblem result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Emblem_obtainChild_EAOrdering(self,name);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_obtainChild_EAOrdering" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Emblem_obtainChild_EAOrdering" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Emblem_obtainChild_EAOrdering" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->obtainChild_EAOrdering((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_emblem(static_cast< const Ferris::fh_emblem& >(result))), SWIGTYPE_p_Ferris__fh_emblem, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_findChild) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_emblem result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Emblem_findChild(self,name);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_findChild" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Emblem_findChild" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Emblem_findChild" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->findChild((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_emblem(static_cast< const Ferris::fh_emblem& >(result))), SWIGTYPE_p_Ferris__fh_emblem, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getName) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getName" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (*arg1)->getName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getUniqueName) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getUniqueName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getUniqueName" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (*arg1)->getUniqueName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getIconName) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getIconName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getIconName" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (*arg1)->getIconName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getMenuSizedIconName) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getMenuSizedIconName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getMenuSizedIconName" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (*arg1)->getMenuSizedIconName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getDescription) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getDescription(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getDescription" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (*arg1)->getDescription();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_setName) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Emblem_setName(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_setName" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Emblem_setName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Emblem_setName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (*arg1)->setName((std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_setIconName) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Emblem_setIconName(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_setIconName" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Emblem_setIconName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Emblem_setIconName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (*arg1)->setIconName((std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_setMenuSizedIconName) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Emblem_setMenuSizedIconName(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_setMenuSizedIconName" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Emblem_setMenuSizedIconName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Emblem_setMenuSizedIconName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (*arg1)->setMenuSizedIconName((std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_setDescription) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Emblem_setDescription(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_setDescription" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Emblem_setDescription" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Emblem_setDescription" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (*arg1)->setDescription((std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getDigitalLatitude) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    double result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getDigitalLatitude(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getDigitalLatitude" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (double)(*arg1)->getDigitalLatitude();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getDigitalLongitude) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    double result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getDigitalLongitude(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getDigitalLongitude" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (double)(*arg1)->getDigitalLongitude();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getZoomRange) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    double result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getZoomRange(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getZoomRange" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (double)(*arg1)->getZoomRange();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_setDigitalLatitude) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Emblem_setDigitalLatitude(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_setDigitalLatitude" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Emblem_setDigitalLatitude" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    (*arg1)->setDigitalLatitude(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_setDigitalLongitude) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Emblem_setDigitalLongitude(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_setDigitalLongitude" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Emblem_setDigitalLongitude" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    (*arg1)->setDigitalLongitude(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_setZoomRange) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Emblem_setZoomRange(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_setZoomRange" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Emblem_setZoomRange" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    (*arg1)->setZoomRange(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getLimitedViewPriority) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Emblem::limitedViewPri_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getLimitedViewPriority(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getLimitedViewPriority" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (Ferris::Emblem::limitedViewPri_t)(*arg1)->getLimitedViewPriority();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_setLimitedViewPriority) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    Ferris::Emblem::limitedViewPri_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Emblem_setLimitedViewPriority(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_setLimitedViewPriority" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Emblem_setLimitedViewPriority" "', argument " "2"" of type '" "Ferris::Emblem::limitedViewPri_t""'");
    } 
    arg2 = static_cast< Ferris::Emblem::limitedViewPri_t >(val2);
    (*arg1)->setLimitedViewPriority(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getIconName_Changed_Sig) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Emblem::IconName_Changed_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getIconName_Changed_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getIconName_Changed_Sig" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (Ferris::Emblem::IconName_Changed_Sig_t *) &(*arg1)->getIconName_Changed_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal3T_void_Ferris__fh_emblem_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getMenuSizedIconName_Changed_Sig) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Emblem::IconName_Changed_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getMenuSizedIconName_Changed_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getMenuSizedIconName_Changed_Sig" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (Ferris::Emblem::IconName_Changed_Sig_t *) &(*arg1)->getMenuSizedIconName_Changed_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal3T_void_Ferris__fh_emblem_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getAddedParent_Sig) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Emblem::AddedParent_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getAddedParent_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getAddedParent_Sig" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (Ferris::Emblem::AddedParent_Sig_t *) &(*arg1)->getAddedParent_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal2T_void_Ferris__fh_emblem_Ferris__fh_emblem_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getAddedChild_Sig) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Emblem::AddedChild_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getAddedChild_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getAddedChild_Sig" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (Ferris::Emblem::AddedChild_Sig_t *) &(*arg1)->getAddedChild_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal2T_void_Ferris__fh_emblem_Ferris__fh_emblem_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getRemovedParent_Sig) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Emblem::RemovedParent_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getRemovedParent_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getRemovedParent_Sig" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (Ferris::Emblem::RemovedParent_Sig_t *) &(*arg1)->getRemovedParent_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal2T_void_Ferris__fh_emblem_Ferris__fh_emblem_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getRemovedChild_Sig) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Emblem::RemovedChild_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getRemovedChild_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getRemovedChild_Sig" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (Ferris::Emblem::RemovedChild_Sig_t *) &(*arg1)->getRemovedChild_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal2T_void_Ferris__fh_emblem_Ferris__fh_emblem_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_dumpTo) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Emblem_dumpTo(self,oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_dumpTo" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Emblem_dumpTo" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Emblem_dumpTo" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    (*arg1)->dumpTo(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_isTransitiveChildOfEAOrderingRootEmblem) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_isTransitiveChildOfEAOrderingRootEmblem(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_isTransitiveChildOfEAOrderingRootEmblem" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (bool)(*arg1)->isTransitiveChildOfEAOrderingRootEmblem();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_forceUpdateTransitiveChildOfEAOrderingRootEmblem) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_forceUpdateTransitiveChildOfEAOrderingRootEmblem(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_forceUpdateTransitiveChildOfEAOrderingRootEmblem" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    (*arg1)->forceUpdateTransitiveChildOfEAOrderingRootEmblem();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_private_AboutToBeDeleted) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_private_AboutToBeDeleted(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_private_AboutToBeDeleted" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    (*arg1)->private_AboutToBeDeleted();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_AddRef) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_AddRef(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_AddRef" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (*arg1)->AddRef();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_Release) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_Release(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_Release" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (*arg1)->Release();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getReferenceCount) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getReferenceCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getReferenceCount" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (*arg1)->getReferenceCount();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Emblem_getGenericCloseSig) {
  {
    Ferris::fh_emblem *arg1 = (Ferris::fh_emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::GenericCloseSignal_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Emblem_getGenericCloseSig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Emblem_getGenericCloseSig" "', argument " "1"" of type '" "Ferris::fh_emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem * >(argp1);
    result = (FerrisLoki::Handlable::GenericCloseSignal_t *) &(*arg1)->getGenericCloseSig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal1T_void_FerrisLoki__Handlable_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem___deref__) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::ColdEmblem *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem___deref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem___deref__" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (Ferris::ColdEmblem *)(arg1)->operator ->();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ColdEmblem, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getID) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::emblemID_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getID(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getID" "', argument " "1"" of type '" "Ferris::fh_cemblem const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (*arg1)->getID();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblemID_t(static_cast< const Ferris::emblemID_t& >(result))), SWIGTYPE_p_guint32, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getParents) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< Ferris::fh_emblem > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getParents(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getParents" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (*arg1)->getParents();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblems_t(static_cast< const Ferris::emblems_t& >(result))), SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getChildren) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< Ferris::fh_emblem > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getChildren(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getChildren" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (*arg1)->getChildren();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblems_t(static_cast< const Ferris::emblems_t& >(result))), SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_hasChildren) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_hasChildren(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_hasChildren" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (bool)(*arg1)->hasChildren();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_forceUpdateParentsAndChildrenIDs) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_forceUpdateParentsAndChildrenIDs(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_forceUpdateParentsAndChildrenIDs" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    (*arg1)->forceUpdateParentsAndChildrenIDs();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getUpset) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::emblems_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getUpset(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getUpset" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (Ferris::emblems_t *) &(*arg1)->getUpset();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getDownset) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< Ferris::fh_emblem > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getDownset(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getDownset" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (*arg1)->getDownset();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblems_t(static_cast< const Ferris::emblems_t& >(result))), SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getPossibleParents) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< Ferris::fh_emblem > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getPossibleParents(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getPossibleParents" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (*arg1)->getPossibleParents();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblems_t(static_cast< const Ferris::emblems_t& >(result))), SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getPossibleChildren) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< Ferris::fh_emblem > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getPossibleChildren(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getPossibleChildren" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (*arg1)->getPossibleChildren();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblems_t(static_cast< const Ferris::emblems_t& >(result))), SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_hasParent) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    Ferris::fh_emblem arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ColdEmblem_hasParent(self,em);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_hasParent" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ColdEmblem_hasParent" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ColdEmblem_hasParent" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    result = (bool)(*arg1)->hasParent(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_hasChild) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    Ferris::fh_emblem arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ColdEmblem_hasChild(self,em);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_hasChild" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ColdEmblem_hasChild" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ColdEmblem_hasChild" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    result = (bool)(*arg1)->hasChild(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_obtainChild) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_emblem result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ColdEmblem_obtainChild(self,name);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_obtainChild" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ColdEmblem_obtainChild" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ColdEmblem_obtainChild" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->obtainChild((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_emblem(static_cast< const Ferris::fh_emblem& >(result))), SWIGTYPE_p_Ferris__fh_emblem, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_obtainChild_EAOrdering) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_emblem result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ColdEmblem_obtainChild_EAOrdering(self,name);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_obtainChild_EAOrdering" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ColdEmblem_obtainChild_EAOrdering" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ColdEmblem_obtainChild_EAOrdering" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->obtainChild_EAOrdering((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_emblem(static_cast< const Ferris::fh_emblem& >(result))), SWIGTYPE_p_Ferris__fh_emblem, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_findChild) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_emblem result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ColdEmblem_findChild(self,name);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_findChild" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ColdEmblem_findChild" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ColdEmblem_findChild" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->findChild((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_emblem(static_cast< const Ferris::fh_emblem& >(result))), SWIGTYPE_p_Ferris__fh_emblem, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getName) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getName" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (*arg1)->getName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getUniqueName) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getUniqueName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getUniqueName" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (*arg1)->getUniqueName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getIconName) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getIconName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getIconName" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (*arg1)->getIconName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getMenuSizedIconName) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getMenuSizedIconName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getMenuSizedIconName" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (*arg1)->getMenuSizedIconName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getDescription) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getDescription(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getDescription" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (*arg1)->getDescription();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_setName) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ColdEmblem_setName(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_setName" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ColdEmblem_setName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ColdEmblem_setName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (*arg1)->setName((std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_setIconName) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ColdEmblem_setIconName(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_setIconName" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ColdEmblem_setIconName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ColdEmblem_setIconName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (*arg1)->setIconName((std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_setMenuSizedIconName) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ColdEmblem_setMenuSizedIconName(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_setMenuSizedIconName" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ColdEmblem_setMenuSizedIconName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ColdEmblem_setMenuSizedIconName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (*arg1)->setMenuSizedIconName((std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_setDescription) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ColdEmblem_setDescription(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_setDescription" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ColdEmblem_setDescription" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ColdEmblem_setDescription" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (*arg1)->setDescription((std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getDigitalLatitude) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    double result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getDigitalLatitude(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getDigitalLatitude" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (double)(*arg1)->getDigitalLatitude();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getDigitalLongitude) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    double result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getDigitalLongitude(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getDigitalLongitude" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (double)(*arg1)->getDigitalLongitude();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getZoomRange) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    double result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getZoomRange(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getZoomRange" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (double)(*arg1)->getZoomRange();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_setDigitalLatitude) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ColdEmblem_setDigitalLatitude(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_setDigitalLatitude" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ColdEmblem_setDigitalLatitude" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    (*arg1)->setDigitalLatitude(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_setDigitalLongitude) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ColdEmblem_setDigitalLongitude(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_setDigitalLongitude" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ColdEmblem_setDigitalLongitude" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    (*arg1)->setDigitalLongitude(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_setZoomRange) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ColdEmblem_setZoomRange(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_setZoomRange" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ColdEmblem_setZoomRange" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    (*arg1)->setZoomRange(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getLimitedViewPriority) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Emblem::limitedViewPri_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getLimitedViewPriority(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getLimitedViewPriority" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (Ferris::Emblem::limitedViewPri_t)(*arg1)->getLimitedViewPriority();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_setLimitedViewPriority) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    Ferris::Emblem::limitedViewPri_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ColdEmblem_setLimitedViewPriority(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_setLimitedViewPriority" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ColdEmblem_setLimitedViewPriority" "', argument " "2"" of type '" "Ferris::Emblem::limitedViewPri_t""'");
    } 
    arg2 = static_cast< Ferris::Emblem::limitedViewPri_t >(val2);
    (*arg1)->setLimitedViewPriority(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getIconName_Changed_Sig) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Emblem::IconName_Changed_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getIconName_Changed_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getIconName_Changed_Sig" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (Ferris::Emblem::IconName_Changed_Sig_t *) &(*arg1)->getIconName_Changed_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal3T_void_Ferris__fh_emblem_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getMenuSizedIconName_Changed_Sig) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Emblem::IconName_Changed_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getMenuSizedIconName_Changed_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getMenuSizedIconName_Changed_Sig" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (Ferris::Emblem::IconName_Changed_Sig_t *) &(*arg1)->getMenuSizedIconName_Changed_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal3T_void_Ferris__fh_emblem_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getAddedParent_Sig) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Emblem::AddedParent_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getAddedParent_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getAddedParent_Sig" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (Ferris::Emblem::AddedParent_Sig_t *) &(*arg1)->getAddedParent_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal2T_void_Ferris__fh_emblem_Ferris__fh_emblem_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getAddedChild_Sig) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Emblem::AddedChild_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getAddedChild_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getAddedChild_Sig" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (Ferris::Emblem::AddedChild_Sig_t *) &(*arg1)->getAddedChild_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal2T_void_Ferris__fh_emblem_Ferris__fh_emblem_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getRemovedParent_Sig) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Emblem::RemovedParent_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getRemovedParent_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getRemovedParent_Sig" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (Ferris::Emblem::RemovedParent_Sig_t *) &(*arg1)->getRemovedParent_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal2T_void_Ferris__fh_emblem_Ferris__fh_emblem_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getRemovedChild_Sig) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Emblem::RemovedChild_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getRemovedChild_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getRemovedChild_Sig" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (Ferris::Emblem::RemovedChild_Sig_t *) &(*arg1)->getRemovedChild_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal2T_void_Ferris__fh_emblem_Ferris__fh_emblem_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_dumpTo) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ColdEmblem_dumpTo(self,oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_dumpTo" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ColdEmblem_dumpTo" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ColdEmblem_dumpTo" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    (*arg1)->dumpTo(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_isTransitiveChildOfEAOrderingRootEmblem) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_isTransitiveChildOfEAOrderingRootEmblem(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_isTransitiveChildOfEAOrderingRootEmblem" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (bool)(*arg1)->isTransitiveChildOfEAOrderingRootEmblem();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_forceUpdateTransitiveChildOfEAOrderingRootEmblem) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_forceUpdateTransitiveChildOfEAOrderingRootEmblem(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_forceUpdateTransitiveChildOfEAOrderingRootEmblem" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    (*arg1)->forceUpdateTransitiveChildOfEAOrderingRootEmblem();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_private_AboutToBeDeleted) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_private_AboutToBeDeleted(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_private_AboutToBeDeleted" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    (*arg1)->private_AboutToBeDeleted();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_AddRef) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_AddRef(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_AddRef" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (*arg1)->AddRef();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_Release) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_Release(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_Release" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (*arg1)->Release();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getReferenceCount) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getReferenceCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getReferenceCount" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (*arg1)->getReferenceCount();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ColdEmblem_getGenericCloseSig) {
  {
    Ferris::fh_cemblem *arg1 = (Ferris::fh_cemblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::GenericCloseSignal_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ColdEmblem_getGenericCloseSig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_cemblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColdEmblem_getGenericCloseSig" "', argument " "1"" of type '" "Ferris::fh_cemblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_cemblem * >(argp1);
    result = (FerrisLoki::Handlable::GenericCloseSignal_t *) &(*arg1)->getGenericCloseSig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal1T_void_FerrisLoki__Handlable_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere___deref__) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Etagere *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Etagere___deref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere___deref__" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    result = (Ferris::Etagere *)(arg1)->operator ->();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Etagere, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_sync) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Etagere_sync(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_sync" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    (*arg1)->sync();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_getAllEmblemsWithName__SWIG_0) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    Ferris::emblems_t *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::emblems_t *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Etagere_getAllEmblemsWithName(self,ret,name);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_getAllEmblemsWithName" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__listT_Ferris__fh_emblem_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Etagere_getAllEmblemsWithName" "', argument " "2"" of type '" "Ferris::emblems_t &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Etagere_getAllEmblemsWithName" "', argument " "2"" of type '" "Ferris::emblems_t &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::emblems_t * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Etagere_getAllEmblemsWithName" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Etagere_getAllEmblemsWithName" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::emblems_t *) &(*arg1)->getAllEmblemsWithName(*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, 0 | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_getAllEmblemsWithName__SWIG_1) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    Ferris::emblemset_t *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::emblemset_t *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Etagere_getAllEmblemsWithName(self,ret,name);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_getAllEmblemsWithName" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Etagere_getAllEmblemsWithName" "', argument " "2"" of type '" "Ferris::emblemset_t &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Etagere_getAllEmblemsWithName" "', argument " "2"" of type '" "Ferris::emblemset_t &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::emblemset_t * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Etagere_getAllEmblemsWithName" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Etagere_getAllEmblemsWithName" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::emblemset_t *) &(*arg1)->getAllEmblemsWithName(*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t, 0 | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_getAllEmblemsWithName) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_etagere, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_etagere, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Etagere_getAllEmblemsWithName__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Etagere_getAllEmblemsWithName__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'Etagere_getAllEmblemsWithName'");
  XSRETURN(0);
}


XS(_wrap_Etagere_obtainEmblemByName) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_emblem result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Etagere_obtainEmblemByName(self,name);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_obtainEmblemByName" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Etagere_obtainEmblemByName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Etagere_obtainEmblemByName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->obtainEmblemByName((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_emblem(static_cast< const Ferris::fh_emblem& >(result))), SWIGTYPE_p_Ferris__fh_emblem, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_getEmblemByName) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_emblem result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Etagere_getEmblemByName(self,name);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_getEmblemByName" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Etagere_getEmblemByName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Etagere_getEmblemByName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->getEmblemByName((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_emblem(static_cast< const Ferris::fh_emblem& >(result))), SWIGTYPE_p_Ferris__fh_emblem, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_getEmblemByUniqueName) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_emblem result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Etagere_getEmblemByUniqueName(self,name);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_getEmblemByUniqueName" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Etagere_getEmblemByUniqueName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Etagere_getEmblemByUniqueName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->getEmblemByUniqueName((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_emblem(static_cast< const Ferris::fh_emblem& >(result))), SWIGTYPE_p_Ferris__fh_emblem, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_getEmblemByID) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    Ferris::emblemID_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    Ferris::fh_emblem result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Etagere_getEmblemByID(self,id);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_getEmblemByID" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_guint32,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Etagere_getEmblemByID" "', argument " "2"" of type '" "Ferris::emblemID_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Etagere_getEmblemByID" "', argument " "2"" of type '" "Ferris::emblemID_t""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::emblemID_t * >(argp2));
      }
    }
    result = (*arg1)->getEmblemByID(arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_emblem(static_cast< const Ferris::fh_emblem& >(result))), SWIGTYPE_p_Ferris__fh_emblem, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_getAllEmblems) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< Ferris::fh_emblem > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Etagere_getAllEmblems(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_getAllEmblems" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    result = (*arg1)->getAllEmblems();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblems_t(static_cast< const Ferris::emblems_t& >(result))), SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_getAllEmblemsUniqueName) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< Ferris::fh_emblem > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Etagere_getAllEmblemsUniqueName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_getAllEmblemsUniqueName" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    result = (*arg1)->getAllEmblemsUniqueName();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblems_t(static_cast< const Ferris::emblems_t& >(result))), SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_visitAllEmblems) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    Ferris::Etagere::f_emblemVisitor *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Etagere_visitAllEmblems(self,f);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_visitAllEmblems" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Loki__FunctorT_void_LOKI_TYPELIST_1_fFerris__fh_emblem_const_RF_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Etagere_visitAllEmblems" "', argument " "2"" of type '" "Ferris::Etagere::f_emblemVisitor const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Etagere_visitAllEmblems" "', argument " "2"" of type '" "Ferris::Etagere::f_emblemVisitor const &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Etagere::f_emblemVisitor * >(argp2);
    (*arg1)->visitAllEmblems((Ferris::Etagere::f_emblemVisitor const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_getOntologyID) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Etagere_getOntologyID(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_getOntologyID" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    result = (*arg1)->getOntologyID();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_getLowestEmblemPriorityToShow) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Emblem::limitedViewPri_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Etagere_getLowestEmblemPriorityToShow(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_getLowestEmblemPriorityToShow" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    result = (Ferris::Emblem::limitedViewPri_t)(*arg1)->getLowestEmblemPriorityToShow();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_setLowestEmblemPriorityToShow) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    Ferris::Emblem::limitedViewPri_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Etagere_setLowestEmblemPriorityToShow(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_setLowestEmblemPriorityToShow" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Etagere_setLowestEmblemPriorityToShow" "', argument " "2"" of type '" "Ferris::Emblem::limitedViewPri_t""'");
    } 
    arg2 = static_cast< Ferris::Emblem::limitedViewPri_t >(val2);
    (*arg1)->setLowestEmblemPriorityToShow(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_erase) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    Ferris::fh_emblem arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Etagere_erase(self,em);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_erase" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Etagere_erase" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Etagere_erase" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    (*arg1)->erase(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_dumpTo) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Etagere_dumpTo(self,oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_dumpTo" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Etagere_dumpTo" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Etagere_dumpTo" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    (*arg1)->dumpTo(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_createColdEmblem__SWIG_0) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_cemblem result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Etagere_createColdEmblem(self,name);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_createColdEmblem" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Etagere_createColdEmblem" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Etagere_createColdEmblem" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->createColdEmblem((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_cemblem(static_cast< const Ferris::fh_cemblem& >(result))), SWIGTYPE_p_Ferris__fh_cemblem, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_createColdEmblem__SWIG_1) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::fh_cemblem result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Etagere_createColdEmblem(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_createColdEmblem" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    result = (*arg1)->createColdEmblem();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_cemblem(static_cast< const Ferris::fh_cemblem& >(result))), SWIGTYPE_p_Ferris__fh_cemblem, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_createColdEmblem) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_etagere, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_etagere, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Etagere_createColdEmblem__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Etagere_createColdEmblem__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Etagere_createColdEmblem'");
  XSRETURN(0);
}


XS(_wrap_Etagere_createColdEmblem_EAOrdering__SWIG_0) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_cemblem result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Etagere_createColdEmblem_EAOrdering(self,name);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_createColdEmblem_EAOrdering" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Etagere_createColdEmblem_EAOrdering" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Etagere_createColdEmblem_EAOrdering" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->createColdEmblem_EAOrdering((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_cemblem(static_cast< const Ferris::fh_cemblem& >(result))), SWIGTYPE_p_Ferris__fh_cemblem, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_createColdEmblem_EAOrdering__SWIG_1) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::fh_cemblem result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Etagere_createColdEmblem_EAOrdering(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_createColdEmblem_EAOrdering" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    result = (*arg1)->createColdEmblem_EAOrdering();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_cemblem(static_cast< const Ferris::fh_cemblem& >(result))), SWIGTYPE_p_Ferris__fh_cemblem, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_createColdEmblem_EAOrdering) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_etagere, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_etagere, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Etagere_createColdEmblem_EAOrdering__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Etagere_createColdEmblem_EAOrdering__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Etagere_createColdEmblem_EAOrdering'");
  XSRETURN(0);
}


XS(_wrap_Etagere_getBasePath) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Etagere_getBasePath(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_getBasePath" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    result = (*arg1)->getBasePath();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_getDBPath) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Etagere_getDBPath(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_getDBPath" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    result = (*arg1)->getDBPath();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_getBoostSerializePath) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Etagere_getBoostSerializePath(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_getBoostSerializePath" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    result = (*arg1)->getBoostSerializePath();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_getBoostSerializePathTxt) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Etagere_getBoostSerializePathTxt(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_getBoostSerializePathTxt" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    result = (*arg1)->getBoostSerializePathTxt();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_getEmblemCreated_Sig) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Etagere::EmblemCreated_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Etagere_getEmblemCreated_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_getEmblemCreated_Sig" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    result = (Ferris::Etagere::EmblemCreated_Sig_t *) &(*arg1)->getEmblemCreated_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal2T_void_Ferris__fh_etagere_Ferris__fh_emblem_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_getAddedChild_Sig) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Etagere::AddedChild_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Etagere_getAddedChild_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_getAddedChild_Sig" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    result = (Ferris::Etagere::AddedChild_Sig_t *) &(*arg1)->getAddedChild_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal2T_void_Ferris__fh_etagere_Ferris__fh_emblem_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_getRemovedChild_Sig) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Etagere::RemovedChild_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Etagere_getRemovedChild_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_getRemovedChild_Sig" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    result = (Ferris::Etagere::RemovedChild_Sig_t *) &(*arg1)->getRemovedChild_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal2T_void_Ferris__fh_etagere_Ferris__fh_emblem_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_OnOutOfProcNewEmblemNotification) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    std::set< Ferris::emblemID_t > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Etagere_OnOutOfProcNewEmblemNotification(self,eset);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_OnOutOfProcNewEmblemNotification" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__setT_guint32_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Etagere_OnOutOfProcNewEmblemNotification" "', argument " "2"" of type '" "std::set< Ferris::emblemID_t > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Etagere_OnOutOfProcNewEmblemNotification" "', argument " "2"" of type '" "std::set< Ferris::emblemID_t > &""'"); 
    }
    arg2 = reinterpret_cast< std::set< Ferris::emblemID_t > * >(argp2);
    (*arg1)->OnOutOfProcNewEmblemNotification(*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_private_AboutToBeDeleted) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Etagere_private_AboutToBeDeleted(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_private_AboutToBeDeleted" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    (*arg1)->private_AboutToBeDeleted();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_AddRef) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Etagere_AddRef(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_AddRef" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    result = (*arg1)->AddRef();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_Release) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Etagere_Release(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_Release" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    result = (*arg1)->Release();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_getReferenceCount) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Etagere_getReferenceCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_getReferenceCount" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    result = (*arg1)->getReferenceCount();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Etagere_getGenericCloseSig) {
  {
    Ferris::fh_etagere *arg1 = (Ferris::fh_etagere *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::GenericCloseSignal_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Etagere_getGenericCloseSig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_etagere, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Etagere_getGenericCloseSig" "', argument " "1"" of type '" "Ferris::fh_etagere *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_etagere * >(argp1);
    result = (FerrisLoki::Handlable::GenericCloseSignal_t *) &(*arg1)->getGenericCloseSig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal1T_void_FerrisLoki__Handlable_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion___deref__) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Medallion *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Medallion___deref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion___deref__" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    result = (Ferris::Medallion *)(arg1)->operator ->();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Medallion, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_addEmblem__SWIG_0) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    Ferris::fh_emblem arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Medallion_addEmblem(self,em);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_addEmblem" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Medallion_addEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_addEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    (*arg1)->addEmblem(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_addEmblem__SWIG_1) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    Ferris::fh_emblem arg2 ;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > arg3 ;
    double arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    double val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: Medallion_addEmblem(self,em,pers,judgementSureness);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_addEmblem" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Medallion_addEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_addEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Medallion_addEmblem" "', argument " "3"" of type '" "Ferris::fh_personality""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_addEmblem" "', argument " "3"" of type '" "Ferris::fh_personality""'");
      } else {
        arg3 = *(reinterpret_cast< Ferris::fh_personality * >(argp3));
      }
    }
    ecode4 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Medallion_addEmblem" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
    (*arg1)->addEmblem(arg2,arg3,arg4);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_addEmblem) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_medallion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_emblem, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_medallion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_emblem, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Medallion_addEmblem__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Medallion_addEmblem__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'Medallion_addEmblem'");
  XSRETURN(0);
}


XS(_wrap_Medallion_retractEmblem__SWIG_0) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    Ferris::fh_emblem arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Medallion_retractEmblem(self,em);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_retractEmblem" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Medallion_retractEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_retractEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    (*arg1)->retractEmblem(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_retractEmblem__SWIG_1) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    Ferris::fh_emblem arg2 ;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > arg3 ;
    double arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    double val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: Medallion_retractEmblem(self,em,pers,judgementSureness);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_retractEmblem" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Medallion_retractEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_retractEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Medallion_retractEmblem" "', argument " "3"" of type '" "Ferris::fh_personality""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_retractEmblem" "', argument " "3"" of type '" "Ferris::fh_personality""'");
      } else {
        arg3 = *(reinterpret_cast< Ferris::fh_personality * >(argp3));
      }
    }
    ecode4 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Medallion_retractEmblem" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
    (*arg1)->retractEmblem(arg2,arg3,arg4);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_retractEmblem) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_medallion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_emblem, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_medallion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_emblem, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Medallion_retractEmblem__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Medallion_retractEmblem__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'Medallion_retractEmblem'");
  XSRETURN(0);
}


XS(_wrap_Medallion_removeEmblem__SWIG_0) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    Ferris::fh_emblem arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Medallion_removeEmblem(self,em);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_removeEmblem" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Medallion_removeEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_removeEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    (*arg1)->removeEmblem(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_removeEmblem__SWIG_1) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    Ferris::fh_emblem arg2 ;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Medallion_removeEmblem(self,em,pers);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_removeEmblem" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Medallion_removeEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_removeEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Medallion_removeEmblem" "', argument " "3"" of type '" "Ferris::fh_personality""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_removeEmblem" "', argument " "3"" of type '" "Ferris::fh_personality""'");
      } else {
        arg3 = *(reinterpret_cast< Ferris::fh_personality * >(argp3));
      }
    }
    (*arg1)->removeEmblem(arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_removeEmblem) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_medallion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_emblem, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_medallion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_emblem, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Medallion_removeEmblem__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Medallion_removeEmblem__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'Medallion_removeEmblem'");
  XSRETURN(0);
}


XS(_wrap_Medallion_hasEmblem__SWIG_0) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    Ferris::fh_emblem arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Medallion_hasEmblem(self,em);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_hasEmblem" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Medallion_hasEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_hasEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    result = (bool)(*arg1)->hasEmblem(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_hasEmblem__SWIG_1) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    Ferris::fh_emblem arg2 ;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Medallion_hasEmblem(self,em,pers);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_hasEmblem" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Medallion_hasEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_hasEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Medallion_hasEmblem" "', argument " "3"" of type '" "Ferris::fh_personality""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_hasEmblem" "', argument " "3"" of type '" "Ferris::fh_personality""'");
      } else {
        arg3 = *(reinterpret_cast< Ferris::fh_personality * >(argp3));
      }
    }
    result = (bool)(*arg1)->hasEmblem(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_hasEmblem) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_medallion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_emblem, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_medallion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_emblem, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Medallion_hasEmblem__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Medallion_hasEmblem__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'Medallion_hasEmblem'");
  XSRETURN(0);
}


XS(_wrap_Medallion_hasRetractedEmblem) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    Ferris::fh_emblem arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Medallion_hasRetractedEmblem(self,em);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_hasRetractedEmblem" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Medallion_hasRetractedEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_hasRetractedEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    result = (bool)(*arg1)->hasRetractedEmblem(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_ensureEmblem__SWIG_0) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    Ferris::fh_emblem arg2 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Medallion_ensureEmblem(self,em,has);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_ensureEmblem" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Medallion_ensureEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_ensureEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Medallion_ensureEmblem" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    (*arg1)->ensureEmblem(arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_ensureEmblem__SWIG_1) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    Ferris::fh_emblem arg2 ;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > arg3 ;
    double arg4 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    double val4 ;
    int ecode4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: Medallion_ensureEmblem(self,em,pers,judgementSureness,has);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_ensureEmblem" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Medallion_ensureEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_ensureEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Medallion_ensureEmblem" "', argument " "3"" of type '" "Ferris::fh_personality""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_ensureEmblem" "', argument " "3"" of type '" "Ferris::fh_personality""'");
      } else {
        arg3 = *(reinterpret_cast< Ferris::fh_personality * >(argp3));
      }
    }
    ecode4 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Medallion_ensureEmblem" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Medallion_ensureEmblem" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    (*arg1)->ensureEmblem(arg2,arg3,arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_ensureEmblem) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_medallion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_emblem, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_medallion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_emblem, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Medallion_ensureEmblem__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Medallion_ensureEmblem__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'Medallion_ensureEmblem'");
  XSRETURN(0);
}


XS(_wrap_Medallion_getFuzzyBelief) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    Ferris::fh_emblem arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    double result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Medallion_getFuzzyBelief(self,em);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_getFuzzyBelief" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Medallion_getFuzzyBelief" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_getFuzzyBelief" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    result = (double)(*arg1)->getFuzzyBelief(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_getListOfPersonalitiesWhoHaveOpinion) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    Ferris::fh_emblem arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Medallion_getListOfPersonalitiesWhoHaveOpinion(self,em);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_getListOfPersonalitiesWhoHaveOpinion" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Medallion_getListOfPersonalitiesWhoHaveOpinion" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_getListOfPersonalitiesWhoHaveOpinion" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    result = (*arg1)->getListOfPersonalitiesWhoHaveOpinion(arg2);
    ST(argvi) = SWIG_NewPointerObj((new std::list< Ferris::fh_personality >(static_cast< const std::list< Ferris::fh_personality >& >(result))), SWIGTYPE_p_std__listT_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_getBelief__SWIG_0) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    Ferris::fh_emblem arg2 ;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    Ferris::fh_medallionBelief result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Medallion_getBelief(self,em,pers);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_getBelief" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Medallion_getBelief" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_getBelief" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Medallion_getBelief" "', argument " "3"" of type '" "Ferris::fh_personality""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_getBelief" "', argument " "3"" of type '" "Ferris::fh_personality""'");
      } else {
        arg3 = *(reinterpret_cast< Ferris::fh_personality * >(argp3));
      }
    }
    result = (*arg1)->getBelief(arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_medallionBelief(static_cast< const Ferris::fh_medallionBelief& >(result))), SWIGTYPE_p_Ferris__fh_medallionBelief, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_getBelief__SWIG_1) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    Ferris::fh_emblem arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    Ferris::fh_medallionBelief result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Medallion_getBelief(self,em);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_getBelief" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Medallion_getBelief" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_getBelief" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    result = (*arg1)->getBelief(arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_medallionBelief(static_cast< const Ferris::fh_medallionBelief& >(result))), SWIGTYPE_p_Ferris__fh_medallionBelief, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_getBelief) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_medallion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_emblem, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_medallion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_emblem, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Medallion_getBelief__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Medallion_getBelief__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Medallion_getBelief'");
  XSRETURN(0);
}


XS(_wrap_Medallion_hasBelief__SWIG_0) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    Ferris::fh_emblem arg2 ;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Medallion_hasBelief(self,em,p);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_hasBelief" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Medallion_hasBelief" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_hasBelief" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Medallion_hasBelief" "', argument " "3"" of type '" "Ferris::fh_personality""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_hasBelief" "', argument " "3"" of type '" "Ferris::fh_personality""'");
      } else {
        arg3 = *(reinterpret_cast< Ferris::fh_personality * >(argp3));
      }
    }
    result = (bool)(*arg1)->hasBelief(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_hasBelief__SWIG_1) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    Ferris::fh_emblem arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Medallion_hasBelief(self,em);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_hasBelief" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Medallion_hasBelief" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Medallion_hasBelief" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    result = (bool)(*arg1)->hasBelief(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_hasBelief) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_medallion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_emblem, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_medallion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_emblem, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Medallion_hasBelief__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Medallion_hasBelief__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Medallion_hasBelief'");
  XSRETURN(0);
}


XS(_wrap_Medallion_sync) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Medallion_sync(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_sync" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    (*arg1)->sync();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_getMostSpecificEmblems__SWIG_0) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    Ferris::Emblem::limitedViewPri_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< Ferris::fh_emblem > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Medallion_getMostSpecificEmblems(self,cutoff);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_getMostSpecificEmblems" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Medallion_getMostSpecificEmblems" "', argument " "2"" of type '" "Ferris::Emblem::limitedViewPri_t""'");
    } 
    arg2 = static_cast< Ferris::Emblem::limitedViewPri_t >(val2);
    result = (*arg1)->getMostSpecificEmblems(arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblems_t(static_cast< const Ferris::emblems_t& >(result))), SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_getMostSpecificEmblems__SWIG_1) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< Ferris::fh_emblem > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Medallion_getMostSpecificEmblems(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_getMostSpecificEmblems" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    result = (*arg1)->getMostSpecificEmblems();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblems_t(static_cast< const Ferris::emblems_t& >(result))), SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_getMostSpecificEmblems) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_medallion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_medallion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Medallion_getMostSpecificEmblems__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Medallion_getMostSpecificEmblems__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Medallion_getMostSpecificEmblems'");
  XSRETURN(0);
}


XS(_wrap_Medallion_getAllEmblems__SWIG_0) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    Ferris::Emblem::limitedViewPri_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< Ferris::fh_emblem > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Medallion_getAllEmblems(self,cutoff);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_getAllEmblems" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Medallion_getAllEmblems" "', argument " "2"" of type '" "Ferris::Emblem::limitedViewPri_t""'");
    } 
    arg2 = static_cast< Ferris::Emblem::limitedViewPri_t >(val2);
    result = (*arg1)->getAllEmblems(arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblems_t(static_cast< const Ferris::emblems_t& >(result))), SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_getAllEmblems__SWIG_1) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< Ferris::fh_emblem > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Medallion_getAllEmblems(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_getAllEmblems" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    result = (*arg1)->getAllEmblems();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblems_t(static_cast< const Ferris::emblems_t& >(result))), SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_getAllEmblems) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_medallion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_medallion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Medallion_getAllEmblems__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Medallion_getAllEmblems__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Medallion_getAllEmblems'");
  XSRETURN(0);
}


XS(_wrap_Medallion_reload) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Medallion_reload(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_reload" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    (*arg1)->reload();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_getOnlyInCacheSignal) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::CacheHandlable::OnlyInCacheSignal_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Medallion_getOnlyInCacheSignal(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_getOnlyInCacheSignal" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    result = (Ferris::CacheHandlable::OnlyInCacheSignal_t *) &(*arg1)->getOnlyInCacheSignal();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal1T_void_Ferris__CacheHandlable_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_AddRef) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Medallion_AddRef(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_AddRef" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    result = (*arg1)->AddRef();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_Release) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Medallion_Release(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_Release" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    result = (*arg1)->Release();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_private_AboutToBeDeleted) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Medallion_private_AboutToBeDeleted(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_private_AboutToBeDeleted" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    (*arg1)->private_AboutToBeDeleted();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_getReferenceCount) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Medallion_getReferenceCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_getReferenceCount" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    result = (*arg1)->getReferenceCount();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Medallion_getGenericCloseSig) {
  {
    Ferris::fh_medallion *arg1 = (Ferris::fh_medallion *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::GenericCloseSignal_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Medallion_getGenericCloseSig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Medallion_getGenericCloseSig" "', argument " "1"" of type '" "Ferris::fh_medallion *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallion * >(argp1);
    result = (FerrisLoki::Handlable::GenericCloseSignal_t *) &(*arg1)->getGenericCloseSig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal1T_void_FerrisLoki__Handlable_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MedallionBelief___deref__) {
  {
    Ferris::fh_medallionBelief *arg1 = (Ferris::fh_medallionBelief *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MedallionBelief *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MedallionBelief___deref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallionBelief, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MedallionBelief___deref__" "', argument " "1"" of type '" "Ferris::fh_medallionBelief *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallionBelief * >(argp1);
    result = (Ferris::MedallionBelief *)(arg1)->operator ->();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__MedallionBelief, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MedallionBelief_getMedallion) {
  {
    Ferris::fh_medallionBelief *arg1 = (Ferris::fh_medallionBelief *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::fh_medallion result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MedallionBelief_getMedallion(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallionBelief, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MedallionBelief_getMedallion" "', argument " "1"" of type '" "Ferris::fh_medallionBelief const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallionBelief * >(argp1);
    result = (*arg1)->getMedallion();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_medallion(static_cast< const Ferris::fh_medallion& >(result))), SWIGTYPE_p_Ferris__fh_medallion, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MedallionBelief_getEmblem) {
  {
    Ferris::fh_medallionBelief *arg1 = (Ferris::fh_medallionBelief *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::fh_emblem result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MedallionBelief_getEmblem(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallionBelief, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MedallionBelief_getEmblem" "', argument " "1"" of type '" "Ferris::fh_medallionBelief const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallionBelief * >(argp1);
    result = (*arg1)->getEmblem();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_emblem(static_cast< const Ferris::fh_emblem& >(result))), SWIGTYPE_p_Ferris__fh_emblem, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MedallionBelief_getPersonality) {
  {
    Ferris::fh_medallionBelief *arg1 = (Ferris::fh_medallionBelief *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MedallionBelief_getPersonality(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallionBelief, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MedallionBelief_getPersonality" "', argument " "1"" of type '" "Ferris::fh_medallionBelief const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallionBelief * >(argp1);
    result = (*arg1)->getPersonality();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_personality(static_cast< const Ferris::fh_personality& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MedallionBelief_getTimes) {
  {
    Ferris::fh_medallionBelief *arg1 = (Ferris::fh_medallionBelief *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Times,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MedallionBelief_getTimes(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallionBelief, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MedallionBelief_getTimes" "', argument " "1"" of type '" "Ferris::fh_medallionBelief const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallionBelief * >(argp1);
    result = (*arg1)->getTimes();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_times(static_cast< const Ferris::fh_times& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__Times_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MedallionBelief_getSureness) {
  {
    Ferris::fh_medallionBelief *arg1 = (Ferris::fh_medallionBelief *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    double result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MedallionBelief_getSureness(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallionBelief, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MedallionBelief_getSureness" "', argument " "1"" of type '" "Ferris::fh_medallionBelief const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallionBelief * >(argp1);
    result = (double)(*arg1)->getSureness();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MedallionBelief_clampJudgementSureness) {
  {
    Ferris::fh_medallionBelief *arg1 = (Ferris::fh_medallionBelief *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    double result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: MedallionBelief_clampJudgementSureness(self,double);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallionBelief, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MedallionBelief_clampJudgementSureness" "', argument " "1"" of type '" "Ferris::fh_medallionBelief *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallionBelief * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MedallionBelief_clampJudgementSureness" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    result = (double)(*arg1)->clampJudgementSureness(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_MedallionBelief_private_AboutToBeDeleted) {
  {
    Ferris::fh_medallionBelief *arg1 = (Ferris::fh_medallionBelief *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MedallionBelief_private_AboutToBeDeleted(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallionBelief, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MedallionBelief_private_AboutToBeDeleted" "', argument " "1"" of type '" "Ferris::fh_medallionBelief *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallionBelief * >(argp1);
    (*arg1)->private_AboutToBeDeleted();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MedallionBelief_AddRef) {
  {
    Ferris::fh_medallionBelief *arg1 = (Ferris::fh_medallionBelief *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MedallionBelief_AddRef(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallionBelief, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MedallionBelief_AddRef" "', argument " "1"" of type '" "Ferris::fh_medallionBelief *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallionBelief * >(argp1);
    result = (*arg1)->AddRef();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MedallionBelief_Release) {
  {
    Ferris::fh_medallionBelief *arg1 = (Ferris::fh_medallionBelief *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MedallionBelief_Release(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallionBelief, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MedallionBelief_Release" "', argument " "1"" of type '" "Ferris::fh_medallionBelief *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallionBelief * >(argp1);
    result = (*arg1)->Release();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MedallionBelief_getReferenceCount) {
  {
    Ferris::fh_medallionBelief *arg1 = (Ferris::fh_medallionBelief *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MedallionBelief_getReferenceCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallionBelief, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MedallionBelief_getReferenceCount" "', argument " "1"" of type '" "Ferris::fh_medallionBelief *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallionBelief * >(argp1);
    result = (*arg1)->getReferenceCount();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MedallionBelief_getGenericCloseSig) {
  {
    Ferris::fh_medallionBelief *arg1 = (Ferris::fh_medallionBelief *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::GenericCloseSignal_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MedallionBelief_getGenericCloseSig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_medallionBelief, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MedallionBelief_getGenericCloseSig" "', argument " "1"" of type '" "Ferris::fh_medallionBelief *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_medallionBelief * >(argp1);
    result = (FerrisLoki::Handlable::GenericCloseSignal_t *) &(*arg1)->getGenericCloseSig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal1T_void_FerrisLoki__Handlable_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ConceptLattice___deref__) {
  {
    Ferris::FCA::fh_conceptLattice *arg1 = (Ferris::FCA::fh_conceptLattice *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::FCA::ConceptLattice *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ConceptLattice___deref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__FCA__fh_conceptLattice, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConceptLattice___deref__" "', argument " "1"" of type '" "Ferris::FCA::fh_conceptLattice *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FCA::fh_conceptLattice * >(argp1);
    result = (Ferris::FCA::ConceptLattice *)(arg1)->operator ->();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FCA__ConceptLattice, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_RegexCollection__SWIG_0) {
  {
    bool arg1 ;
    bool val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    Ferris::RegexCollection *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_RegexCollection(caseSensitive);");
    }
    ecode1 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RegexCollection" "', argument " "1"" of type '" "bool""'");
    } 
    arg1 = static_cast< bool >(val1);
    result = (Ferris::RegexCollection *)new Ferris::RegexCollection(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__RegexCollection, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_RegexCollection__SWIG_1) {
  {
    int argvi = 0;
    Ferris::RegexCollection *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_RegexCollection();");
    }
    result = (Ferris::RegexCollection *)new Ferris::RegexCollection();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__RegexCollection, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_RegexCollection) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_RegexCollection__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_RegexCollection__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_RegexCollection'");
  XSRETURN(0);
}


XS(_wrap_delete_RegexCollection) {
  {
    Ferris::RegexCollection *arg1 = (Ferris::RegexCollection *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_RegexCollection(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__RegexCollection, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RegexCollection" "', argument " "1"" of type '" "Ferris::RegexCollection *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::RegexCollection * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_RegexCollection_append__SWIG_0) {
  {
    Ferris::RegexCollection *arg1 = (Ferris::RegexCollection *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: RegexCollection_append(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__RegexCollection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RegexCollection_append" "', argument " "1"" of type '" "Ferris::RegexCollection *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::RegexCollection * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RegexCollection_append" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RegexCollection_append" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->append((std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_RegexCollection_append__SWIG_1) {
  {
    Ferris::RegexCollection *arg1 = (Ferris::RegexCollection *) 0 ;
    std::list< std::string > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: RegexCollection_append(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__RegexCollection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RegexCollection_append" "', argument " "1"" of type '" "Ferris::RegexCollection *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::RegexCollection * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__listT_std__string_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RegexCollection_append" "', argument " "2"" of type '" "std::list< std::string > const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RegexCollection_append" "', argument " "2"" of type '" "std::list< std::string > const &""'"); 
    }
    arg2 = reinterpret_cast< std::list< std::string > * >(argp2);
    (arg1)->append((std::list< std::string > const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_RegexCollection_append) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__RegexCollection, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__listT_std__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__RegexCollection, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_RegexCollection_append__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_RegexCollection_append__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'RegexCollection_append'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisVFSExceptionBase__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    char *arg3 = (char *) 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 ;
    char *buf3 = 0 ;
    int alloc3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisVFSExceptionBase *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisVFSExceptionBase(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisVFSExceptionBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisVFSExceptionBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisVFSExceptionBase" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisVFSExceptionBase" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    res3 = SWIG_AsCharPtrAndSize(ST(2), &buf3, NULL, &alloc3);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisVFSExceptionBase" "', argument " "3"" of type '" "char const *""'");
    }
    arg3 = reinterpret_cast< char * >(buf3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisVFSExceptionBase" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisVFSExceptionBase *)new Ferris::FerrisVFSExceptionBase((Ferris::FerrisException_CodeState const &)*arg1,arg2,(char const *)arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisVFSExceptionBase, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    
    XSRETURN(argvi);
  fail:
    
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisVFSExceptionBase__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    char *arg3 = (char *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 ;
    char *buf3 = 0 ;
    int alloc3 = 0 ;
    int argvi = 0;
    Ferris::FerrisVFSExceptionBase *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisVFSExceptionBase(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisVFSExceptionBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisVFSExceptionBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisVFSExceptionBase" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisVFSExceptionBase" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    res3 = SWIG_AsCharPtrAndSize(ST(2), &buf3, NULL, &alloc3);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisVFSExceptionBase" "', argument " "3"" of type '" "char const *""'");
    }
    arg3 = reinterpret_cast< char * >(buf3);
    result = (Ferris::FerrisVFSExceptionBase *)new Ferris::FerrisVFSExceptionBase((Ferris::FerrisException_CodeState const &)*arg1,arg2,(char const *)arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisVFSExceptionBase, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    XSRETURN(argvi);
  fail:
    
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisVFSExceptionBase__SWIG_2) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    Ferris::FerrisVFSExceptionBase *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_FerrisVFSExceptionBase(state,log);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisVFSExceptionBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisVFSExceptionBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisVFSExceptionBase" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisVFSExceptionBase" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    result = (Ferris::FerrisVFSExceptionBase *)new Ferris::FerrisVFSExceptionBase((Ferris::FerrisException_CodeState const &)*arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisVFSExceptionBase, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisVFSExceptionBase) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(2), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(2), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisVFSExceptionBase__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisVFSExceptionBase__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisVFSExceptionBase__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisVFSExceptionBase'");
  XSRETURN(0);
}


XS(_wrap_delete_FerrisVFSExceptionBase) {
  {
    Ferris::FerrisVFSExceptionBase *arg1 = (Ferris::FerrisVFSExceptionBase *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_FerrisVFSExceptionBase(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__FerrisVFSExceptionBase, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FerrisVFSExceptionBase" "', argument " "1"" of type '" "Ferris::FerrisVFSExceptionBase *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisVFSExceptionBase * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_FerrisVFSExceptionBase_whats) {
  {
    Ferris::FerrisVFSExceptionBase *arg1 = (Ferris::FerrisVFSExceptionBase *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: FerrisVFSExceptionBase_whats(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__FerrisVFSExceptionBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FerrisVFSExceptionBase_whats" "', argument " "1"" of type '" "Ferris::FerrisVFSExceptionBase const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisVFSExceptionBase * >(argp1);
    result = (std::string *) &((Ferris::FerrisVFSExceptionBase const *)arg1)->whats();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisGLibCException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisGLibCException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisGLibCException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisGLibCException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisGLibCException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisGLibCException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisGLibCException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisGLibCException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisGLibCException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisGLibCException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisGLibCException *)new Ferris::FerrisGLibCException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisGLibCException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisGLibCException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisGLibCException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisGLibCException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisGLibCException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisGLibCException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisGLibCException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisGLibCException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisGLibCException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisGLibCException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisGLibCException *)new Ferris::FerrisGLibCException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisGLibCException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisGLibCException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisGLibCException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisGLibCException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisGLibCException'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisStatException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    std::string *arg2 = 0 ;
    Ferris::Attribute *arg3 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    Ferris::FerrisStatException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisStatException(state,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisStatException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisStatException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisStatException" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisStatException" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisStatException" "', argument " "3"" of type '" "Ferris::Attribute *""'"); 
    }
    arg3 = reinterpret_cast< Ferris::Attribute * >(argp3);
    result = (Ferris::FerrisStatException *)new Ferris::FerrisStatException((Ferris::FerrisException_CodeState const &)*arg1,(std::string const &)*arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisStatException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisStatException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    std::string *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisStatException *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_FerrisStatException(state,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisStatException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisStatException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisStatException" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisStatException" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (Ferris::FerrisStatException *)new Ferris::FerrisStatException((Ferris::FerrisException_CodeState const &)*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisStatException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisStatException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisStatException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisStatException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisStatException'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisSetCWDException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    std::string *arg2 = 0 ;
    Ferris::Attribute *arg3 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    Ferris::FerrisSetCWDException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisSetCWDException(state,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisSetCWDException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisSetCWDException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisSetCWDException" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisSetCWDException" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisSetCWDException" "', argument " "3"" of type '" "Ferris::Attribute *""'"); 
    }
    arg3 = reinterpret_cast< Ferris::Attribute * >(argp3);
    result = (Ferris::FerrisSetCWDException *)new Ferris::FerrisSetCWDException((Ferris::FerrisException_CodeState const &)*arg1,(std::string const &)*arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisSetCWDException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisSetCWDException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    std::string *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisSetCWDException *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_FerrisSetCWDException(state,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisSetCWDException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisSetCWDException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisSetCWDException" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisSetCWDException" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (Ferris::FerrisSetCWDException *)new Ferris::FerrisSetCWDException((Ferris::FerrisException_CodeState const &)*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisSetCWDException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisSetCWDException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisSetCWDException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisSetCWDException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisSetCWDException'");
  XSRETURN(0);
}


XS(_wrap_new_CanNotGetStream__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::CanNotGetStream *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CanNotGetStream(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CanNotGetStream" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotGetStream" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CanNotGetStream" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotGetStream" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CanNotGetStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotGetStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CanNotGetStream" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::CanNotGetStream *)new Ferris::CanNotGetStream((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CanNotGetStream, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CanNotGetStream__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::CanNotGetStream *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CanNotGetStream(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CanNotGetStream" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotGetStream" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CanNotGetStream" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotGetStream" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CanNotGetStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotGetStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::CanNotGetStream *)new Ferris::CanNotGetStream((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CanNotGetStream, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_CanNotGetStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CanNotGetStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CanNotGetStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CanNotGetStream'");
  XSRETURN(0);
}


XS(_wrap_new_NotSupported__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::NotSupported *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_NotSupported(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NotSupported" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NotSupported" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NotSupported" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NotSupported" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NotSupported" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NotSupported" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_NotSupported" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::NotSupported *)new Ferris::NotSupported((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NotSupported, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_NotSupported__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::NotSupported *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_NotSupported(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NotSupported" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NotSupported" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NotSupported" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NotSupported" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NotSupported" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NotSupported" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::NotSupported *)new Ferris::NotSupported((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NotSupported, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_NotSupported) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NotSupported__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NotSupported__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_NotSupported'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisNotSupportedInThisContext__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisNotSupportedInThisContext *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisNotSupportedInThisContext(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisNotSupportedInThisContext" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisNotSupportedInThisContext" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisNotSupportedInThisContext" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisNotSupportedInThisContext" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisNotSupportedInThisContext" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisNotSupportedInThisContext" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisNotSupportedInThisContext" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisNotSupportedInThisContext *)new Ferris::FerrisNotSupportedInThisContext((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisNotSupportedInThisContext, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisNotSupportedInThisContext__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisNotSupportedInThisContext *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisNotSupportedInThisContext(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisNotSupportedInThisContext" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisNotSupportedInThisContext" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisNotSupportedInThisContext" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisNotSupportedInThisContext" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisNotSupportedInThisContext" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisNotSupportedInThisContext" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisNotSupportedInThisContext *)new Ferris::FerrisNotSupportedInThisContext((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisNotSupportedInThisContext, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisNotSupportedInThisContext) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisNotSupportedInThisContext__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisNotSupportedInThisContext__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisNotSupportedInThisContext'");
  XSRETURN(0);
}


XS(_wrap_new_RootContextCreationFailed__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::RootContextCreationFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_RootContextCreationFailed(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_RootContextCreationFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RootContextCreationFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_RootContextCreationFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RootContextCreationFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_RootContextCreationFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RootContextCreationFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_RootContextCreationFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::RootContextCreationFailed *)new Ferris::RootContextCreationFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__RootContextCreationFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_RootContextCreationFailed__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::RootContextCreationFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_RootContextCreationFailed(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_RootContextCreationFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RootContextCreationFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_RootContextCreationFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RootContextCreationFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_RootContextCreationFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RootContextCreationFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::RootContextCreationFailed *)new Ferris::RootContextCreationFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__RootContextCreationFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_RootContextCreationFailed) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_RootContextCreationFailed__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_RootContextCreationFailed__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_RootContextCreationFailed'");
  XSRETURN(0);
}


XS(_wrap_new_CanNotDelete__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::CanNotDelete *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CanNotDelete(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CanNotDelete" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotDelete" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CanNotDelete" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotDelete" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CanNotDelete" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotDelete" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CanNotDelete" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::CanNotDelete *)new Ferris::CanNotDelete((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CanNotDelete, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CanNotDelete__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::CanNotDelete *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CanNotDelete(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CanNotDelete" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotDelete" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CanNotDelete" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotDelete" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CanNotDelete" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotDelete" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::CanNotDelete *)new Ferris::CanNotDelete((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CanNotDelete, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_CanNotDelete) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CanNotDelete__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CanNotDelete__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CanNotDelete'");
  XSRETURN(0);
}


XS(_wrap_new_NoSuchObject__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::NoSuchObject *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_NoSuchObject(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NoSuchObject" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchObject" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NoSuchObject" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchObject" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NoSuchObject" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchObject" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_NoSuchObject" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::NoSuchObject *)new Ferris::NoSuchObject((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NoSuchObject, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_NoSuchObject__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::NoSuchObject *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_NoSuchObject(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NoSuchObject" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchObject" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NoSuchObject" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchObject" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NoSuchObject" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchObject" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::NoSuchObject *)new Ferris::NoSuchObject((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NoSuchObject, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_NoSuchObject) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NoSuchObject__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NoSuchObject__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_NoSuchObject'");
  XSRETURN(0);
}


XS(_wrap_new_NoSuchUser__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::NoSuchUser *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_NoSuchUser(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NoSuchUser" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchUser" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NoSuchUser" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchUser" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NoSuchUser" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchUser" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_NoSuchUser" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::NoSuchUser *)new Ferris::NoSuchUser((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NoSuchUser, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_NoSuchUser__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::NoSuchUser *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_NoSuchUser(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NoSuchUser" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchUser" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NoSuchUser" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchUser" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NoSuchUser" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchUser" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::NoSuchUser *)new Ferris::NoSuchUser((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NoSuchUser, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_NoSuchUser) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NoSuchUser__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NoSuchUser__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_NoSuchUser'");
  XSRETURN(0);
}


XS(_wrap_new_NoSuchGroup__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::NoSuchGroup *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_NoSuchGroup(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NoSuchGroup" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchGroup" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NoSuchGroup" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchGroup" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NoSuchGroup" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchGroup" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_NoSuchGroup" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::NoSuchGroup *)new Ferris::NoSuchGroup((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NoSuchGroup, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_NoSuchGroup__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::NoSuchGroup *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_NoSuchGroup(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NoSuchGroup" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchGroup" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NoSuchGroup" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchGroup" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NoSuchGroup" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchGroup" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::NoSuchGroup *)new Ferris::NoSuchGroup((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NoSuchGroup, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_NoSuchGroup) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NoSuchGroup__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NoSuchGroup__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_NoSuchGroup'");
  XSRETURN(0);
}


XS(_wrap_new_ObjectExists__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::ObjectExists *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_ObjectExists(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ObjectExists" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ObjectExists" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ObjectExists" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ObjectExists" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ObjectExists" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ObjectExists" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ObjectExists" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::ObjectExists *)new Ferris::ObjectExists((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ObjectExists, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_ObjectExists__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::ObjectExists *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_ObjectExists(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ObjectExists" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ObjectExists" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ObjectExists" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ObjectExists" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ObjectExists" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ObjectExists" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::ObjectExists *)new Ferris::ObjectExists((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ObjectExists, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_ObjectExists) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_ObjectExists__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_ObjectExists__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_ObjectExists'");
  XSRETURN(0);
}


XS(_wrap_new_ContextExists__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::ContextExists *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_ContextExists(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ContextExists" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ContextExists" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ContextExists" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ContextExists" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ContextExists" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ContextExists" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ContextExists" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::ContextExists *)new Ferris::ContextExists((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ContextExists, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_ContextExists__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::ContextExists *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_ContextExists(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ContextExists" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ContextExists" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ContextExists" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ContextExists" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ContextExists" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ContextExists" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::ContextExists *)new Ferris::ContextExists((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ContextExists, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_ContextExists) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_ContextExists__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_ContextExists__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_ContextExists'");
  XSRETURN(0);
}


XS(_wrap_new_CopyFailed__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::CopyFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CopyFailed(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CopyFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CopyFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CopyFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CopyFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CopyFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CopyFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CopyFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::CopyFailed *)new Ferris::CopyFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CopyFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CopyFailed__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::CopyFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CopyFailed(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CopyFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CopyFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CopyFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CopyFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CopyFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CopyFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::CopyFailed *)new Ferris::CopyFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CopyFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_CopyFailed) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CopyFailed__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CopyFailed__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CopyFailed'");
  XSRETURN(0);
}


XS(_wrap_new_RemoveFailed__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::RemoveFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_RemoveFailed(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_RemoveFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RemoveFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_RemoveFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RemoveFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_RemoveFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RemoveFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_RemoveFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::RemoveFailed *)new Ferris::RemoveFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__RemoveFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_RemoveFailed__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::RemoveFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_RemoveFailed(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_RemoveFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RemoveFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_RemoveFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RemoveFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_RemoveFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RemoveFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::RemoveFailed *)new Ferris::RemoveFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__RemoveFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_RemoveFailed) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_RemoveFailed__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_RemoveFailed__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_RemoveFailed'");
  XSRETURN(0);
}


XS(_wrap_new_AttributeNotWritable__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::AttributeNotWritable *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_AttributeNotWritable(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AttributeNotWritable" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AttributeNotWritable" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_AttributeNotWritable" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AttributeNotWritable" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_AttributeNotWritable" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AttributeNotWritable" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_AttributeNotWritable" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::AttributeNotWritable *)new Ferris::AttributeNotWritable((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__AttributeNotWritable, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_AttributeNotWritable__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::AttributeNotWritable *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_AttributeNotWritable(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AttributeNotWritable" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AttributeNotWritable" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_AttributeNotWritable" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AttributeNotWritable" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_AttributeNotWritable" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AttributeNotWritable" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::AttributeNotWritable *)new Ferris::AttributeNotWritable((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__AttributeNotWritable, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_AttributeNotWritable) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_AttributeNotWritable__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_AttributeNotWritable__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_AttributeNotWritable'");
  XSRETURN(0);
}


XS(_wrap_new_SubContextAlreadyInUse__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::SubContextAlreadyInUse *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_SubContextAlreadyInUse(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SubContextAlreadyInUse" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SubContextAlreadyInUse" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SubContextAlreadyInUse" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SubContextAlreadyInUse" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SubContextAlreadyInUse" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SubContextAlreadyInUse" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_SubContextAlreadyInUse" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::SubContextAlreadyInUse *)new Ferris::SubContextAlreadyInUse((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__SubContextAlreadyInUse, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_SubContextAlreadyInUse__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::SubContextAlreadyInUse *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_SubContextAlreadyInUse(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SubContextAlreadyInUse" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SubContextAlreadyInUse" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SubContextAlreadyInUse" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SubContextAlreadyInUse" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SubContextAlreadyInUse" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SubContextAlreadyInUse" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::SubContextAlreadyInUse *)new Ferris::SubContextAlreadyInUse((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__SubContextAlreadyInUse, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_SubContextAlreadyInUse) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_SubContextAlreadyInUse__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_SubContextAlreadyInUse__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_SubContextAlreadyInUse'");
  XSRETURN(0);
}


XS(_wrap_new_AttributeAlreadyInUse__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::AttributeAlreadyInUse *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_AttributeAlreadyInUse(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AttributeAlreadyInUse" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AttributeAlreadyInUse" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_AttributeAlreadyInUse" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AttributeAlreadyInUse" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_AttributeAlreadyInUse" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AttributeAlreadyInUse" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_AttributeAlreadyInUse" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::AttributeAlreadyInUse *)new Ferris::AttributeAlreadyInUse((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__AttributeAlreadyInUse, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_AttributeAlreadyInUse__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::AttributeAlreadyInUse *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_AttributeAlreadyInUse(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AttributeAlreadyInUse" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AttributeAlreadyInUse" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_AttributeAlreadyInUse" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AttributeAlreadyInUse" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_AttributeAlreadyInUse" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AttributeAlreadyInUse" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::AttributeAlreadyInUse *)new Ferris::AttributeAlreadyInUse((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__AttributeAlreadyInUse, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_AttributeAlreadyInUse) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_AttributeAlreadyInUse__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_AttributeAlreadyInUse__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_AttributeAlreadyInUse'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisCreateSubContextFailed__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisCreateSubContextFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisCreateSubContextFailed(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisCreateSubContextFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateSubContextFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisCreateSubContextFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateSubContextFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisCreateSubContextFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateSubContextFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisCreateSubContextFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisCreateSubContextFailed *)new Ferris::FerrisCreateSubContextFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisCreateSubContextFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisCreateSubContextFailed__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisCreateSubContextFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisCreateSubContextFailed(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisCreateSubContextFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateSubContextFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisCreateSubContextFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateSubContextFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisCreateSubContextFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateSubContextFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisCreateSubContextFailed *)new Ferris::FerrisCreateSubContextFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisCreateSubContextFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisCreateSubContextFailed) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisCreateSubContextFailed__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisCreateSubContextFailed__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisCreateSubContextFailed'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisCreateSubContextNotSupported__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisCreateSubContextNotSupported *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisCreateSubContextNotSupported(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisCreateSubContextNotSupported" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateSubContextNotSupported" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisCreateSubContextNotSupported" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateSubContextNotSupported" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisCreateSubContextNotSupported" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateSubContextNotSupported" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisCreateSubContextNotSupported" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisCreateSubContextNotSupported *)new Ferris::FerrisCreateSubContextNotSupported((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisCreateSubContextNotSupported, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisCreateSubContextNotSupported__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisCreateSubContextNotSupported *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisCreateSubContextNotSupported(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisCreateSubContextNotSupported" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateSubContextNotSupported" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisCreateSubContextNotSupported" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateSubContextNotSupported" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisCreateSubContextNotSupported" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateSubContextNotSupported" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisCreateSubContextNotSupported *)new Ferris::FerrisCreateSubContextNotSupported((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisCreateSubContextNotSupported, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisCreateSubContextNotSupported) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisCreateSubContextNotSupported__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisCreateSubContextNotSupported__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisCreateSubContextNotSupported'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisCreateAttributeFailed__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisCreateAttributeFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisCreateAttributeFailed(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisCreateAttributeFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateAttributeFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisCreateAttributeFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateAttributeFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisCreateAttributeFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateAttributeFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisCreateAttributeFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisCreateAttributeFailed *)new Ferris::FerrisCreateAttributeFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisCreateAttributeFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisCreateAttributeFailed__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisCreateAttributeFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisCreateAttributeFailed(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisCreateAttributeFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateAttributeFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisCreateAttributeFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateAttributeFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisCreateAttributeFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateAttributeFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisCreateAttributeFailed *)new Ferris::FerrisCreateAttributeFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisCreateAttributeFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisCreateAttributeFailed) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisCreateAttributeFailed__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisCreateAttributeFailed__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisCreateAttributeFailed'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisCreateAttributeNotSupported__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisCreateAttributeNotSupported *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisCreateAttributeNotSupported(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisCreateAttributeNotSupported" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateAttributeNotSupported" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisCreateAttributeNotSupported" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateAttributeNotSupported" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisCreateAttributeNotSupported" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateAttributeNotSupported" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisCreateAttributeNotSupported" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisCreateAttributeNotSupported *)new Ferris::FerrisCreateAttributeNotSupported((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisCreateAttributeNotSupported, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisCreateAttributeNotSupported__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisCreateAttributeNotSupported *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisCreateAttributeNotSupported(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisCreateAttributeNotSupported" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateAttributeNotSupported" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisCreateAttributeNotSupported" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateAttributeNotSupported" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisCreateAttributeNotSupported" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCreateAttributeNotSupported" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisCreateAttributeNotSupported *)new Ferris::FerrisCreateAttributeNotSupported((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisCreateAttributeNotSupported, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisCreateAttributeNotSupported) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisCreateAttributeNotSupported__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisCreateAttributeNotSupported__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisCreateAttributeNotSupported'");
  XSRETURN(0);
}


XS(_wrap_new_NoSuchSubContext__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::NoSuchSubContext *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_NoSuchSubContext(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NoSuchSubContext" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchSubContext" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NoSuchSubContext" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchSubContext" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NoSuchSubContext" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchSubContext" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_NoSuchSubContext" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::NoSuchSubContext *)new Ferris::NoSuchSubContext((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NoSuchSubContext, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_NoSuchSubContext__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::NoSuchSubContext *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_NoSuchSubContext(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NoSuchSubContext" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchSubContext" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NoSuchSubContext" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchSubContext" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NoSuchSubContext" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchSubContext" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::NoSuchSubContext *)new Ferris::NoSuchSubContext((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NoSuchSubContext, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_NoSuchSubContext) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NoSuchSubContext__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NoSuchSubContext__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_NoSuchSubContext'");
  XSRETURN(0);
}


XS(_wrap_new_NoSuchAttribute__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::NoSuchAttribute *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_NoSuchAttribute(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NoSuchAttribute" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchAttribute" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NoSuchAttribute" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchAttribute" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NoSuchAttribute" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchAttribute" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_NoSuchAttribute" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::NoSuchAttribute *)new Ferris::NoSuchAttribute((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NoSuchAttribute, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_NoSuchAttribute__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::NoSuchAttribute *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_NoSuchAttribute(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NoSuchAttribute" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchAttribute" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NoSuchAttribute" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchAttribute" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NoSuchAttribute" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchAttribute" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::NoSuchAttribute *)new Ferris::NoSuchAttribute((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NoSuchAttribute, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_NoSuchAttribute) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NoSuchAttribute__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NoSuchAttribute__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_NoSuchAttribute'");
  XSRETURN(0);
}


XS(_wrap_new_NoSuchContextClass__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::NoSuchContextClass *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_NoSuchContextClass(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NoSuchContextClass" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchContextClass" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NoSuchContextClass" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchContextClass" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NoSuchContextClass" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchContextClass" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_NoSuchContextClass" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::NoSuchContextClass *)new Ferris::NoSuchContextClass((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NoSuchContextClass, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_NoSuchContextClass__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::NoSuchContextClass *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_NoSuchContextClass(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NoSuchContextClass" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchContextClass" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NoSuchContextClass" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchContextClass" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NoSuchContextClass" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchContextClass" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::NoSuchContextClass *)new Ferris::NoSuchContextClass((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NoSuchContextClass, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_NoSuchContextClass) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NoSuchContextClass__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NoSuchContextClass__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_NoSuchContextClass'");
  XSRETURN(0);
}


XS(_wrap_new_CanNotReadContext__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::CanNotReadContext *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CanNotReadContext(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CanNotReadContext" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotReadContext" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CanNotReadContext" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotReadContext" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CanNotReadContext" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotReadContext" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CanNotReadContext" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::CanNotReadContext *)new Ferris::CanNotReadContext((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CanNotReadContext, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CanNotReadContext__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::CanNotReadContext *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CanNotReadContext(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CanNotReadContext" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotReadContext" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CanNotReadContext" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotReadContext" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CanNotReadContext" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotReadContext" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::CanNotReadContext *)new Ferris::CanNotReadContext((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CanNotReadContext, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_CanNotReadContext) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CanNotReadContext__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CanNotReadContext__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CanNotReadContext'");
  XSRETURN(0);
}


XS(_wrap_new_CanNotReadContextPcctsParseFailed) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    SwigValueWrapper< std::list< std::string > > arg5 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    void *argp5 ;
    int res5 = 0 ;
    int argvi = 0;
    Ferris::CanNotReadContextPcctsParseFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: new_CanNotReadContextPcctsParseFailed(state,log,e,a,syntaxErrorList);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CanNotReadContextPcctsParseFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotReadContextPcctsParseFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CanNotReadContextPcctsParseFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotReadContextPcctsParseFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CanNotReadContextPcctsParseFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotReadContextPcctsParseFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CanNotReadContextPcctsParseFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    {
      res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_std__listT_std__string_t,  0 );
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CanNotReadContextPcctsParseFailed" "', argument " "5"" of type '" "Ferris::stringlist_t""'"); 
      }  
      if (!argp5) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotReadContextPcctsParseFailed" "', argument " "5"" of type '" "Ferris::stringlist_t""'");
      } else {
        arg5 = *(reinterpret_cast< Ferris::stringlist_t * >(argp5));
      }
    }
    result = (Ferris::CanNotReadContextPcctsParseFailed *)new Ferris::CanNotReadContextPcctsParseFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CanNotReadContextPcctsParseFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CanNotReadContextPcctsParseFailed) {
  {
    Ferris::CanNotReadContextPcctsParseFailed *arg1 = (Ferris::CanNotReadContextPcctsParseFailed *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CanNotReadContextPcctsParseFailed(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__CanNotReadContextPcctsParseFailed, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CanNotReadContextPcctsParseFailed" "', argument " "1"" of type '" "Ferris::CanNotReadContextPcctsParseFailed *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::CanNotReadContextPcctsParseFailed * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CanNotReadContextPcctsParseFailed_getSyntaxErrorList) {
  {
    Ferris::CanNotReadContextPcctsParseFailed *arg1 = (Ferris::CanNotReadContextPcctsParseFailed *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::stringlist_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CanNotReadContextPcctsParseFailed_getSyntaxErrorList(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__CanNotReadContextPcctsParseFailed, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CanNotReadContextPcctsParseFailed_getSyntaxErrorList" "', argument " "1"" of type '" "Ferris::CanNotReadContextPcctsParseFailed *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::CanNotReadContextPcctsParseFailed * >(argp1);
    result = (Ferris::stringlist_t *) &(arg1)->getSyntaxErrorList();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CanNotDereferenceDanglingSoftLink__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::CanNotDereferenceDanglingSoftLink *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CanNotDereferenceDanglingSoftLink(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CanNotDereferenceDanglingSoftLink" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotDereferenceDanglingSoftLink" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CanNotDereferenceDanglingSoftLink" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotDereferenceDanglingSoftLink" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CanNotDereferenceDanglingSoftLink" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotDereferenceDanglingSoftLink" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CanNotDereferenceDanglingSoftLink" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::CanNotDereferenceDanglingSoftLink *)new Ferris::CanNotDereferenceDanglingSoftLink((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CanNotDereferenceDanglingSoftLink, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CanNotDereferenceDanglingSoftLink__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::CanNotDereferenceDanglingSoftLink *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CanNotDereferenceDanglingSoftLink(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CanNotDereferenceDanglingSoftLink" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotDereferenceDanglingSoftLink" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CanNotDereferenceDanglingSoftLink" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotDereferenceDanglingSoftLink" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CanNotDereferenceDanglingSoftLink" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotDereferenceDanglingSoftLink" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::CanNotDereferenceDanglingSoftLink *)new Ferris::CanNotDereferenceDanglingSoftLink((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CanNotDereferenceDanglingSoftLink, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_CanNotDereferenceDanglingSoftLink) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CanNotDereferenceDanglingSoftLink__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CanNotDereferenceDanglingSoftLink__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CanNotDereferenceDanglingSoftLink'");
  XSRETURN(0);
}


XS(_wrap_new_CanNotMonitorDirWithFAM__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    Fampp::FamppDirMonitorInitFailedException *arg3 = 0 ;
    std::string *arg4 = 0 ;
    Ferris::Attribute *arg5 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    Ferris::CanNotMonitorDirWithFAM *result = 0 ;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: new_CanNotMonitorDirWithFAM(state,log,_ne,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CanNotMonitorDirWithFAM" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotMonitorDirWithFAM" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CanNotMonitorDirWithFAM" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotMonitorDirWithFAM" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Fampp__FamppDirMonitorInitFailedException,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CanNotMonitorDirWithFAM" "', argument " "3"" of type '" "Fampp::FamppDirMonitorInitFailedException &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotMonitorDirWithFAM" "', argument " "3"" of type '" "Fampp::FamppDirMonitorInitFailedException &""'"); 
    }
    arg3 = reinterpret_cast< Fampp::FamppDirMonitorInitFailedException * >(argp3);
    {
      std::string *ptr = (std::string *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CanNotMonitorDirWithFAM" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotMonitorDirWithFAM" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      arg4 = ptr;
    }
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_CanNotMonitorDirWithFAM" "', argument " "5"" of type '" "Ferris::Attribute *""'"); 
    }
    arg5 = reinterpret_cast< Ferris::Attribute * >(argp5);
    result = (Ferris::CanNotMonitorDirWithFAM *)new Ferris::CanNotMonitorDirWithFAM((Ferris::FerrisException_CodeState const &)*arg1,arg2,*arg3,(std::string const &)*arg4,arg5);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CanNotMonitorDirWithFAM, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    if (SWIG_IsNewObj(res4)) delete arg4;
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res4)) delete arg4;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CanNotMonitorDirWithFAM__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    Fampp::FamppDirMonitorInitFailedException *arg3 = 0 ;
    std::string *arg4 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::CanNotMonitorDirWithFAM *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CanNotMonitorDirWithFAM(state,log,_ne,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CanNotMonitorDirWithFAM" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotMonitorDirWithFAM" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CanNotMonitorDirWithFAM" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotMonitorDirWithFAM" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Fampp__FamppDirMonitorInitFailedException,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CanNotMonitorDirWithFAM" "', argument " "3"" of type '" "Fampp::FamppDirMonitorInitFailedException &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotMonitorDirWithFAM" "', argument " "3"" of type '" "Fampp::FamppDirMonitorInitFailedException &""'"); 
    }
    arg3 = reinterpret_cast< Fampp::FamppDirMonitorInitFailedException * >(argp3);
    {
      std::string *ptr = (std::string *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CanNotMonitorDirWithFAM" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotMonitorDirWithFAM" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      arg4 = ptr;
    }
    result = (Ferris::CanNotMonitorDirWithFAM *)new Ferris::CanNotMonitorDirWithFAM((Ferris::FerrisException_CodeState const &)*arg1,arg2,*arg3,(std::string const &)*arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CanNotMonitorDirWithFAM, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    if (SWIG_IsNewObj(res4)) delete arg4;
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res4)) delete arg4;
    SWIG_croak_null();
  }
}


XS(_wrap_new_CanNotMonitorDirWithFAM) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Fampp__FamppDirMonitorInitFailedException, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Fampp__FamppDirMonitorInitFailedException, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(4), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CanNotMonitorDirWithFAM__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CanNotMonitorDirWithFAM__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CanNotMonitorDirWithFAM'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisNotReadableAsContext__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisNotReadableAsContext *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisNotReadableAsContext(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisNotReadableAsContext" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisNotReadableAsContext" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisNotReadableAsContext" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisNotReadableAsContext" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisNotReadableAsContext" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisNotReadableAsContext" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisNotReadableAsContext" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisNotReadableAsContext *)new Ferris::FerrisNotReadableAsContext((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisNotReadableAsContext, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisNotReadableAsContext__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisNotReadableAsContext *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisNotReadableAsContext(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisNotReadableAsContext" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisNotReadableAsContext" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisNotReadableAsContext" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisNotReadableAsContext" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisNotReadableAsContext" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisNotReadableAsContext" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisNotReadableAsContext *)new Ferris::FerrisNotReadableAsContext((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisNotReadableAsContext, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisNotReadableAsContext) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisNotReadableAsContext__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisNotReadableAsContext__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisNotReadableAsContext'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisImageSaveFailed__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisImageSaveFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisImageSaveFailed(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisImageSaveFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisImageSaveFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisImageSaveFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisImageSaveFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisImageSaveFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisImageSaveFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisImageSaveFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisImageSaveFailed *)new Ferris::FerrisImageSaveFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisImageSaveFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisImageSaveFailed__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisImageSaveFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisImageSaveFailed(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisImageSaveFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisImageSaveFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisImageSaveFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisImageSaveFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisImageSaveFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisImageSaveFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisImageSaveFailed *)new Ferris::FerrisImageSaveFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisImageSaveFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisImageSaveFailed) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisImageSaveFailed__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisImageSaveFailed__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisImageSaveFailed'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisImageLoadFailed__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisImageLoadFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisImageLoadFailed(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisImageLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisImageLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisImageLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisImageLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisImageLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisImageLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisImageLoadFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisImageLoadFailed *)new Ferris::FerrisImageLoadFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisImageLoadFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisImageLoadFailed__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisImageLoadFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisImageLoadFailed(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisImageLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisImageLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisImageLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisImageLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisImageLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisImageLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisImageLoadFailed *)new Ferris::FerrisImageLoadFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisImageLoadFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisImageLoadFailed) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisImageLoadFailed__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisImageLoadFailed__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisImageLoadFailed'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisPNGImageLoadFailed__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisPNGImageLoadFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisPNGImageLoadFailed(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisPNGImageLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisPNGImageLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisPNGImageLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisPNGImageLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisPNGImageLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisPNGImageLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisPNGImageLoadFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisPNGImageLoadFailed *)new Ferris::FerrisPNGImageLoadFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisPNGImageLoadFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisPNGImageLoadFailed__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisPNGImageLoadFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisPNGImageLoadFailed(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisPNGImageLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisPNGImageLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisPNGImageLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisPNGImageLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisPNGImageLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisPNGImageLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisPNGImageLoadFailed *)new Ferris::FerrisPNGImageLoadFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisPNGImageLoadFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisPNGImageLoadFailed) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisPNGImageLoadFailed__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisPNGImageLoadFailed__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisPNGImageLoadFailed'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisJPEGImageLoadFailed__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisJPEGImageLoadFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisJPEGImageLoadFailed(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisJPEGImageLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisJPEGImageLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisJPEGImageLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisJPEGImageLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisJPEGImageLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisJPEGImageLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisJPEGImageLoadFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisJPEGImageLoadFailed *)new Ferris::FerrisJPEGImageLoadFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisJPEGImageLoadFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisJPEGImageLoadFailed__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisJPEGImageLoadFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisJPEGImageLoadFailed(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisJPEGImageLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisJPEGImageLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisJPEGImageLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisJPEGImageLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisJPEGImageLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisJPEGImageLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisJPEGImageLoadFailed *)new Ferris::FerrisJPEGImageLoadFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisJPEGImageLoadFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisJPEGImageLoadFailed) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisJPEGImageLoadFailed__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisJPEGImageLoadFailed__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisJPEGImageLoadFailed'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisGIMPImageLoadFailed__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisGIMPImageLoadFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisGIMPImageLoadFailed(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisGIMPImageLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisGIMPImageLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisGIMPImageLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisGIMPImageLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisGIMPImageLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisGIMPImageLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisGIMPImageLoadFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisGIMPImageLoadFailed *)new Ferris::FerrisGIMPImageLoadFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisGIMPImageLoadFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisGIMPImageLoadFailed__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisGIMPImageLoadFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisGIMPImageLoadFailed(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisGIMPImageLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisGIMPImageLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisGIMPImageLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisGIMPImageLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisGIMPImageLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisGIMPImageLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisGIMPImageLoadFailed *)new Ferris::FerrisGIMPImageLoadFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisGIMPImageLoadFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisGIMPImageLoadFailed) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisGIMPImageLoadFailed__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisGIMPImageLoadFailed__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisGIMPImageLoadFailed'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisImlib2ImageLoadFailed__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisImlib2ImageLoadFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisImlib2ImageLoadFailed(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisImlib2ImageLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisImlib2ImageLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisImlib2ImageLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisImlib2ImageLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisImlib2ImageLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisImlib2ImageLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisImlib2ImageLoadFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisImlib2ImageLoadFailed *)new Ferris::FerrisImlib2ImageLoadFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisImlib2ImageLoadFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisImlib2ImageLoadFailed__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisImlib2ImageLoadFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisImlib2ImageLoadFailed(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisImlib2ImageLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisImlib2ImageLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisImlib2ImageLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisImlib2ImageLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisImlib2ImageLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisImlib2ImageLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisImlib2ImageLoadFailed *)new Ferris::FerrisImlib2ImageLoadFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisImlib2ImageLoadFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisImlib2ImageLoadFailed) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisImlib2ImageLoadFailed__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisImlib2ImageLoadFailed__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisImlib2ImageLoadFailed'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisWaitTimedOut__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisWaitTimedOut *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisWaitTimedOut(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisWaitTimedOut" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisWaitTimedOut" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisWaitTimedOut" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisWaitTimedOut" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisWaitTimedOut" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisWaitTimedOut" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisWaitTimedOut" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisWaitTimedOut *)new Ferris::FerrisWaitTimedOut((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisWaitTimedOut, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisWaitTimedOut__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisWaitTimedOut *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisWaitTimedOut(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisWaitTimedOut" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisWaitTimedOut" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisWaitTimedOut" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisWaitTimedOut" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisWaitTimedOut" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisWaitTimedOut" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisWaitTimedOut *)new Ferris::FerrisWaitTimedOut((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisWaitTimedOut, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisWaitTimedOut) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisWaitTimedOut__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisWaitTimedOut__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisWaitTimedOut'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisSqlServerNameNotFound__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisSqlServerNameNotFound *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisSqlServerNameNotFound(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisSqlServerNameNotFound" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisSqlServerNameNotFound" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisSqlServerNameNotFound" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisSqlServerNameNotFound" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisSqlServerNameNotFound" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisSqlServerNameNotFound" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisSqlServerNameNotFound" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisSqlServerNameNotFound *)new Ferris::FerrisSqlServerNameNotFound((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisSqlServerNameNotFound, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisSqlServerNameNotFound__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisSqlServerNameNotFound *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisSqlServerNameNotFound(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisSqlServerNameNotFound" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisSqlServerNameNotFound" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisSqlServerNameNotFound" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisSqlServerNameNotFound" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisSqlServerNameNotFound" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisSqlServerNameNotFound" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisSqlServerNameNotFound *)new Ferris::FerrisSqlServerNameNotFound((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisSqlServerNameNotFound, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisSqlServerNameNotFound) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisSqlServerNameNotFound__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisSqlServerNameNotFound__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisSqlServerNameNotFound'");
  XSRETURN(0);
}


XS(_wrap_new_GModuleOpenFailed__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::GModuleOpenFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_GModuleOpenFailed(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_GModuleOpenFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GModuleOpenFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_GModuleOpenFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GModuleOpenFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_GModuleOpenFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GModuleOpenFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_GModuleOpenFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::GModuleOpenFailed *)new Ferris::GModuleOpenFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__GModuleOpenFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_GModuleOpenFailed__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::GModuleOpenFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_GModuleOpenFailed(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_GModuleOpenFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GModuleOpenFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_GModuleOpenFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GModuleOpenFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_GModuleOpenFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GModuleOpenFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::GModuleOpenFailed *)new Ferris::GModuleOpenFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__GModuleOpenFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_GModuleOpenFailed) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_GModuleOpenFailed__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_GModuleOpenFailed__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_GModuleOpenFailed'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisStreamLoadFailed__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisStreamLoadFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisStreamLoadFailed(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisStreamLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisStreamLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisStreamLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisStreamLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisStreamLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisStreamLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisStreamLoadFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisStreamLoadFailed *)new Ferris::FerrisStreamLoadFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisStreamLoadFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisStreamLoadFailed__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisStreamLoadFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisStreamLoadFailed(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisStreamLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisStreamLoadFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisStreamLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisStreamLoadFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisStreamLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisStreamLoadFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisStreamLoadFailed *)new Ferris::FerrisStreamLoadFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisStreamLoadFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisStreamLoadFailed) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisStreamLoadFailed__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisStreamLoadFailed__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisStreamLoadFailed'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisCanNotCreateLeafOfLeaf__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisCanNotCreateLeafOfLeaf *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisCanNotCreateLeafOfLeaf(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisCanNotCreateLeafOfLeaf" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCanNotCreateLeafOfLeaf" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisCanNotCreateLeafOfLeaf" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCanNotCreateLeafOfLeaf" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisCanNotCreateLeafOfLeaf" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCanNotCreateLeafOfLeaf" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisCanNotCreateLeafOfLeaf" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisCanNotCreateLeafOfLeaf *)new Ferris::FerrisCanNotCreateLeafOfLeaf((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisCanNotCreateLeafOfLeaf, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisCanNotCreateLeafOfLeaf__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisCanNotCreateLeafOfLeaf *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisCanNotCreateLeafOfLeaf(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisCanNotCreateLeafOfLeaf" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCanNotCreateLeafOfLeaf" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisCanNotCreateLeafOfLeaf" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCanNotCreateLeafOfLeaf" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisCanNotCreateLeafOfLeaf" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCanNotCreateLeafOfLeaf" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisCanNotCreateLeafOfLeaf *)new Ferris::FerrisCanNotCreateLeafOfLeaf((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisCanNotCreateLeafOfLeaf, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisCanNotCreateLeafOfLeaf) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisCanNotCreateLeafOfLeaf__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisCanNotCreateLeafOfLeaf__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisCanNotCreateLeafOfLeaf'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisOutOfMemory__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisOutOfMemory *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisOutOfMemory(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisOutOfMemory" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisOutOfMemory" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisOutOfMemory" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisOutOfMemory" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisOutOfMemory" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisOutOfMemory" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisOutOfMemory" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisOutOfMemory *)new Ferris::FerrisOutOfMemory((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisOutOfMemory, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisOutOfMemory__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisOutOfMemory *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisOutOfMemory(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisOutOfMemory" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisOutOfMemory" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisOutOfMemory" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisOutOfMemory" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisOutOfMemory" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisOutOfMemory" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisOutOfMemory *)new Ferris::FerrisOutOfMemory((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisOutOfMemory, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisOutOfMemory) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisOutOfMemory__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisOutOfMemory__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisOutOfMemory'");
  XSRETURN(0);
}


XS(_wrap_new_CanNotAddExternalAttribute__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::CanNotAddExternalAttribute *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CanNotAddExternalAttribute(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CanNotAddExternalAttribute" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotAddExternalAttribute" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CanNotAddExternalAttribute" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotAddExternalAttribute" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CanNotAddExternalAttribute" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotAddExternalAttribute" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CanNotAddExternalAttribute" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::CanNotAddExternalAttribute *)new Ferris::CanNotAddExternalAttribute((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CanNotAddExternalAttribute, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CanNotAddExternalAttribute__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::CanNotAddExternalAttribute *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CanNotAddExternalAttribute(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CanNotAddExternalAttribute" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotAddExternalAttribute" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CanNotAddExternalAttribute" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotAddExternalAttribute" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CanNotAddExternalAttribute" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotAddExternalAttribute" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::CanNotAddExternalAttribute *)new Ferris::CanNotAddExternalAttribute((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CanNotAddExternalAttribute, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_CanNotAddExternalAttribute) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CanNotAddExternalAttribute__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CanNotAddExternalAttribute__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CanNotAddExternalAttribute'");
  XSRETURN(0);
}


XS(_wrap_new_CurlStaticInitFailed__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::CurlStaticInitFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CurlStaticInitFailed(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CurlStaticInitFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlStaticInitFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CurlStaticInitFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlStaticInitFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CurlStaticInitFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlStaticInitFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CurlStaticInitFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::CurlStaticInitFailed *)new Ferris::CurlStaticInitFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CurlStaticInitFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CurlStaticInitFailed__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::CurlStaticInitFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CurlStaticInitFailed(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CurlStaticInitFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlStaticInitFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CurlStaticInitFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlStaticInitFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CurlStaticInitFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlStaticInitFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::CurlStaticInitFailed *)new Ferris::CurlStaticInitFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CurlStaticInitFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_CurlStaticInitFailed) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CurlStaticInitFailed__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CurlStaticInitFailed__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CurlStaticInitFailed'");
  XSRETURN(0);
}


XS(_wrap_new_CurlEasyInitFailed__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::CurlEasyInitFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CurlEasyInitFailed(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CurlEasyInitFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlEasyInitFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CurlEasyInitFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlEasyInitFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CurlEasyInitFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlEasyInitFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CurlEasyInitFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::CurlEasyInitFailed *)new Ferris::CurlEasyInitFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CurlEasyInitFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CurlEasyInitFailed__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::CurlEasyInitFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CurlEasyInitFailed(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CurlEasyInitFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlEasyInitFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CurlEasyInitFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlEasyInitFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CurlEasyInitFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlEasyInitFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::CurlEasyInitFailed *)new Ferris::CurlEasyInitFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CurlEasyInitFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_CurlEasyInitFailed) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CurlEasyInitFailed__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CurlEasyInitFailed__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CurlEasyInitFailed'");
  XSRETURN(0);
}


XS(_wrap_CurlPerformFailed_getResultCode) {
  {
    Ferris::CurlPerformFailed *arg1 = (Ferris::CurlPerformFailed *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CurlPerformFailed_getResultCode(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__CurlPerformFailed, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurlPerformFailed_getResultCode" "', argument " "1"" of type '" "Ferris::CurlPerformFailed *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::CurlPerformFailed * >(argp1);
    result = (int)(arg1)->getResultCode();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CurlPerformFailed__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    int arg5 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    Ferris::CurlPerformFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: new_CurlPerformFailed(state,log,e,a,_r);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CurlPerformFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlPerformFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CurlPerformFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlPerformFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CurlPerformFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlPerformFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CurlPerformFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_CurlPerformFailed" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    result = (Ferris::CurlPerformFailed *)new Ferris::CurlPerformFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CurlPerformFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CurlPerformFailed__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::CurlPerformFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CurlPerformFailed(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CurlPerformFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlPerformFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CurlPerformFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlPerformFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CurlPerformFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlPerformFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CurlPerformFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::CurlPerformFailed *)new Ferris::CurlPerformFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CurlPerformFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CurlPerformFailed__SWIG_2) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::CurlPerformFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CurlPerformFailed(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CurlPerformFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlPerformFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CurlPerformFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlPerformFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CurlPerformFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlPerformFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::CurlPerformFailed *)new Ferris::CurlPerformFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CurlPerformFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_CurlPerformFailed) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CurlPerformFailed__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CurlPerformFailed__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CurlPerformFailed__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CurlPerformFailed'");
  XSRETURN(0);
}


XS(_wrap_new_CurlStateError__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::CurlStateError *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CurlStateError(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CurlStateError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlStateError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CurlStateError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlStateError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CurlStateError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlStateError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CurlStateError" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::CurlStateError *)new Ferris::CurlStateError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CurlStateError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CurlStateError__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::CurlStateError *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CurlStateError(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CurlStateError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlStateError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CurlStateError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlStateError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CurlStateError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlStateError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::CurlStateError *)new Ferris::CurlStateError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CurlStateError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_CurlStateError) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CurlStateError__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CurlStateError__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CurlStateError'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisCurlServerNameNotFound__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisCurlServerNameNotFound *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisCurlServerNameNotFound(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisCurlServerNameNotFound" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCurlServerNameNotFound" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisCurlServerNameNotFound" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCurlServerNameNotFound" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisCurlServerNameNotFound" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCurlServerNameNotFound" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisCurlServerNameNotFound" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisCurlServerNameNotFound *)new Ferris::FerrisCurlServerNameNotFound((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisCurlServerNameNotFound, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisCurlServerNameNotFound__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisCurlServerNameNotFound *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisCurlServerNameNotFound(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisCurlServerNameNotFound" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCurlServerNameNotFound" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisCurlServerNameNotFound" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCurlServerNameNotFound" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisCurlServerNameNotFound" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCurlServerNameNotFound" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisCurlServerNameNotFound *)new Ferris::FerrisCurlServerNameNotFound((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisCurlServerNameNotFound, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisCurlServerNameNotFound) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisCurlServerNameNotFound__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisCurlServerNameNotFound__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisCurlServerNameNotFound'");
  XSRETURN(0);
}


XS(_wrap_new_getIOStreamCloseUpdateFailed__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::getIOStreamCloseUpdateFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_getIOStreamCloseUpdateFailed(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_getIOStreamCloseUpdateFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_getIOStreamCloseUpdateFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_getIOStreamCloseUpdateFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_getIOStreamCloseUpdateFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_getIOStreamCloseUpdateFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_getIOStreamCloseUpdateFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_getIOStreamCloseUpdateFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::getIOStreamCloseUpdateFailed *)new Ferris::getIOStreamCloseUpdateFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__getIOStreamCloseUpdateFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_getIOStreamCloseUpdateFailed__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::getIOStreamCloseUpdateFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_getIOStreamCloseUpdateFailed(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_getIOStreamCloseUpdateFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_getIOStreamCloseUpdateFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_getIOStreamCloseUpdateFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_getIOStreamCloseUpdateFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_getIOStreamCloseUpdateFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_getIOStreamCloseUpdateFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::getIOStreamCloseUpdateFailed *)new Ferris::getIOStreamCloseUpdateFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__getIOStreamCloseUpdateFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_getIOStreamCloseUpdateFailed) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_getIOStreamCloseUpdateFailed__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_getIOStreamCloseUpdateFailed__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_getIOStreamCloseUpdateFailed'");
  XSRETURN(0);
}


XS(_wrap_new_getIOStreamCloseUpdatePermissionDenied__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::getIOStreamCloseUpdatePermissionDenied *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_getIOStreamCloseUpdatePermissionDenied(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_getIOStreamCloseUpdatePermissionDenied" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_getIOStreamCloseUpdatePermissionDenied" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_getIOStreamCloseUpdatePermissionDenied" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_getIOStreamCloseUpdatePermissionDenied" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_getIOStreamCloseUpdatePermissionDenied" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_getIOStreamCloseUpdatePermissionDenied" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_getIOStreamCloseUpdatePermissionDenied" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::getIOStreamCloseUpdatePermissionDenied *)new Ferris::getIOStreamCloseUpdatePermissionDenied((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__getIOStreamCloseUpdatePermissionDenied, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_getIOStreamCloseUpdatePermissionDenied__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::getIOStreamCloseUpdatePermissionDenied *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_getIOStreamCloseUpdatePermissionDenied(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_getIOStreamCloseUpdatePermissionDenied" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_getIOStreamCloseUpdatePermissionDenied" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_getIOStreamCloseUpdatePermissionDenied" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_getIOStreamCloseUpdatePermissionDenied" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_getIOStreamCloseUpdatePermissionDenied" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_getIOStreamCloseUpdatePermissionDenied" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::getIOStreamCloseUpdatePermissionDenied *)new Ferris::getIOStreamCloseUpdatePermissionDenied((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__getIOStreamCloseUpdatePermissionDenied, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_getIOStreamCloseUpdatePermissionDenied) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_getIOStreamCloseUpdatePermissionDenied__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_getIOStreamCloseUpdatePermissionDenied__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_getIOStreamCloseUpdatePermissionDenied'");
  XSRETURN(0);
}


XS(_wrap_new_DTDCreationFailed__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::DTDCreationFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_DTDCreationFailed(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DTDCreationFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DTDCreationFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DTDCreationFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DTDCreationFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_DTDCreationFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DTDCreationFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_DTDCreationFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::DTDCreationFailed *)new Ferris::DTDCreationFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__DTDCreationFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_DTDCreationFailed__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::DTDCreationFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_DTDCreationFailed(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DTDCreationFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DTDCreationFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DTDCreationFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DTDCreationFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_DTDCreationFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DTDCreationFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::DTDCreationFailed *)new Ferris::DTDCreationFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__DTDCreationFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_DTDCreationFailed) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_DTDCreationFailed__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_DTDCreationFailed__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_DTDCreationFailed'");
  XSRETURN(0);
}


XS(_wrap_new_UnknownConfigLocation__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::UnknownConfigLocation *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_UnknownConfigLocation(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_UnknownConfigLocation" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UnknownConfigLocation" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_UnknownConfigLocation" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UnknownConfigLocation" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_UnknownConfigLocation" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UnknownConfigLocation" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_UnknownConfigLocation" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::UnknownConfigLocation *)new Ferris::UnknownConfigLocation((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__UnknownConfigLocation, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_UnknownConfigLocation__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::UnknownConfigLocation *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_UnknownConfigLocation(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_UnknownConfigLocation" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UnknownConfigLocation" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_UnknownConfigLocation" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UnknownConfigLocation" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_UnknownConfigLocation" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UnknownConfigLocation" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::UnknownConfigLocation *)new Ferris::UnknownConfigLocation((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__UnknownConfigLocation, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_UnknownConfigLocation) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_UnknownConfigLocation__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_UnknownConfigLocation__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_UnknownConfigLocation'");
  XSRETURN(0);
}


XS(_wrap_new_RenameFailed__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::RenameFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_RenameFailed(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_RenameFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RenameFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_RenameFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RenameFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_RenameFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RenameFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_RenameFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::RenameFailed *)new Ferris::RenameFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__RenameFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_RenameFailed__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::RenameFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_RenameFailed(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_RenameFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RenameFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_RenameFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RenameFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_RenameFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RenameFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::RenameFailed *)new Ferris::RenameFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__RenameFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_RenameFailed) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_RenameFailed__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_RenameFailed__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_RenameFailed'");
  XSRETURN(0);
}


XS(_wrap_new_AccessDenied__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::AccessDenied *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_AccessDenied(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AccessDenied" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AccessDenied" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_AccessDenied" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AccessDenied" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_AccessDenied" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AccessDenied" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_AccessDenied" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::AccessDenied *)new Ferris::AccessDenied((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__AccessDenied, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_AccessDenied__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::AccessDenied *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_AccessDenied(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AccessDenied" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AccessDenied" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_AccessDenied" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AccessDenied" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_AccessDenied" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AccessDenied" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::AccessDenied *)new Ferris::AccessDenied((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__AccessDenied, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_AccessDenied) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_AccessDenied__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_AccessDenied__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_AccessDenied'");
  XSRETURN(0);
}


XS(_wrap_new_GenericError__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::GenericError *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_GenericError(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_GenericError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GenericError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_GenericError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GenericError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_GenericError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GenericError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_GenericError" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::GenericError *)new Ferris::GenericError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__GenericError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_GenericError__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::GenericError *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_GenericError(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_GenericError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GenericError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_GenericError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GenericError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_GenericError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GenericError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::GenericError *)new Ferris::GenericError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__GenericError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_GenericError) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_GenericError__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_GenericError__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_GenericError'");
  XSRETURN(0);
}


XS(_wrap_new_BadlyFormedTime__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::BadlyFormedTime *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_BadlyFormedTime(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_BadlyFormedTime" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadlyFormedTime" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_BadlyFormedTime" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadlyFormedTime" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_BadlyFormedTime" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadlyFormedTime" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_BadlyFormedTime" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::BadlyFormedTime *)new Ferris::BadlyFormedTime((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__BadlyFormedTime, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_BadlyFormedTime__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::BadlyFormedTime *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_BadlyFormedTime(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_BadlyFormedTime" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadlyFormedTime" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_BadlyFormedTime" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadlyFormedTime" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_BadlyFormedTime" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadlyFormedTime" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::BadlyFormedTime *)new Ferris::BadlyFormedTime((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__BadlyFormedTime, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_BadlyFormedTime) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_BadlyFormedTime__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_BadlyFormedTime__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_BadlyFormedTime'");
  XSRETURN(0);
}


XS(_wrap_new_BadlyFormedTimeString__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::BadlyFormedTimeString *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_BadlyFormedTimeString(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_BadlyFormedTimeString" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadlyFormedTimeString" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_BadlyFormedTimeString" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadlyFormedTimeString" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_BadlyFormedTimeString" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadlyFormedTimeString" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_BadlyFormedTimeString" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::BadlyFormedTimeString *)new Ferris::BadlyFormedTimeString((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__BadlyFormedTimeString, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_BadlyFormedTimeString__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::BadlyFormedTimeString *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_BadlyFormedTimeString(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_BadlyFormedTimeString" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadlyFormedTimeString" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_BadlyFormedTimeString" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadlyFormedTimeString" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_BadlyFormedTimeString" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadlyFormedTimeString" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::BadlyFormedTimeString *)new Ferris::BadlyFormedTimeString((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__BadlyFormedTimeString, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_BadlyFormedTimeString) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_BadlyFormedTimeString__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_BadlyFormedTimeString__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_BadlyFormedTimeString'");
  XSRETURN(0);
}


XS(_wrap_new_SocketOptionsException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::SocketOptionsException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_SocketOptionsException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SocketOptionsException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SocketOptionsException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SocketOptionsException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SocketOptionsException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SocketOptionsException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SocketOptionsException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_SocketOptionsException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::SocketOptionsException *)new Ferris::SocketOptionsException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__SocketOptionsException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_SocketOptionsException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::SocketOptionsException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_SocketOptionsException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SocketOptionsException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SocketOptionsException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SocketOptionsException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SocketOptionsException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SocketOptionsException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SocketOptionsException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::SocketOptionsException *)new Ferris::SocketOptionsException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__SocketOptionsException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_SocketOptionsException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_SocketOptionsException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_SocketOptionsException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_SocketOptionsException'");
  XSRETURN(0);
}


XS(_wrap_new_BackupException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::BackupException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_BackupException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_BackupException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BackupException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_BackupException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BackupException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_BackupException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BackupException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_BackupException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::BackupException *)new Ferris::BackupException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__BackupException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_BackupException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::BackupException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_BackupException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_BackupException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BackupException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_BackupException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BackupException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_BackupException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BackupException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::BackupException *)new Ferris::BackupException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__BackupException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_BackupException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_BackupException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_BackupException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_BackupException'");
  XSRETURN(0);
}


XS(_wrap_new_UnknownBackupMode__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::UnknownBackupMode *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_UnknownBackupMode(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_UnknownBackupMode" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UnknownBackupMode" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_UnknownBackupMode" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UnknownBackupMode" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_UnknownBackupMode" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UnknownBackupMode" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_UnknownBackupMode" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::UnknownBackupMode *)new Ferris::UnknownBackupMode((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__UnknownBackupMode, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_UnknownBackupMode__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::UnknownBackupMode *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_UnknownBackupMode(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_UnknownBackupMode" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UnknownBackupMode" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_UnknownBackupMode" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UnknownBackupMode" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_UnknownBackupMode" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UnknownBackupMode" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::UnknownBackupMode *)new Ferris::UnknownBackupMode((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__UnknownBackupMode, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_UnknownBackupMode) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_UnknownBackupMode__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_UnknownBackupMode__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_UnknownBackupMode'");
  XSRETURN(0);
}


XS(_wrap_new_BackupNameWouldBeTooLong__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::BackupNameWouldBeTooLong *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_BackupNameWouldBeTooLong(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_BackupNameWouldBeTooLong" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BackupNameWouldBeTooLong" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_BackupNameWouldBeTooLong" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BackupNameWouldBeTooLong" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_BackupNameWouldBeTooLong" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BackupNameWouldBeTooLong" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_BackupNameWouldBeTooLong" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::BackupNameWouldBeTooLong *)new Ferris::BackupNameWouldBeTooLong((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__BackupNameWouldBeTooLong, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_BackupNameWouldBeTooLong__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::BackupNameWouldBeTooLong *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_BackupNameWouldBeTooLong(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_BackupNameWouldBeTooLong" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BackupNameWouldBeTooLong" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_BackupNameWouldBeTooLong" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BackupNameWouldBeTooLong" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_BackupNameWouldBeTooLong" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BackupNameWouldBeTooLong" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::BackupNameWouldBeTooLong *)new Ferris::BackupNameWouldBeTooLong((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__BackupNameWouldBeTooLong, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_BackupNameWouldBeTooLong) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_BackupNameWouldBeTooLong__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_BackupNameWouldBeTooLong__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_BackupNameWouldBeTooLong'");
  XSRETURN(0);
}


XS(_wrap_new_DVDReadException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::DVDReadException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_DVDReadException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DVDReadException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DVDReadException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DVDReadException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DVDReadException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_DVDReadException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DVDReadException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_DVDReadException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::DVDReadException *)new Ferris::DVDReadException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__DVDReadException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_DVDReadException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::DVDReadException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_DVDReadException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DVDReadException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DVDReadException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DVDReadException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DVDReadException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_DVDReadException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DVDReadException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::DVDReadException *)new Ferris::DVDReadException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__DVDReadException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_DVDReadException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_DVDReadException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_DVDReadException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_DVDReadException'");
  XSRETURN(0);
}


XS(_wrap_new_StorageFull__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::StorageFull *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_StorageFull(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_StorageFull" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_StorageFull" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_StorageFull" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_StorageFull" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_StorageFull" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_StorageFull" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_StorageFull" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::StorageFull *)new Ferris::StorageFull((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__StorageFull, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_StorageFull__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::StorageFull *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_StorageFull(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_StorageFull" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_StorageFull" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_StorageFull" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_StorageFull" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_StorageFull" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_StorageFull" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::StorageFull *)new Ferris::StorageFull((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__StorageFull, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_StorageFull) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_StorageFull__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_StorageFull__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_StorageFull'");
  XSRETURN(0);
}


XS(_wrap_new_QuotaStorageFull__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::QuotaStorageFull *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_QuotaStorageFull(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_QuotaStorageFull" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_QuotaStorageFull" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_QuotaStorageFull" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_QuotaStorageFull" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_QuotaStorageFull" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_QuotaStorageFull" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_QuotaStorageFull" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::QuotaStorageFull *)new Ferris::QuotaStorageFull((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__QuotaStorageFull, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_QuotaStorageFull__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::QuotaStorageFull *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_QuotaStorageFull(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_QuotaStorageFull" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_QuotaStorageFull" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_QuotaStorageFull" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_QuotaStorageFull" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_QuotaStorageFull" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_QuotaStorageFull" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::QuotaStorageFull *)new Ferris::QuotaStorageFull((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__QuotaStorageFull, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_QuotaStorageFull) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_QuotaStorageFull__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_QuotaStorageFull__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_QuotaStorageFull'");
  XSRETURN(0);
}


XS(_wrap_new_FileClipboard__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FileClipboard *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FileClipboard(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileClipboard" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileClipboard" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FileClipboard" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileClipboard" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FileClipboard" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileClipboard" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FileClipboard" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FileClipboard *)new Ferris::FileClipboard((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FileClipboard, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FileClipboard__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FileClipboard *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FileClipboard(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileClipboard" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileClipboard" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FileClipboard" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileClipboard" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FileClipboard" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FileClipboard" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FileClipboard *)new Ferris::FileClipboard((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FileClipboard, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FileClipboard) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FileClipboard__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FileClipboard__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FileClipboard'");
  XSRETURN(0);
}


XS(_wrap_new_CursorException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::CursorException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CursorException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CursorException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CursorException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CursorException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CursorException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CursorException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CursorException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CursorException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::CursorException *)new Ferris::CursorException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CursorException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CursorException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::CursorException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CursorException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CursorException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CursorException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CursorException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CursorException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CursorException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CursorException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::CursorException *)new Ferris::CursorException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CursorException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_CursorException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CursorException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CursorException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CursorException'");
  XSRETURN(0);
}


XS(_wrap_new_ParseError__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::ParseError *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_ParseError(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ParseError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ParseError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ParseError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ParseError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ParseError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ParseError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ParseError" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::ParseError *)new Ferris::ParseError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ParseError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_ParseError__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::ParseError *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_ParseError(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ParseError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ParseError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ParseError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ParseError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ParseError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ParseError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::ParseError *)new Ferris::ParseError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ParseError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_ParseError) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_ParseError__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_ParseError__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_ParseError'");
  XSRETURN(0);
}


XS(_wrap_new_ProgramSpawn__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::ProgramSpawn *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_ProgramSpawn(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ProgramSpawn" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ProgramSpawn" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ProgramSpawn" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ProgramSpawn" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ProgramSpawn" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ProgramSpawn" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ProgramSpawn" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::ProgramSpawn *)new Ferris::ProgramSpawn((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ProgramSpawn, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_ProgramSpawn__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::ProgramSpawn *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_ProgramSpawn(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ProgramSpawn" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ProgramSpawn" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ProgramSpawn" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ProgramSpawn" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ProgramSpawn" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ProgramSpawn" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::ProgramSpawn *)new Ferris::ProgramSpawn((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ProgramSpawn, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_ProgramSpawn) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_ProgramSpawn__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_ProgramSpawn__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_ProgramSpawn'");
  XSRETURN(0);
}


XS(_wrap_new_Db4Exception__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    int arg5 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    Ferris::Db4Exception *result = 0 ;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: new_Db4Exception(state,log,e,a,db_errno);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Db4Exception" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Db4Exception" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Db4Exception" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Db4Exception" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Db4Exception" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Db4Exception" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_Db4Exception" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Db4Exception" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    result = (Ferris::Db4Exception *)new Ferris::Db4Exception((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Db4Exception, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_Db4Exception__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::Db4Exception *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_Db4Exception(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Db4Exception" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Db4Exception" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Db4Exception" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Db4Exception" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Db4Exception" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Db4Exception" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_Db4Exception" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::Db4Exception *)new Ferris::Db4Exception((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Db4Exception, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_Db4Exception__SWIG_2) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::Db4Exception *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_Db4Exception(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Db4Exception" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Db4Exception" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Db4Exception" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Db4Exception" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Db4Exception" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Db4Exception" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::Db4Exception *)new Ferris::Db4Exception((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Db4Exception, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_Db4Exception) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_Db4Exception__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_Db4Exception__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_Db4Exception__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_Db4Exception'");
  XSRETURN(0);
}


XS(_wrap_Db4Exception_get_errno) {
  {
    Ferris::Db4Exception *arg1 = (Ferris::Db4Exception *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Db4Exception_get_errno(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Db4Exception, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Db4Exception_get_errno" "', argument " "1"" of type '" "Ferris::Db4Exception *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Db4Exception * >(argp1);
    result = (int)(arg1)->get_errno();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_eetException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::eetException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_eetException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_eetException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_eetException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_eetException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_eetException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_eetException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_eetException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_eetException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::eetException *)new Ferris::eetException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__eetException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_eetException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::eetException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_eetException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_eetException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_eetException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_eetException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_eetException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_eetException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_eetException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::eetException *)new Ferris::eetException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__eetException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_eetException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_eetException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_eetException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_eetException'");
  XSRETURN(0);
}


XS(_wrap_new_GdbmException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::GdbmException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_GdbmException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_GdbmException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GdbmException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_GdbmException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GdbmException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_GdbmException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GdbmException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_GdbmException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::GdbmException *)new Ferris::GdbmException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__GdbmException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_GdbmException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::GdbmException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_GdbmException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_GdbmException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GdbmException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_GdbmException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GdbmException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_GdbmException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GdbmException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::GdbmException *)new Ferris::GdbmException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__GdbmException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_GdbmException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_GdbmException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_GdbmException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_GdbmException'");
  XSRETURN(0);
}


XS(_wrap_new_tdbException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::tdbException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_tdbException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_tdbException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_tdbException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_tdbException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_tdbException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_tdbException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_tdbException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_tdbException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::tdbException *)new Ferris::tdbException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__tdbException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_tdbException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::tdbException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_tdbException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_tdbException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_tdbException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_tdbException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_tdbException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_tdbException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_tdbException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::tdbException *)new Ferris::tdbException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__tdbException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_tdbException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_tdbException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_tdbException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_tdbException'");
  XSRETURN(0);
}


XS(_wrap_new_Db4KeyNotFound__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::Db4KeyNotFound *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_Db4KeyNotFound(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Db4KeyNotFound" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Db4KeyNotFound" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Db4KeyNotFound" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Db4KeyNotFound" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Db4KeyNotFound" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Db4KeyNotFound" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_Db4KeyNotFound" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::Db4KeyNotFound *)new Ferris::Db4KeyNotFound((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Db4KeyNotFound, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_Db4KeyNotFound__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::Db4KeyNotFound *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_Db4KeyNotFound(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Db4KeyNotFound" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Db4KeyNotFound" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Db4KeyNotFound" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Db4KeyNotFound" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Db4KeyNotFound" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Db4KeyNotFound" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::Db4KeyNotFound *)new Ferris::Db4KeyNotFound((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Db4KeyNotFound, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_Db4KeyNotFound) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_Db4KeyNotFound__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_Db4KeyNotFound__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_Db4KeyNotFound'");
  XSRETURN(0);
}


XS(_wrap_new_eetKeyNotFound__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::eetKeyNotFound *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_eetKeyNotFound(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_eetKeyNotFound" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_eetKeyNotFound" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_eetKeyNotFound" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_eetKeyNotFound" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_eetKeyNotFound" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_eetKeyNotFound" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_eetKeyNotFound" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::eetKeyNotFound *)new Ferris::eetKeyNotFound((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__eetKeyNotFound, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_eetKeyNotFound__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::eetKeyNotFound *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_eetKeyNotFound(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_eetKeyNotFound" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_eetKeyNotFound" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_eetKeyNotFound" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_eetKeyNotFound" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_eetKeyNotFound" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_eetKeyNotFound" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::eetKeyNotFound *)new Ferris::eetKeyNotFound((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__eetKeyNotFound, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_eetKeyNotFound) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_eetKeyNotFound__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_eetKeyNotFound__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_eetKeyNotFound'");
  XSRETURN(0);
}


XS(_wrap_new_InvalidSortSpecification__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::InvalidSortSpecification *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_InvalidSortSpecification(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_InvalidSortSpecification" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_InvalidSortSpecification" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_InvalidSortSpecification" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_InvalidSortSpecification" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_InvalidSortSpecification" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_InvalidSortSpecification" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_InvalidSortSpecification" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::InvalidSortSpecification *)new Ferris::InvalidSortSpecification((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__InvalidSortSpecification, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_InvalidSortSpecification__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::InvalidSortSpecification *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_InvalidSortSpecification(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_InvalidSortSpecification" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_InvalidSortSpecification" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_InvalidSortSpecification" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_InvalidSortSpecification" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_InvalidSortSpecification" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_InvalidSortSpecification" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::InvalidSortSpecification *)new Ferris::InvalidSortSpecification((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__InvalidSortSpecification, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_InvalidSortSpecification) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_InvalidSortSpecification__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_InvalidSortSpecification__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_InvalidSortSpecification'");
  XSRETURN(0);
}


XS(_wrap_new_ContentNotModified__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::ContentNotModified *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_ContentNotModified(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ContentNotModified" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ContentNotModified" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ContentNotModified" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ContentNotModified" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ContentNotModified" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ContentNotModified" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ContentNotModified" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::ContentNotModified *)new Ferris::ContentNotModified((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ContentNotModified, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_ContentNotModified__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::ContentNotModified *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_ContentNotModified(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ContentNotModified" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ContentNotModified" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ContentNotModified" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ContentNotModified" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ContentNotModified" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ContentNotModified" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::ContentNotModified *)new Ferris::ContentNotModified((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ContentNotModified, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_ContentNotModified) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_ContentNotModified__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_ContentNotModified__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_ContentNotModified'");
  XSRETURN(0);
}


XS(_wrap_new_ChildNotRunning__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::ChildNotRunning *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_ChildNotRunning(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ChildNotRunning" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ChildNotRunning" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ChildNotRunning" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ChildNotRunning" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ChildNotRunning" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ChildNotRunning" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ChildNotRunning" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::ChildNotRunning *)new Ferris::ChildNotRunning((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ChildNotRunning, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_ChildNotRunning__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::ChildNotRunning *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_ChildNotRunning(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ChildNotRunning" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ChildNotRunning" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ChildNotRunning" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ChildNotRunning" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_ChildNotRunning" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ChildNotRunning" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::ChildNotRunning *)new Ferris::ChildNotRunning((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ChildNotRunning, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_ChildNotRunning) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_ChildNotRunning__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_ChildNotRunning__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_ChildNotRunning'");
  XSRETURN(0);
}


XS(_wrap_new_InvalidModeString__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::InvalidModeString *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_InvalidModeString(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_InvalidModeString" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_InvalidModeString" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_InvalidModeString" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_InvalidModeString" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_InvalidModeString" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_InvalidModeString" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_InvalidModeString" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::InvalidModeString *)new Ferris::InvalidModeString((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__InvalidModeString, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_InvalidModeString__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::InvalidModeString *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_InvalidModeString(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_InvalidModeString" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_InvalidModeString" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_InvalidModeString" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_InvalidModeString" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_InvalidModeString" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_InvalidModeString" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::InvalidModeString *)new Ferris::InvalidModeString((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__InvalidModeString, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_InvalidModeString) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_InvalidModeString__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_InvalidModeString__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_InvalidModeString'");
  XSRETURN(0);
}


XS(_wrap_new_LDAPException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::LDAPException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_LDAPException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_LDAPException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_LDAPException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_LDAPException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_LDAPException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_LDAPException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_LDAPException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_LDAPException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::LDAPException *)new Ferris::LDAPException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__LDAPException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_LDAPException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::LDAPException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_LDAPException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_LDAPException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_LDAPException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_LDAPException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_LDAPException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_LDAPException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_LDAPException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::LDAPException *)new Ferris::LDAPException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__LDAPException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_LDAPException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_LDAPException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_LDAPException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_LDAPException'");
  XSRETURN(0);
}


XS(_wrap_new_CompressionException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::CompressionException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CompressionException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CompressionException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CompressionException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CompressionException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CompressionException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CompressionException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CompressionException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CompressionException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::CompressionException *)new Ferris::CompressionException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CompressionException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CompressionException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::CompressionException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CompressionException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CompressionException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CompressionException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CompressionException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CompressionException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CompressionException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CompressionException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::CompressionException *)new Ferris::CompressionException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CompressionException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_CompressionException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CompressionException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CompressionException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CompressionException'");
  XSRETURN(0);
}


XS(_wrap_new_CompressionAlgoNotFoundException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::CompressionAlgoNotFoundException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CompressionAlgoNotFoundException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CompressionAlgoNotFoundException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CompressionAlgoNotFoundException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CompressionAlgoNotFoundException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CompressionAlgoNotFoundException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CompressionAlgoNotFoundException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CompressionAlgoNotFoundException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CompressionAlgoNotFoundException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::CompressionAlgoNotFoundException *)new Ferris::CompressionAlgoNotFoundException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CompressionAlgoNotFoundException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CompressionAlgoNotFoundException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::CompressionAlgoNotFoundException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CompressionAlgoNotFoundException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CompressionAlgoNotFoundException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CompressionAlgoNotFoundException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CompressionAlgoNotFoundException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CompressionAlgoNotFoundException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CompressionAlgoNotFoundException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CompressionAlgoNotFoundException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::CompressionAlgoNotFoundException *)new Ferris::CompressionAlgoNotFoundException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CompressionAlgoNotFoundException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_CompressionAlgoNotFoundException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CompressionAlgoNotFoundException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CompressionAlgoNotFoundException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CompressionAlgoNotFoundException'");
  XSRETURN(0);
}


XS(_wrap_new_IndexException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::IndexException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_IndexException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IndexException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_IndexException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_IndexException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_IndexException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_IndexException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_IndexException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_IndexException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::IndexException *)new Ferris::IndexException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__IndexException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_IndexException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::IndexException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_IndexException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IndexException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_IndexException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_IndexException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_IndexException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_IndexException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_IndexException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::IndexException *)new Ferris::IndexException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__IndexException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_IndexException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_IndexException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_IndexException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_IndexException'");
  XSRETURN(0);
}


XS(_wrap_new_FullTextIndexException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FullTextIndexException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FullTextIndexException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FullTextIndexException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FullTextIndexException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FullTextIndexException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FullTextIndexException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FullTextIndexException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FullTextIndexException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FullTextIndexException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FullTextIndexException *)new Ferris::FullTextIndexException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FullTextIndexException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FullTextIndexException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FullTextIndexException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FullTextIndexException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FullTextIndexException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FullTextIndexException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FullTextIndexException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FullTextIndexException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FullTextIndexException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FullTextIndexException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FullTextIndexException *)new Ferris::FullTextIndexException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FullTextIndexException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FullTextIndexException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FullTextIndexException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FullTextIndexException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FullTextIndexException'");
  XSRETURN(0);
}


XS(_wrap_new_EAIndexException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::EAIndexException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_EAIndexException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_EAIndexException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EAIndexException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_EAIndexException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EAIndexException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_EAIndexException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EAIndexException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_EAIndexException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::EAIndexException *)new Ferris::EAIndexException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__EAIndexException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_EAIndexException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::EAIndexException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_EAIndexException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_EAIndexException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EAIndexException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_EAIndexException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EAIndexException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_EAIndexException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EAIndexException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::EAIndexException *)new Ferris::EAIndexException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__EAIndexException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_EAIndexException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_EAIndexException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_EAIndexException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_EAIndexException'");
  XSRETURN(0);
}


XS(_wrap_new_BadParam__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::BadParam *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_BadParam(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_BadParam" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadParam" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_BadParam" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadParam" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_BadParam" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadParam" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_BadParam" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::BadParam *)new Ferris::BadParam((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__BadParam, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_BadParam__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::BadParam *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_BadParam(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_BadParam" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadParam" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_BadParam" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadParam" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_BadParam" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadParam" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::BadParam *)new Ferris::BadParam((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__BadParam, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_BadParam) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_BadParam__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_BadParam__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_BadParam'");
  XSRETURN(0);
}


XS(_wrap_new_SchemaException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::SchemaException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_SchemaException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SchemaException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SchemaException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SchemaException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SchemaException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SchemaException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SchemaException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_SchemaException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::SchemaException *)new Ferris::SchemaException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__SchemaException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_SchemaException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::SchemaException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_SchemaException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SchemaException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SchemaException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SchemaException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SchemaException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SchemaException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SchemaException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::SchemaException *)new Ferris::SchemaException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__SchemaException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_SchemaException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_SchemaException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_SchemaException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_SchemaException'");
  XSRETURN(0);
}


XS(_wrap_new_SchemaNotFoundException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::SchemaNotFoundException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_SchemaNotFoundException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SchemaNotFoundException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SchemaNotFoundException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SchemaNotFoundException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SchemaNotFoundException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SchemaNotFoundException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SchemaNotFoundException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_SchemaNotFoundException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::SchemaNotFoundException *)new Ferris::SchemaNotFoundException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__SchemaNotFoundException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_SchemaNotFoundException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::SchemaNotFoundException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_SchemaNotFoundException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SchemaNotFoundException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SchemaNotFoundException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SchemaNotFoundException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SchemaNotFoundException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SchemaNotFoundException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SchemaNotFoundException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::SchemaNotFoundException *)new Ferris::SchemaNotFoundException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__SchemaNotFoundException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_SchemaNotFoundException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_SchemaNotFoundException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_SchemaNotFoundException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_SchemaNotFoundException'");
  XSRETURN(0);
}


XS(_wrap_new_MedallionException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::MedallionException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_MedallionException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MedallionException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MedallionException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MedallionException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MedallionException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_MedallionException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MedallionException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_MedallionException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::MedallionException *)new Ferris::MedallionException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__MedallionException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_MedallionException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::MedallionException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_MedallionException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MedallionException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MedallionException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MedallionException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MedallionException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_MedallionException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MedallionException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::MedallionException *)new Ferris::MedallionException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__MedallionException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_MedallionException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_MedallionException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_MedallionException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_MedallionException'");
  XSRETURN(0);
}


XS(_wrap_new_EtagereException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::EtagereException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_EtagereException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_EtagereException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EtagereException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_EtagereException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EtagereException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_EtagereException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EtagereException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_EtagereException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::EtagereException *)new Ferris::EtagereException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__EtagereException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_EtagereException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::EtagereException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_EtagereException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_EtagereException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EtagereException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_EtagereException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EtagereException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_EtagereException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EtagereException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::EtagereException *)new Ferris::EtagereException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__EtagereException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_EtagereException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_EtagereException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_EtagereException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_EtagereException'");
  XSRETURN(0);
}


XS(_wrap_new_EmblemException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::EmblemException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_EmblemException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_EmblemException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EmblemException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_EmblemException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EmblemException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_EmblemException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EmblemException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_EmblemException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::EmblemException *)new Ferris::EmblemException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__EmblemException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_EmblemException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::EmblemException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_EmblemException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_EmblemException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EmblemException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_EmblemException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EmblemException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_EmblemException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EmblemException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::EmblemException *)new Ferris::EmblemException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__EmblemException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_EmblemException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_EmblemException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_EmblemException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_EmblemException'");
  XSRETURN(0);
}


XS(_wrap_new_EmblemNotFoundException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::EmblemNotFoundException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_EmblemNotFoundException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_EmblemNotFoundException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EmblemNotFoundException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_EmblemNotFoundException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EmblemNotFoundException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_EmblemNotFoundException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EmblemNotFoundException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_EmblemNotFoundException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::EmblemNotFoundException *)new Ferris::EmblemNotFoundException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__EmblemNotFoundException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_EmblemNotFoundException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::EmblemNotFoundException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_EmblemNotFoundException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_EmblemNotFoundException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EmblemNotFoundException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_EmblemNotFoundException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EmblemNotFoundException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_EmblemNotFoundException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EmblemNotFoundException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::EmblemNotFoundException *)new Ferris::EmblemNotFoundException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__EmblemNotFoundException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_EmblemNotFoundException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_EmblemNotFoundException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_EmblemNotFoundException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_EmblemNotFoundException'");
  XSRETURN(0);
}


XS(_wrap_new_CanNotAddEmblemException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::CanNotAddEmblemException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CanNotAddEmblemException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CanNotAddEmblemException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotAddEmblemException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CanNotAddEmblemException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotAddEmblemException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CanNotAddEmblemException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotAddEmblemException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CanNotAddEmblemException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::CanNotAddEmblemException *)new Ferris::CanNotAddEmblemException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CanNotAddEmblemException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CanNotAddEmblemException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::CanNotAddEmblemException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CanNotAddEmblemException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CanNotAddEmblemException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotAddEmblemException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CanNotAddEmblemException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotAddEmblemException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CanNotAddEmblemException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CanNotAddEmblemException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::CanNotAddEmblemException *)new Ferris::CanNotAddEmblemException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CanNotAddEmblemException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_CanNotAddEmblemException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CanNotAddEmblemException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CanNotAddEmblemException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CanNotAddEmblemException'");
  XSRETURN(0);
}


XS(_wrap_new_NoSuchPersonalityException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::NoSuchPersonalityException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_NoSuchPersonalityException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NoSuchPersonalityException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchPersonalityException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NoSuchPersonalityException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchPersonalityException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NoSuchPersonalityException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchPersonalityException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_NoSuchPersonalityException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::NoSuchPersonalityException *)new Ferris::NoSuchPersonalityException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NoSuchPersonalityException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_NoSuchPersonalityException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::NoSuchPersonalityException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_NoSuchPersonalityException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NoSuchPersonalityException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchPersonalityException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NoSuchPersonalityException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchPersonalityException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NoSuchPersonalityException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchPersonalityException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::NoSuchPersonalityException *)new Ferris::NoSuchPersonalityException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NoSuchPersonalityException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_NoSuchPersonalityException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NoSuchPersonalityException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NoSuchPersonalityException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_NoSuchPersonalityException'");
  XSRETURN(0);
}


XS(_wrap_new_NoSuchBeliefException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::NoSuchBeliefException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_NoSuchBeliefException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NoSuchBeliefException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchBeliefException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NoSuchBeliefException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchBeliefException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NoSuchBeliefException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchBeliefException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_NoSuchBeliefException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::NoSuchBeliefException *)new Ferris::NoSuchBeliefException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NoSuchBeliefException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_NoSuchBeliefException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::NoSuchBeliefException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_NoSuchBeliefException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NoSuchBeliefException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchBeliefException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NoSuchBeliefException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchBeliefException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NoSuchBeliefException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchBeliefException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::NoSuchBeliefException *)new Ferris::NoSuchBeliefException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NoSuchBeliefException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_NoSuchBeliefException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NoSuchBeliefException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NoSuchBeliefException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_NoSuchBeliefException'");
  XSRETURN(0);
}


XS(_wrap_new_AgentException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::AgentException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_AgentException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AgentException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AgentException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_AgentException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AgentException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_AgentException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AgentException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_AgentException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::AgentException *)new Ferris::AgentException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__AgentException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_AgentException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::AgentException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_AgentException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AgentException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AgentException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_AgentException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AgentException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_AgentException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AgentException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::AgentException *)new Ferris::AgentException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__AgentException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_AgentException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_AgentException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_AgentException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_AgentException'");
  XSRETURN(0);
}


XS(_wrap_new_AgentAlreadyExistsException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::AgentAlreadyExistsException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_AgentAlreadyExistsException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AgentAlreadyExistsException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AgentAlreadyExistsException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_AgentAlreadyExistsException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AgentAlreadyExistsException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_AgentAlreadyExistsException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AgentAlreadyExistsException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_AgentAlreadyExistsException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::AgentAlreadyExistsException *)new Ferris::AgentAlreadyExistsException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__AgentAlreadyExistsException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_AgentAlreadyExistsException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::AgentAlreadyExistsException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_AgentAlreadyExistsException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AgentAlreadyExistsException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AgentAlreadyExistsException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_AgentAlreadyExistsException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AgentAlreadyExistsException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_AgentAlreadyExistsException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AgentAlreadyExistsException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::AgentAlreadyExistsException *)new Ferris::AgentAlreadyExistsException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__AgentAlreadyExistsException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_AgentAlreadyExistsException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_AgentAlreadyExistsException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_AgentAlreadyExistsException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_AgentAlreadyExistsException'");
  XSRETURN(0);
}


XS(_wrap_new_NoSuchAgentException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::NoSuchAgentException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_NoSuchAgentException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NoSuchAgentException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchAgentException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NoSuchAgentException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchAgentException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NoSuchAgentException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchAgentException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_NoSuchAgentException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::NoSuchAgentException *)new Ferris::NoSuchAgentException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NoSuchAgentException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_NoSuchAgentException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::NoSuchAgentException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_NoSuchAgentException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NoSuchAgentException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchAgentException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NoSuchAgentException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchAgentException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NoSuchAgentException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoSuchAgentException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::NoSuchAgentException *)new Ferris::NoSuchAgentException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NoSuchAgentException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_NoSuchAgentException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NoSuchAgentException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NoSuchAgentException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_NoSuchAgentException'");
  XSRETURN(0);
}


XS(_wrap_new_AgentOnlyHandlesOneEmblemException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::AgentOnlyHandlesOneEmblemException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_AgentOnlyHandlesOneEmblemException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AgentOnlyHandlesOneEmblemException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AgentOnlyHandlesOneEmblemException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_AgentOnlyHandlesOneEmblemException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AgentOnlyHandlesOneEmblemException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_AgentOnlyHandlesOneEmblemException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AgentOnlyHandlesOneEmblemException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_AgentOnlyHandlesOneEmblemException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::AgentOnlyHandlesOneEmblemException *)new Ferris::AgentOnlyHandlesOneEmblemException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__AgentOnlyHandlesOneEmblemException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_AgentOnlyHandlesOneEmblemException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::AgentOnlyHandlesOneEmblemException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_AgentOnlyHandlesOneEmblemException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AgentOnlyHandlesOneEmblemException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AgentOnlyHandlesOneEmblemException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_AgentOnlyHandlesOneEmblemException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AgentOnlyHandlesOneEmblemException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_AgentOnlyHandlesOneEmblemException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AgentOnlyHandlesOneEmblemException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::AgentOnlyHandlesOneEmblemException *)new Ferris::AgentOnlyHandlesOneEmblemException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__AgentOnlyHandlesOneEmblemException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_AgentOnlyHandlesOneEmblemException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_AgentOnlyHandlesOneEmblemException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_AgentOnlyHandlesOneEmblemException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_AgentOnlyHandlesOneEmblemException'");
  XSRETURN(0);
}


XS(_wrap_new_XMLBase__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::XMLBase *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_XMLBase(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XMLBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMLBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_XMLBase" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMLBase" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_XMLBase" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMLBase" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_XMLBase" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::XMLBase *)new Ferris::XMLBase((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__XMLBase, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_XMLBase__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::XMLBase *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_XMLBase(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XMLBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMLBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_XMLBase" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMLBase" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_XMLBase" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMLBase" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::XMLBase *)new Ferris::XMLBase((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__XMLBase, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_XMLBase) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_XMLBase__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_XMLBase__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_XMLBase'");
  XSRETURN(0);
}


XS(_wrap_new_XMLParseError__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::XMLParseError *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_XMLParseError(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XMLParseError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMLParseError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_XMLParseError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMLParseError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_XMLParseError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMLParseError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_XMLParseError" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::XMLParseError *)new Ferris::XMLParseError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__XMLParseError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_XMLParseError__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::XMLParseError *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_XMLParseError(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XMLParseError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMLParseError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_XMLParseError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMLParseError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_XMLParseError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMLParseError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::XMLParseError *)new Ferris::XMLParseError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__XMLParseError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_XMLParseError) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_XMLParseError__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_XMLParseError__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_XMLParseError'");
  XSRETURN(0);
}


XS(_wrap_new_XMLFatalError__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::XMLFatalError *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_XMLFatalError(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XMLFatalError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMLFatalError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_XMLFatalError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMLFatalError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_XMLFatalError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMLFatalError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_XMLFatalError" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::XMLFatalError *)new Ferris::XMLFatalError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__XMLFatalError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_XMLFatalError__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::XMLFatalError *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_XMLFatalError(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XMLFatalError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMLFatalError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_XMLFatalError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMLFatalError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_XMLFatalError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMLFatalError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::XMLFatalError *)new Ferris::XMLFatalError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__XMLFatalError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_XMLFatalError) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_XMLFatalError__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_XMLFatalError__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_XMLFatalError'");
  XSRETURN(0);
}


XS(_wrap_new_dbXMLException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::dbXMLException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_dbXMLException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dbXMLException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dbXMLException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_dbXMLException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dbXMLException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_dbXMLException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dbXMLException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_dbXMLException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::dbXMLException *)new Ferris::dbXMLException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__dbXMLException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_dbXMLException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::dbXMLException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_dbXMLException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dbXMLException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dbXMLException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_dbXMLException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dbXMLException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_dbXMLException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dbXMLException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::dbXMLException *)new Ferris::dbXMLException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__dbXMLException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_dbXMLException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_dbXMLException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_dbXMLException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_dbXMLException'");
  XSRETURN(0);
}


XS(_wrap_new_BranchFileSystem__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::BranchFileSystem *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_BranchFileSystem(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_BranchFileSystem" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BranchFileSystem" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_BranchFileSystem" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BranchFileSystem" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_BranchFileSystem" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BranchFileSystem" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_BranchFileSystem" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::BranchFileSystem *)new Ferris::BranchFileSystem((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__BranchFileSystem, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_BranchFileSystem__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::BranchFileSystem *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_BranchFileSystem(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_BranchFileSystem" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BranchFileSystem" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_BranchFileSystem" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BranchFileSystem" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_BranchFileSystem" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BranchFileSystem" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::BranchFileSystem *)new Ferris::BranchFileSystem((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__BranchFileSystem, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_BranchFileSystem) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_BranchFileSystem__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_BranchFileSystem__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_BranchFileSystem'");
  XSRETURN(0);
}


XS(_wrap_new_RelativeTimeParsing__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::RelativeTimeParsing *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_RelativeTimeParsing(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_RelativeTimeParsing" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RelativeTimeParsing" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_RelativeTimeParsing" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RelativeTimeParsing" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_RelativeTimeParsing" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RelativeTimeParsing" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_RelativeTimeParsing" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::RelativeTimeParsing *)new Ferris::RelativeTimeParsing((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__RelativeTimeParsing, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_RelativeTimeParsing__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::RelativeTimeParsing *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_RelativeTimeParsing(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_RelativeTimeParsing" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RelativeTimeParsing" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_RelativeTimeParsing" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RelativeTimeParsing" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_RelativeTimeParsing" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RelativeTimeParsing" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::RelativeTimeParsing *)new Ferris::RelativeTimeParsing((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__RelativeTimeParsing, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_RelativeTimeParsing) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_RelativeTimeParsing__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_RelativeTimeParsing__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_RelativeTimeParsing'");
  XSRETURN(0);
}


XS(_wrap_new_CryptoBase__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::CryptoBase *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_CryptoBase(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CryptoBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CryptoBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CryptoBase" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CryptoBase" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CryptoBase" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CryptoBase" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_CryptoBase" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::CryptoBase *)new Ferris::CryptoBase((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CryptoBase, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CryptoBase__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::CryptoBase *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_CryptoBase(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CryptoBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CryptoBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CryptoBase" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CryptoBase" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_CryptoBase" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CryptoBase" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::CryptoBase *)new Ferris::CryptoBase((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CryptoBase, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_CryptoBase) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CryptoBase__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_CryptoBase__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_CryptoBase'");
  XSRETURN(0);
}


XS(_wrap_new_GPGMEInitFailed__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::GPGMEInitFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_GPGMEInitFailed(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_GPGMEInitFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GPGMEInitFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_GPGMEInitFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GPGMEInitFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_GPGMEInitFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GPGMEInitFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_GPGMEInitFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::GPGMEInitFailed *)new Ferris::GPGMEInitFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__GPGMEInitFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_GPGMEInitFailed__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::GPGMEInitFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_GPGMEInitFailed(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_GPGMEInitFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GPGMEInitFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_GPGMEInitFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GPGMEInitFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_GPGMEInitFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GPGMEInitFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::GPGMEInitFailed *)new Ferris::GPGMEInitFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__GPGMEInitFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_GPGMEInitFailed) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_GPGMEInitFailed__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_GPGMEInitFailed__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_GPGMEInitFailed'");
  XSRETURN(0);
}


XS(_wrap_new_BadSignature__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::BadSignature *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_BadSignature(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_BadSignature" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadSignature" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_BadSignature" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadSignature" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_BadSignature" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadSignature" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_BadSignature" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::BadSignature *)new Ferris::BadSignature((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__BadSignature, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_BadSignature__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::BadSignature *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_BadSignature(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_BadSignature" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadSignature" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_BadSignature" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadSignature" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_BadSignature" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BadSignature" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::BadSignature *)new Ferris::BadSignature((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__BadSignature, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_BadSignature) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_BadSignature__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_BadSignature__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_BadSignature'");
  XSRETURN(0);
}


XS(_wrap_new_KeylistException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::KeylistException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_KeylistException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_KeylistException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_KeylistException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_KeylistException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_KeylistException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_KeylistException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_KeylistException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_KeylistException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::KeylistException *)new Ferris::KeylistException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__KeylistException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_KeylistException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::KeylistException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_KeylistException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_KeylistException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_KeylistException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_KeylistException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_KeylistException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_KeylistException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_KeylistException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::KeylistException *)new Ferris::KeylistException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__KeylistException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_KeylistException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_KeylistException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_KeylistException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_KeylistException'");
  XSRETURN(0);
}


XS(_wrap_new_XMPBase__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::XMPBase *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_XMPBase(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XMPBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMPBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_XMPBase" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMPBase" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_XMPBase" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMPBase" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_XMPBase" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::XMPBase *)new Ferris::XMPBase((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__XMPBase, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_XMPBase__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::XMPBase *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_XMPBase(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XMPBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMPBase" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_XMPBase" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMPBase" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_XMPBase" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMPBase" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::XMPBase *)new Ferris::XMPBase((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__XMPBase, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_XMPBase) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_XMPBase__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_XMPBase__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_XMPBase'");
  XSRETURN(0);
}


XS(_wrap_new_XMPPacketScanFailed__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::XMPPacketScanFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_XMPPacketScanFailed(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XMPPacketScanFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMPPacketScanFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_XMPPacketScanFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMPPacketScanFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_XMPPacketScanFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMPPacketScanFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_XMPPacketScanFailed" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::XMPPacketScanFailed *)new Ferris::XMPPacketScanFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__XMPPacketScanFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_XMPPacketScanFailed__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::XMPPacketScanFailed *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_XMPPacketScanFailed(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_XMPPacketScanFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMPPacketScanFailed" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_XMPPacketScanFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMPPacketScanFailed" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_XMPPacketScanFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_XMPPacketScanFailed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::XMPPacketScanFailed *)new Ferris::XMPPacketScanFailed((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__XMPPacketScanFailed, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_XMPPacketScanFailed) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_XMPPacketScanFailed__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_XMPPacketScanFailed__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_XMPPacketScanFailed'");
  XSRETURN(0);
}


XS(_wrap_new_GPhoto2__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::GPhoto2 *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_GPhoto2(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_GPhoto2" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GPhoto2" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_GPhoto2" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GPhoto2" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_GPhoto2" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GPhoto2" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_GPhoto2" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::GPhoto2 *)new Ferris::GPhoto2((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__GPhoto2, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_GPhoto2__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::GPhoto2 *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_GPhoto2(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_GPhoto2" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GPhoto2" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_GPhoto2" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GPhoto2" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_GPhoto2" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GPhoto2" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::GPhoto2 *)new Ferris::GPhoto2((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__GPhoto2, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_GPhoto2) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_GPhoto2__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_GPhoto2__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_GPhoto2'");
  XSRETURN(0);
}


XS(_wrap_new_NoOpenWithContext__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::NoOpenWithContext *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_NoOpenWithContext(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NoOpenWithContext" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoOpenWithContext" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NoOpenWithContext" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoOpenWithContext" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NoOpenWithContext" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoOpenWithContext" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_NoOpenWithContext" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::NoOpenWithContext *)new Ferris::NoOpenWithContext((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NoOpenWithContext, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_NoOpenWithContext__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::NoOpenWithContext *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_NoOpenWithContext(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NoOpenWithContext" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoOpenWithContext" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NoOpenWithContext" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoOpenWithContext" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NoOpenWithContext" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NoOpenWithContext" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::NoOpenWithContext *)new Ferris::NoOpenWithContext((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__NoOpenWithContext, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_NoOpenWithContext) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NoOpenWithContext__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_NoOpenWithContext__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_NoOpenWithContext'");
  XSRETURN(0);
}


XS(_wrap_new_OpenActionIsNotDefined__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::OpenActionIsNotDefined *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_OpenActionIsNotDefined(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OpenActionIsNotDefined" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OpenActionIsNotDefined" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OpenActionIsNotDefined" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OpenActionIsNotDefined" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OpenActionIsNotDefined" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OpenActionIsNotDefined" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_OpenActionIsNotDefined" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::OpenActionIsNotDefined *)new Ferris::OpenActionIsNotDefined((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__OpenActionIsNotDefined, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OpenActionIsNotDefined__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::OpenActionIsNotDefined *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_OpenActionIsNotDefined(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OpenActionIsNotDefined" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OpenActionIsNotDefined" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OpenActionIsNotDefined" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OpenActionIsNotDefined" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OpenActionIsNotDefined" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OpenActionIsNotDefined" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::OpenActionIsNotDefined *)new Ferris::OpenActionIsNotDefined((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__OpenActionIsNotDefined, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_OpenActionIsNotDefined) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OpenActionIsNotDefined__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OpenActionIsNotDefined__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OpenActionIsNotDefined'");
  XSRETURN(0);
}


XS(_wrap_new_DBusException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::DBusException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_DBusException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DBusException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DBusException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DBusException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DBusException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_DBusException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DBusException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_DBusException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::DBusException *)new Ferris::DBusException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__DBusException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_DBusException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::DBusException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_DBusException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DBusException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DBusException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DBusException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DBusException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_DBusException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DBusException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::DBusException *)new Ferris::DBusException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__DBusException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_DBusException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_DBusException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_DBusException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_DBusException'");
  XSRETURN(0);
}


XS(_wrap_new_DBusConnectionException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::DBusConnectionException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_DBusConnectionException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DBusConnectionException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DBusConnectionException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DBusConnectionException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DBusConnectionException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_DBusConnectionException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DBusConnectionException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_DBusConnectionException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::DBusConnectionException *)new Ferris::DBusConnectionException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__DBusConnectionException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_DBusConnectionException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::DBusConnectionException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_DBusConnectionException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DBusConnectionException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DBusConnectionException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DBusConnectionException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DBusConnectionException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_DBusConnectionException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DBusConnectionException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::DBusConnectionException *)new Ferris::DBusConnectionException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__DBusConnectionException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_DBusConnectionException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_DBusConnectionException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_DBusConnectionException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_DBusConnectionException'");
  XSRETURN(0);
}


XS(_wrap_new_WebPhotoException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::WebPhotoException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_WebPhotoException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_WebPhotoException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_WebPhotoException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_WebPhotoException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_WebPhotoException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_WebPhotoException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_WebPhotoException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_WebPhotoException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::WebPhotoException *)new Ferris::WebPhotoException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__WebPhotoException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_WebPhotoException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::WebPhotoException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_WebPhotoException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_WebPhotoException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_WebPhotoException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_WebPhotoException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_WebPhotoException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_WebPhotoException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_WebPhotoException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::WebPhotoException *)new Ferris::WebPhotoException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__WebPhotoException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_WebPhotoException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_WebPhotoException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_WebPhotoException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_WebPhotoException'");
  XSRETURN(0);
}


XS(_wrap_new_SQLiteException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::SQLiteException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_SQLiteException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SQLiteException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SQLiteException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SQLiteException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SQLiteException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SQLiteException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SQLiteException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_SQLiteException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::SQLiteException *)new Ferris::SQLiteException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__SQLiteException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_SQLiteException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::SQLiteException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_SQLiteException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SQLiteException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SQLiteException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SQLiteException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SQLiteException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SQLiteException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SQLiteException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::SQLiteException *)new Ferris::SQLiteException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__SQLiteException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_SQLiteException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_SQLiteException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_SQLiteException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_SQLiteException'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisHALException__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisHALException *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisHALException(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisHALException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisHALException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisHALException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisHALException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisHALException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisHALException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisHALException" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisHALException *)new Ferris::FerrisHALException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisHALException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisHALException__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisHALException *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisHALException(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisHALException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisHALException" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisHALException" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisHALException" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisHALException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisHALException" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisHALException *)new Ferris::FerrisHALException((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisHALException, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisHALException) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisHALException__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisHALException__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisHALException'");
  XSRETURN(0);
}


XS(_wrap_new_SyntaxError__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::SyntaxError *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_SyntaxError(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SyntaxError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SyntaxError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SyntaxError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SyntaxError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SyntaxError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SyntaxError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_SyntaxError" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::SyntaxError *)new Ferris::SyntaxError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__SyntaxError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_SyntaxError__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::SyntaxError *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_SyntaxError(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SyntaxError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SyntaxError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SyntaxError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SyntaxError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SyntaxError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SyntaxError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::SyntaxError *)new Ferris::SyntaxError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__SyntaxError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_SyntaxError) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_SyntaxError__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_SyntaxError__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_SyntaxError'");
  XSRETURN(0);
}


XS(_wrap_new_FFilterSyntaxError__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FFilterSyntaxError *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FFilterSyntaxError(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FFilterSyntaxError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FFilterSyntaxError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FFilterSyntaxError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FFilterSyntaxError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FFilterSyntaxError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FFilterSyntaxError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FFilterSyntaxError" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FFilterSyntaxError *)new Ferris::FFilterSyntaxError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FFilterSyntaxError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FFilterSyntaxError__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FFilterSyntaxError *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FFilterSyntaxError(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FFilterSyntaxError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FFilterSyntaxError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FFilterSyntaxError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FFilterSyntaxError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FFilterSyntaxError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FFilterSyntaxError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FFilterSyntaxError *)new Ferris::FFilterSyntaxError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FFilterSyntaxError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FFilterSyntaxError) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FFilterSyntaxError__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FFilterSyntaxError__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FFilterSyntaxError'");
  XSRETURN(0);
}


XS(_wrap_delete_FFilterSyntaxError) {
  {
    Ferris::FFilterSyntaxError *arg1 = (Ferris::FFilterSyntaxError *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_FFilterSyntaxError(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__FFilterSyntaxError, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FFilterSyntaxError" "', argument " "1"" of type '" "Ferris::FFilterSyntaxError *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FFilterSyntaxError * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_FFilterSyntaxError_whats) {
  {
    Ferris::FFilterSyntaxError *arg1 = (Ferris::FFilterSyntaxError *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: FFilterSyntaxError_whats(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__FFilterSyntaxError, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FFilterSyntaxError_whats" "', argument " "1"" of type '" "Ferris::FFilterSyntaxError const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FFilterSyntaxError * >(argp1);
    result = (std::string *) &((Ferris::FFilterSyntaxError const *)arg1)->whats();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FulltextQuerySyntaxError__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FulltextQuerySyntaxError *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FulltextQuerySyntaxError(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FulltextQuerySyntaxError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FulltextQuerySyntaxError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FulltextQuerySyntaxError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FulltextQuerySyntaxError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FulltextQuerySyntaxError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FulltextQuerySyntaxError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FulltextQuerySyntaxError" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FulltextQuerySyntaxError *)new Ferris::FulltextQuerySyntaxError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FulltextQuerySyntaxError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FulltextQuerySyntaxError__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FulltextQuerySyntaxError *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FulltextQuerySyntaxError(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FulltextQuerySyntaxError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FulltextQuerySyntaxError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FulltextQuerySyntaxError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FulltextQuerySyntaxError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FulltextQuerySyntaxError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FulltextQuerySyntaxError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FulltextQuerySyntaxError *)new Ferris::FulltextQuerySyntaxError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FulltextQuerySyntaxError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FulltextQuerySyntaxError) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FulltextQuerySyntaxError__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FulltextQuerySyntaxError__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FulltextQuerySyntaxError'");
  XSRETURN(0);
}


XS(_wrap_new_URLDecodeSyntaxError__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::URLDecodeSyntaxError *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_URLDecodeSyntaxError(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_URLDecodeSyntaxError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_URLDecodeSyntaxError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_URLDecodeSyntaxError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_URLDecodeSyntaxError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_URLDecodeSyntaxError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_URLDecodeSyntaxError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_URLDecodeSyntaxError" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::URLDecodeSyntaxError *)new Ferris::URLDecodeSyntaxError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__URLDecodeSyntaxError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_URLDecodeSyntaxError__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::URLDecodeSyntaxError *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_URLDecodeSyntaxError(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_URLDecodeSyntaxError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_URLDecodeSyntaxError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_URLDecodeSyntaxError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_URLDecodeSyntaxError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_URLDecodeSyntaxError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_URLDecodeSyntaxError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::URLDecodeSyntaxError *)new Ferris::URLDecodeSyntaxError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__URLDecodeSyntaxError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_URLDecodeSyntaxError) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_URLDecodeSyntaxError__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_URLDecodeSyntaxError__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_URLDecodeSyntaxError'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisInternalError__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisInternalError *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisInternalError(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisInternalError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisInternalError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisInternalError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisInternalError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisInternalError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisInternalError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisInternalError" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisInternalError *)new Ferris::FerrisInternalError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisInternalError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisInternalError__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisInternalError *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisInternalError(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisInternalError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisInternalError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisInternalError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisInternalError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisInternalError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisInternalError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisInternalError *)new Ferris::FerrisInternalError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisInternalError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisInternalError) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisInternalError__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisInternalError__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisInternalError'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisParentNotSetError__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisParentNotSetError *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisParentNotSetError(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisParentNotSetError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisParentNotSetError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisParentNotSetError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisParentNotSetError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisParentNotSetError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisParentNotSetError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisParentNotSetError" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisParentNotSetError *)new Ferris::FerrisParentNotSetError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisParentNotSetError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisParentNotSetError__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisParentNotSetError *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisParentNotSetError(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisParentNotSetError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisParentNotSetError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisParentNotSetError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisParentNotSetError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisParentNotSetError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisParentNotSetError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisParentNotSetError *)new Ferris::FerrisParentNotSetError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisParentNotSetError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisParentNotSetError) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisParentNotSetError__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisParentNotSetError__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisParentNotSetError'");
  XSRETURN(0);
}


XS(_wrap_new_FerrisCanNotGetScriptNameError__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::FerrisCanNotGetScriptNameError *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FerrisCanNotGetScriptNameError(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisCanNotGetScriptNameError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCanNotGetScriptNameError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisCanNotGetScriptNameError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCanNotGetScriptNameError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisCanNotGetScriptNameError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCanNotGetScriptNameError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FerrisCanNotGetScriptNameError" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::FerrisCanNotGetScriptNameError *)new Ferris::FerrisCanNotGetScriptNameError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisCanNotGetScriptNameError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisCanNotGetScriptNameError__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::FerrisCanNotGetScriptNameError *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FerrisCanNotGetScriptNameError(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FerrisCanNotGetScriptNameError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCanNotGetScriptNameError" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FerrisCanNotGetScriptNameError" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCanNotGetScriptNameError" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FerrisCanNotGetScriptNameError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FerrisCanNotGetScriptNameError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::FerrisCanNotGetScriptNameError *)new Ferris::FerrisCanNotGetScriptNameError((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__FerrisCanNotGetScriptNameError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_FerrisCanNotGetScriptNameError) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisCanNotGetScriptNameError__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FerrisCanNotGetScriptNameError__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FerrisCanNotGetScriptNameError'");
  XSRETURN(0);
}


XS(_wrap_ThrowFromErrno__SWIG_0) {
  {
    int arg1 ;
    std::string *arg2 = 0 ;
    Ferris::Attribute *arg3 = (Ferris::Attribute *) 0 ;
    int val1 ;
    int ecode1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: ThrowFromErrno(eno,e,a);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "ThrowFromErrno" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ThrowFromErrno" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ThrowFromErrno" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ThrowFromErrno" "', argument " "3"" of type '" "Ferris::Attribute *""'"); 
    }
    arg3 = reinterpret_cast< Ferris::Attribute * >(argp3);
    Ferris::ThrowFromErrno(arg1,(std::string const &)*arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_ThrowFromErrno__SWIG_1) {
  {
    int arg1 ;
    std::string *arg2 = 0 ;
    int val1 ;
    int ecode1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ThrowFromErrno(eno,e);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "ThrowFromErrno" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ThrowFromErrno" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ThrowFromErrno" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    Ferris::ThrowFromErrno(arg1,(std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ThrowFromErrno) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ThrowFromErrno__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ThrowFromErrno__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'ThrowFromErrno'");
  XSRETURN(0);
}


XS(_wrap_CacheHandlable_getOnlyInCacheSignal) {
  {
    Ferris::CacheHandlable *arg1 = (Ferris::CacheHandlable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::CacheHandlable::OnlyInCacheSignal_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CacheHandlable_getOnlyInCacheSignal(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__CacheHandlable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CacheHandlable_getOnlyInCacheSignal" "', argument " "1"" of type '" "Ferris::CacheHandlable *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::CacheHandlable * >(argp1);
    result = (Ferris::CacheHandlable::OnlyInCacheSignal_t *) &(arg1)->getOnlyInCacheSignal();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal1T_void_Ferris__CacheHandlable_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_CacheHandlable) {
  {
    int argvi = 0;
    Ferris::CacheHandlable *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CacheHandlable();");
    }
    result = (Ferris::CacheHandlable *)new Ferris::CacheHandlable();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CacheHandlable, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_CacheHandlable_AddRef) {
  {
    Ferris::CacheHandlable *arg1 = (Ferris::CacheHandlable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CacheHandlable_AddRef(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__CacheHandlable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CacheHandlable_AddRef" "', argument " "1"" of type '" "Ferris::CacheHandlable *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::CacheHandlable * >(argp1);
    result = (arg1)->AddRef();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CacheHandlable_Release) {
  {
    Ferris::CacheHandlable *arg1 = (Ferris::CacheHandlable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    FerrisLoki::Handlable::ref_count_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CacheHandlable_Release(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__CacheHandlable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CacheHandlable_Release" "', argument " "1"" of type '" "Ferris::CacheHandlable *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::CacheHandlable * >(argp1);
    result = (arg1)->Release();
    ST(argvi) = SWIG_NewPointerObj((new FerrisLoki::Handlable::ref_count_t(static_cast< const FerrisLoki::Handlable::ref_count_t& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CacheHandlable_sync) {
  {
    Ferris::CacheHandlable *arg1 = (Ferris::CacheHandlable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CacheHandlable_sync(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__CacheHandlable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CacheHandlable_sync" "', argument " "1"" of type '" "Ferris::CacheHandlable *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::CacheHandlable * >(argp1);
    (arg1)->sync();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_Versioned) {
  {
    int argvi = 0;
    Ferris::Versioned *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_Versioned();");
    }
    result = (Ferris::Versioned *)new Ferris::Versioned();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Versioned, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_Versioned_getVersion) {
  {
    Ferris::Versioned *arg1 = (Ferris::Versioned *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Versioned::Version_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Versioned_getVersion(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Versioned, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Versioned_getVersion" "', argument " "1"" of type '" "Ferris::Versioned const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Versioned * >(argp1);
    result = ((Ferris::Versioned const *)arg1)->getVersion();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::Versioned::Version_t(static_cast< const Ferris::Versioned::Version_t& >(result))), SWIGTYPE_p_guint32, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AdjustForOpenMode_Opening__SWIG_0) {
  {
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > arg1 ;
    Ferris::ferris_ios::openmode arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: AdjustForOpenMode_Opening(ss,m);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AdjustForOpenMode_Opening" "', argument " "1"" of type '" "Ferris::fh_istream""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AdjustForOpenMode_Opening" "', argument " "1"" of type '" "Ferris::fh_istream""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_istream * >(argp1));
      }
    }
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AdjustForOpenMode_Opening" "', argument " "2"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg2 = static_cast< Ferris::ferris_ios::openmode >(val2);
    Ferris::AdjustForOpenMode_Opening(arg1,arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AdjustForOpenMode_Opening__SWIG_1) {
  {
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > arg1 ;
    Ferris::ferris_ios::openmode arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: AdjustForOpenMode_Opening(ss,m);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AdjustForOpenMode_Opening" "', argument " "1"" of type '" "Ferris::fh_iostream""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AdjustForOpenMode_Opening" "', argument " "1"" of type '" "Ferris::fh_iostream""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_iostream * >(argp1));
      }
    }
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AdjustForOpenMode_Opening" "', argument " "2"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg2 = static_cast< Ferris::ferris_ios::openmode >(val2);
    Ferris::AdjustForOpenMode_Opening(arg1,arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_AdjustForOpenMode_Opening) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AdjustForOpenMode_Opening__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_AdjustForOpenMode_Opening__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'AdjustForOpenMode_Opening'");
  XSRETURN(0);
}


XS(_wrap_AdjustForOpenMode_Closing) {
  {
    Ferris::fh_istream *arg1 = 0 ;
    Ferris::ferris_ios::openmode arg2 ;
    std::streamsize arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: AdjustForOpenMode_Closing(ss,m,tellp);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AdjustForOpenMode_Closing" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AdjustForOpenMode_Closing" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_istream * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AdjustForOpenMode_Closing" "', argument " "2"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg2 = static_cast< Ferris::ferris_ios::openmode >(val2);
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__streamsize,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AdjustForOpenMode_Closing" "', argument " "3"" of type '" "std::streamsize""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AdjustForOpenMode_Closing" "', argument " "3"" of type '" "std::streamsize""'");
      } else {
        arg3 = *(reinterpret_cast< std::streamsize * >(argp3));
      }
    }
    Ferris::AdjustForOpenMode_Closing(*arg1,arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Attribute_getLastPartOfName) {
  {
    Ferris::Attribute *arg1 = (Ferris::Attribute *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Attribute_getLastPartOfName(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Attribute_getLastPartOfName" "', argument " "1"" of type '" "Ferris::Attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Attribute * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Attribute_getLastPartOfName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Attribute_getLastPartOfName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (arg1)->getLastPartOfName((std::string const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Attribute_appendToPath__SWIG_0) {
  {
    Ferris::Attribute *arg1 = (Ferris::Attribute *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: Attribute_appendToPath(self,p,d,allowDirToBeAbsolute);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Attribute_appendToPath" "', argument " "1"" of type '" "Ferris::Attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Attribute * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Attribute_appendToPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Attribute_appendToPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Attribute_appendToPath" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Attribute_appendToPath" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Attribute_appendToPath" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = (arg1)->appendToPath((std::string const &)*arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_Attribute_appendToPath__SWIG_1) {
  {
    Ferris::Attribute *arg1 = (Ferris::Attribute *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Attribute_appendToPath(self,p,d);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Attribute_appendToPath" "', argument " "1"" of type '" "Ferris::Attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Attribute * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Attribute_appendToPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Attribute_appendToPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Attribute_appendToPath" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Attribute_appendToPath" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (arg1)->appendToPath((std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_Attribute_appendToPath) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Attribute_appendToPath__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Attribute_appendToPath__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Attribute_appendToPath'");
  XSRETURN(0);
}


XS(_wrap_new_Attribute__SWIG_0) {
  {
    Ferris::Attribute::Parent_t arg1 = (Ferris::Attribute::Parent_t) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Attribute *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_Attribute(parent);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Attribute" "', argument " "1"" of type '" "Ferris::Attribute::Parent_t""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Attribute::Parent_t >(argp1);
    result = (Ferris::Attribute *)new Ferris::Attribute(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Attribute, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_Attribute__SWIG_1) {
  {
    int argvi = 0;
    Ferris::Attribute *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_Attribute();");
    }
    result = (Ferris::Attribute *)new Ferris::Attribute();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Attribute, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_Attribute) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_Attribute__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_Attribute__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_Attribute'");
  XSRETURN(0);
}


XS(_wrap_delete_Attribute) {
  {
    Ferris::Attribute *arg1 = (Ferris::Attribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_Attribute(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Attribute, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Attribute" "', argument " "1"" of type '" "Ferris::Attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Attribute * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Attribute_getIStream__SWIG_0) {
  {
    Ferris::Attribute *arg1 = (Ferris::Attribute *) 0 ;
    Ferris::ferris_ios::openmode arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Attribute_getIStream(self,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Attribute_getIStream" "', argument " "1"" of type '" "Ferris::Attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Attribute * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Attribute_getIStream" "', argument " "2"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg2 = static_cast< Ferris::ferris_ios::openmode >(val2);
    try {
      result = (arg1)->getIStream(arg2);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Attribute_getIStream__SWIG_1) {
  {
    Ferris::Attribute *arg1 = (Ferris::Attribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Attribute_getIStream(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Attribute_getIStream" "', argument " "1"" of type '" "Ferris::Attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Attribute * >(argp1);
    try {
      result = (arg1)->getIStream();
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Attribute_getIStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Attribute_getIStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Attribute_getIStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Attribute_getIStream'");
  XSRETURN(0);
}


XS(_wrap_Attribute_getLocalIStream__SWIG_0) {
  {
    Ferris::Attribute *arg1 = (Ferris::Attribute *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::ferris_ios::openmode arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    unsigned long long val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Attribute_getLocalIStream(self,new_dn,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Attribute_getLocalIStream" "', argument " "1"" of type '" "Ferris::Attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Attribute * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Attribute_getLocalIStream" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Attribute_getLocalIStream" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    ecode3 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Attribute_getLocalIStream" "', argument " "3"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg3 = static_cast< Ferris::ferris_ios::openmode >(val3);
    try {
      result = (arg1)->getLocalIStream(*arg2,arg3);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Attribute_getLocalIStream__SWIG_1) {
  {
    Ferris::Attribute *arg1 = (Ferris::Attribute *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Attribute_getLocalIStream(self,new_dn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Attribute_getLocalIStream" "', argument " "1"" of type '" "Ferris::Attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Attribute * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Attribute_getLocalIStream" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Attribute_getLocalIStream" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    try {
      result = (arg1)->getLocalIStream(*arg2);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Attribute_getLocalIStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Attribute_getLocalIStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Attribute_getLocalIStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Attribute_getLocalIStream'");
  XSRETURN(0);
}


XS(_wrap_Attribute_getIOStream__SWIG_0) {
  {
    Ferris::Attribute *arg1 = (Ferris::Attribute *) 0 ;
    Ferris::ferris_ios::openmode arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Attribute_getIOStream(self,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Attribute_getIOStream" "', argument " "1"" of type '" "Ferris::Attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Attribute * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Attribute_getIOStream" "', argument " "2"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg2 = static_cast< Ferris::ferris_ios::openmode >(val2);
    try {
      result = (arg1)->getIOStream(arg2);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::AttributeNotWritable &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeNotWritable(static_cast< const Ferris::AttributeNotWritable& >(_e))),SWIGTYPE_p_Ferris__AttributeNotWritable,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Attribute_getIOStream__SWIG_1) {
  {
    Ferris::Attribute *arg1 = (Ferris::Attribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Attribute_getIOStream(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Attribute_getIOStream" "', argument " "1"" of type '" "Ferris::Attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Attribute * >(argp1);
    try {
      result = (arg1)->getIOStream();
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::AttributeNotWritable &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeNotWritable(static_cast< const Ferris::AttributeNotWritable& >(_e))),SWIGTYPE_p_Ferris__AttributeNotWritable,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Attribute_getIOStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Attribute_getIOStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Attribute_getIOStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Attribute_getIOStream'");
  XSRETURN(0);
}


XS(_wrap_Attribute_checkOpenModeSupported) {
  {
    Ferris::Attribute *arg1 = (Ferris::Attribute *) 0 ;
    Ferris::ferris_ios::openmode arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Attribute_checkOpenModeSupported(self,userm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Attribute_checkOpenModeSupported" "', argument " "1"" of type '" "Ferris::Attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Attribute * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Attribute_checkOpenModeSupported" "', argument " "2"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg2 = static_cast< Ferris::ferris_ios::openmode >(val2);
    result = (bool)(arg1)->checkOpenModeSupported(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Attribute_getSupportedOpenModes) {
  {
    Ferris::Attribute *arg1 = (Ferris::Attribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::ferris_ios::openmode result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Attribute_getSupportedOpenModes(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Attribute_getSupportedOpenModes" "', argument " "1"" of type '" "Ferris::Attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Attribute * >(argp1);
    result = (Ferris::ferris_ios::openmode)(arg1)->getSupportedOpenModes();
    ST(argvi) = SWIG_From_unsigned_SS_long_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long long >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Attribute_getParent) {
  {
    Ferris::Attribute *arg1 = (Ferris::Attribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Attribute::Parent_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Attribute_getParent(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Attribute_getParent" "', argument " "1"" of type '" "Ferris::Attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Attribute * >(argp1);
    try {
      result = (Ferris::Attribute::Parent_t)(arg1)->getParent();
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Context, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Attribute_isParentBound) {
  {
    Ferris::Attribute *arg1 = (Ferris::Attribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Attribute_isParentBound(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Attribute_isParentBound" "', argument " "1"" of type '" "Ferris::Attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Attribute * >(argp1);
    result = (bool)(arg1)->isParentBound();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Attribute_getDirName) {
  {
    Ferris::Attribute *arg1 = (Ferris::Attribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Attribute_getDirName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Attribute_getDirName" "', argument " "1"" of type '" "Ferris::Attribute const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Attribute * >(argp1);
    result = (std::string *) &((Ferris::Attribute const *)arg1)->getDirName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Attribute_getDirPath) {
  {
    Ferris::Attribute *arg1 = (Ferris::Attribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Attribute_getDirPath(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Attribute_getDirPath" "', argument " "1"" of type '" "Ferris::Attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Attribute * >(argp1);
    try {
      result = (arg1)->getDirPath();
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Attribute_copyTo__SWIG_0) {
  {
    Ferris::Attribute *arg1 = (Ferris::Attribute *) 0 ;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Attribute_copyTo(self,oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Attribute_copyTo" "', argument " "1"" of type '" "Ferris::Attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Attribute * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Attribute_copyTo" "', argument " "2"" of type '" "Ferris::fh_iostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Attribute_copyTo" "', argument " "2"" of type '" "Ferris::fh_iostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_iostream * >(argp2));
      }
    }
    result = (arg1)->copyTo(arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Attribute_copyTo__SWIG_1) {
  {
    Ferris::Attribute *arg1 = (Ferris::Attribute *) 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Attribute_copyTo(self,oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Attribute_copyTo" "', argument " "1"" of type '" "Ferris::Attribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Attribute * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Attribute_copyTo" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Attribute_copyTo" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    result = (arg1)->copyTo(arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_ostream(static_cast< const Ferris::fh_ostream& >(result))), SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Attribute_copyTo) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Attribute_copyTo__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Attribute_copyTo__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'Attribute_copyTo'");
  XSRETURN(0);
}


XS(_wrap_delete_EA_Atom) {
  {
    Ferris::EA_Atom *arg1 = (Ferris::EA_Atom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_EA_Atom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_EA_Atom" "', argument " "1"" of type '" "Ferris::EA_Atom *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_getIStream__SWIG_0) {
  {
    Ferris::EA_Atom *arg1 = (Ferris::EA_Atom *) 0 ;
    Ferris::Context *arg2 = (Ferris::Context *) 0 ;
    std::string *arg3 = 0 ;
    Ferris::ferris_ios::openmode arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    unsigned long long val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: EA_Atom_getIStream(self,c,rdn,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_getIStream" "', argument " "1"" of type '" "Ferris::EA_Atom *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EA_Atom_getIStream" "', argument " "2"" of type '" "Ferris::Context *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EA_Atom_getIStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_getIStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EA_Atom_getIStream" "', argument " "4"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg4 = static_cast< Ferris::ferris_ios::openmode >(val4);
    try {
      result = (arg1)->getIStream(arg2,(std::string const &)*arg3,arg4);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_getIStream__SWIG_1) {
  {
    Ferris::EA_Atom *arg1 = (Ferris::EA_Atom *) 0 ;
    Ferris::Context *arg2 = (Ferris::Context *) 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: EA_Atom_getIStream(self,c,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_getIStream" "', argument " "1"" of type '" "Ferris::EA_Atom *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EA_Atom_getIStream" "', argument " "2"" of type '" "Ferris::Context *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EA_Atom_getIStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_getIStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    try {
      result = (arg1)->getIStream(arg2,(std::string const &)*arg3);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_getIStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__EA_Atom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__EA_Atom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_EA_Atom_getIStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_EA_Atom_getIStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'EA_Atom_getIStream'");
  XSRETURN(0);
}


XS(_wrap_EA_Atom_getIOStream__SWIG_0) {
  {
    Ferris::EA_Atom *arg1 = (Ferris::EA_Atom *) 0 ;
    Ferris::Context *arg2 = (Ferris::Context *) 0 ;
    std::string *arg3 = 0 ;
    Ferris::ferris_ios::openmode arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    unsigned long long val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: EA_Atom_getIOStream(self,c,rdn,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_getIOStream" "', argument " "1"" of type '" "Ferris::EA_Atom *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EA_Atom_getIOStream" "', argument " "2"" of type '" "Ferris::Context *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EA_Atom_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EA_Atom_getIOStream" "', argument " "4"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg4 = static_cast< Ferris::ferris_ios::openmode >(val4);
    try {
      result = (arg1)->getIOStream(arg2,(std::string const &)*arg3,arg4);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::AttributeNotWritable &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeNotWritable(static_cast< const Ferris::AttributeNotWritable& >(_e))),SWIGTYPE_p_Ferris__AttributeNotWritable,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_getIOStream__SWIG_1) {
  {
    Ferris::EA_Atom *arg1 = (Ferris::EA_Atom *) 0 ;
    Ferris::Context *arg2 = (Ferris::Context *) 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: EA_Atom_getIOStream(self,c,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_getIOStream" "', argument " "1"" of type '" "Ferris::EA_Atom *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EA_Atom_getIOStream" "', argument " "2"" of type '" "Ferris::Context *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EA_Atom_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    try {
      result = (arg1)->getIOStream(arg2,(std::string const &)*arg3);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::AttributeNotWritable &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeNotWritable(static_cast< const Ferris::AttributeNotWritable& >(_e))),SWIGTYPE_p_Ferris__AttributeNotWritable,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_getIOStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__EA_Atom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__EA_Atom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_EA_Atom_getIOStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_EA_Atom_getIOStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'EA_Atom_getIOStream'");
  XSRETURN(0);
}


XS(_wrap_EA_Atom_checkOpenModeSupported) {
  {
    Ferris::EA_Atom *arg1 = (Ferris::EA_Atom *) 0 ;
    Ferris::ferris_ios::openmode arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: EA_Atom_checkOpenModeSupported(self,userm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_checkOpenModeSupported" "', argument " "1"" of type '" "Ferris::EA_Atom *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "EA_Atom_checkOpenModeSupported" "', argument " "2"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg2 = static_cast< Ferris::ferris_ios::openmode >(val2);
    result = (bool)(arg1)->checkOpenModeSupported(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_getSupportedOpenModes) {
  {
    Ferris::EA_Atom *arg1 = (Ferris::EA_Atom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::ferris_ios::openmode result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: EA_Atom_getSupportedOpenModes(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_getSupportedOpenModes" "', argument " "1"" of type '" "Ferris::EA_Atom *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom * >(argp1);
    result = (Ferris::ferris_ios::openmode)(arg1)->getSupportedOpenModes();
    ST(argvi) = SWIG_From_unsigned_SS_long_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long long >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_havePassedInSteamRead) {
  {
    Ferris::EA_Atom *arg1 = (Ferris::EA_Atom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: EA_Atom_havePassedInSteamRead(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_havePassedInSteamRead" "', argument " "1"" of type '" "Ferris::EA_Atom *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom * >(argp1);
    result = (bool)(arg1)->havePassedInSteamRead();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_ReadOnly_getIStream) {
  {
    Ferris::EA_Atom_ReadOnly *arg1 = (Ferris::EA_Atom_ReadOnly *) 0 ;
    Ferris::Context *arg2 = (Ferris::Context *) 0 ;
    std::string *arg3 = 0 ;
    Ferris::ferris_ios::openmode arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    unsigned long long val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: EA_Atom_ReadOnly_getIStream(self,c,rdn,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom_ReadOnly, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_ReadOnly_getIStream" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadOnly *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_ReadOnly * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EA_Atom_ReadOnly_getIStream" "', argument " "2"" of type '" "Ferris::Context *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EA_Atom_ReadOnly_getIStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_ReadOnly_getIStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EA_Atom_ReadOnly_getIStream" "', argument " "4"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg4 = static_cast< Ferris::ferris_ios::openmode >(val4);
    try {
      result = (arg1)->getIStream(arg2,(std::string const &)*arg3,arg4);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_ReadOnly_PassedInStream_getIStream__SWIG_0) {
  {
    Ferris::EA_Atom_ReadOnly_PassedInStream *arg1 = (Ferris::EA_Atom_ReadOnly_PassedInStream *) 0 ;
    Ferris::Context *arg2 = (Ferris::Context *) 0 ;
    std::string *arg3 = 0 ;
    Ferris::ferris_ios::openmode arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    unsigned long long val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: EA_Atom_ReadOnly_PassedInStream_getIStream(self,c,rdn,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom_ReadOnly_PassedInStream, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_ReadOnly_PassedInStream_getIStream" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadOnly_PassedInStream *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_ReadOnly_PassedInStream * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EA_Atom_ReadOnly_PassedInStream_getIStream" "', argument " "2"" of type '" "Ferris::Context *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EA_Atom_ReadOnly_PassedInStream_getIStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_ReadOnly_PassedInStream_getIStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EA_Atom_ReadOnly_PassedInStream_getIStream" "', argument " "4"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg4 = static_cast< Ferris::ferris_ios::openmode >(val4);
    try {
      result = (arg1)->getIStream(arg2,(std::string const &)*arg3,arg4);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_ReadOnly_PassedInStream_getIStream__SWIG_1) {
  {
    Ferris::EA_Atom_ReadOnly_PassedInStream *arg1 = (Ferris::EA_Atom_ReadOnly_PassedInStream *) 0 ;
    Ferris::Context *arg2 = (Ferris::Context *) 0 ;
    std::string *arg3 = 0 ;
    Ferris::ferris_ios::openmode arg4 ;
    Ferris::fh_stringstream *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    unsigned long long val4 ;
    int ecode4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    Ferris::fh_stringstream *result = 0 ;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: EA_Atom_ReadOnly_PassedInStream_getIStream(self,c,rdn,m,ss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom_ReadOnly_PassedInStream, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_ReadOnly_PassedInStream_getIStream" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadOnly_PassedInStream *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_ReadOnly_PassedInStream * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EA_Atom_ReadOnly_PassedInStream_getIStream" "', argument " "2"" of type '" "Ferris::Context *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EA_Atom_ReadOnly_PassedInStream_getIStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_ReadOnly_PassedInStream_getIStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EA_Atom_ReadOnly_PassedInStream_getIStream" "', argument " "4"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg4 = static_cast< Ferris::ferris_ios::openmode >(val4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_Ferris__Ferris_stringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "EA_Atom_ReadOnly_PassedInStream_getIStream" "', argument " "5"" of type '" "Ferris::fh_stringstream &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_ReadOnly_PassedInStream_getIStream" "', argument " "5"" of type '" "Ferris::fh_stringstream &""'"); 
    }
    arg5 = reinterpret_cast< Ferris::fh_stringstream * >(argp5);
    try {
      result = (Ferris::fh_stringstream *) &(arg1)->getIStream(arg2,(std::string const &)*arg3,arg4,*arg5);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Ferris_stringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t, 0 | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_ReadOnly_PassedInStream_getIStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__EA_Atom_ReadOnly_PassedInStream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__EA_Atom_ReadOnly_PassedInStream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(4), &vptr, SWIGTYPE_p_Ferris__Ferris_stringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_EA_Atom_ReadOnly_PassedInStream_getIStream__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_EA_Atom_ReadOnly_PassedInStream_getIStream__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'EA_Atom_ReadOnly_PassedInStream_getIStream'");
  XSRETURN(0);
}


XS(_wrap_EA_Atom_ReadOnly_PassedInStream_havePassedInSteamRead) {
  {
    Ferris::EA_Atom_ReadOnly_PassedInStream *arg1 = (Ferris::EA_Atom_ReadOnly_PassedInStream *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: EA_Atom_ReadOnly_PassedInStream_havePassedInSteamRead(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom_ReadOnly_PassedInStream, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_ReadOnly_PassedInStream_havePassedInSteamRead" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadOnly_PassedInStream *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_ReadOnly_PassedInStream * >(argp1);
    result = (bool)(arg1)->havePassedInSteamRead();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_EA_Atom_ReadWrite) {
  {
    Ferris::EA_Atom_ReadWrite::GetIStream_Func_t *arg1 = 0 ;
    Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t *arg2 = 0 ;
    Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    Ferris::EA_Atom_ReadWrite *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_EA_Atom_ReadWrite(f_i,f_io,f_closed);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__EA_Atom_ReadWrite__RWBase_t__GetIStream_Func_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_EA_Atom_ReadWrite" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadWrite::GetIStream_Func_t const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EA_Atom_ReadWrite" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadWrite::GetIStream_Func_t const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_ReadWrite::GetIStream_Func_t * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_EA_Atom_ReadWrite" "', argument " "2"" of type '" "Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EA_Atom_ReadWrite" "', argument " "2"" of type '" "Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t const &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Ferris__EA_Atom_ReadWrite__RWBase_t__IOStreamClosed_Func_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_EA_Atom_ReadWrite" "', argument " "3"" of type '" "Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EA_Atom_ReadWrite" "', argument " "3"" of type '" "Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t const &""'"); 
    }
    arg3 = reinterpret_cast< Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t * >(argp3);
    result = (Ferris::EA_Atom_ReadWrite *)new Ferris::EA_Atom_ReadWrite((Ferris::EA_Atom_ReadWrite::GetIStream_Func_t const &)*arg1,(Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t const &)*arg2,(Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__EA_Atom_ReadWrite, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_ReadWrite_priv_getIOStream) {
  {
    Ferris::EA_Atom_ReadWrite *arg1 = (Ferris::EA_Atom_ReadWrite *) 0 ;
    Ferris::Context *arg2 = (Ferris::Context *) 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: EA_Atom_ReadWrite_priv_getIOStream(self,c,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom_ReadWrite, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_ReadWrite_priv_getIOStream" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadWrite *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_ReadWrite * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EA_Atom_ReadWrite_priv_getIOStream" "', argument " "2"" of type '" "Ferris::Context *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EA_Atom_ReadWrite_priv_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_ReadWrite_priv_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (arg1)->priv_getIOStream(arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_ReadWrite_getIOStream__SWIG_0) {
  {
    Ferris::EA_Atom_ReadWrite *arg1 = (Ferris::EA_Atom_ReadWrite *) 0 ;
    Ferris::Context *arg2 = (Ferris::Context *) 0 ;
    std::string *arg3 = 0 ;
    Ferris::ferris_ios::openmode arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    unsigned long long val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: EA_Atom_ReadWrite_getIOStream(self,c,rdn,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom_ReadWrite, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_ReadWrite_getIOStream" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadWrite *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_ReadWrite * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EA_Atom_ReadWrite_getIOStream" "', argument " "2"" of type '" "Ferris::Context *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EA_Atom_ReadWrite_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_ReadWrite_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EA_Atom_ReadWrite_getIOStream" "', argument " "4"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg4 = static_cast< Ferris::ferris_ios::openmode >(val4);
    try {
      result = (arg1)->getIOStream(arg2,(std::string const &)*arg3,arg4);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::AttributeNotWritable &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeNotWritable(static_cast< const Ferris::AttributeNotWritable& >(_e))),SWIGTYPE_p_Ferris__AttributeNotWritable,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_ReadWrite_getIOStream__SWIG_1) {
  {
    Ferris::EA_Atom_ReadWrite *arg1 = (Ferris::EA_Atom_ReadWrite *) 0 ;
    Ferris::Context *arg2 = (Ferris::Context *) 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: EA_Atom_ReadWrite_getIOStream(self,c,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom_ReadWrite, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_ReadWrite_getIOStream" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadWrite *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_ReadWrite * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EA_Atom_ReadWrite_getIOStream" "', argument " "2"" of type '" "Ferris::Context *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EA_Atom_ReadWrite_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_ReadWrite_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    try {
      result = (arg1)->getIOStream(arg2,(std::string const &)*arg3);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::AttributeNotWritable &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeNotWritable(static_cast< const Ferris::AttributeNotWritable& >(_e))),SWIGTYPE_p_Ferris__AttributeNotWritable,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_ReadWrite_getIOStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__EA_Atom_ReadWrite, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__EA_Atom_ReadWrite, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_EA_Atom_ReadWrite_getIOStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_EA_Atom_ReadWrite_getIOStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'EA_Atom_ReadWrite_getIOStream'");
  XSRETURN(0);
}


XS(_wrap_new_EA_Atom_ReadWrite_PassedInStream) {
  {
    Ferris::EA_Atom_ReadWrite_PassedInStream::GetIStream_PassedInStream_Func_t *arg1 = 0 ;
    Ferris::EA_Atom_ReadWrite_PassedInStream::IOStreamClosed_Func_t *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    Ferris::EA_Atom_ReadWrite_PassedInStream *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_EA_Atom_ReadWrite_PassedInStream(f_i,f_closed);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_BaseT_Ferris__EA_Atom_ReadOnly_PassedInStream_t__GetIStream_PassedInStream_Func_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_EA_Atom_ReadWrite_PassedInStream" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadWrite_PassedInStream::GetIStream_PassedInStream_Func_t const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EA_Atom_ReadWrite_PassedInStream" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadWrite_PassedInStream::GetIStream_PassedInStream_Func_t const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_ReadWrite_PassedInStream::GetIStream_PassedInStream_Func_t * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Loki__FunctorT_void_LOKI_TYPELIST_4_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_tF_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_EA_Atom_ReadWrite_PassedInStream" "', argument " "2"" of type '" "Ferris::EA_Atom_ReadWrite_PassedInStream::IOStreamClosed_Func_t const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EA_Atom_ReadWrite_PassedInStream" "', argument " "2"" of type '" "Ferris::EA_Atom_ReadWrite_PassedInStream::IOStreamClosed_Func_t const &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::EA_Atom_ReadWrite_PassedInStream::IOStreamClosed_Func_t * >(argp2);
    result = (Ferris::EA_Atom_ReadWrite_PassedInStream *)new Ferris::EA_Atom_ReadWrite_PassedInStream((Ferris::EA_Atom_ReadWrite_PassedInStream::GetIStream_PassedInStream_Func_t const &)*arg1,(Ferris::EA_Atom_ReadWrite_PassedInStream::IOStreamClosed_Func_t const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_PassedInStream, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_ReadWrite_PassedInStream_priv_getIOStream) {
  {
    Ferris::EA_Atom_ReadWrite_PassedInStream *arg1 = (Ferris::EA_Atom_ReadWrite_PassedInStream *) 0 ;
    Ferris::Context *arg2 = (Ferris::Context *) 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: EA_Atom_ReadWrite_PassedInStream_priv_getIOStream(self,c,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_PassedInStream, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_ReadWrite_PassedInStream_priv_getIOStream" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadWrite_PassedInStream *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_ReadWrite_PassedInStream * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EA_Atom_ReadWrite_PassedInStream_priv_getIOStream" "', argument " "2"" of type '" "Ferris::Context *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EA_Atom_ReadWrite_PassedInStream_priv_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_ReadWrite_PassedInStream_priv_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (arg1)->priv_getIOStream(arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_EA_Atom_ReadWrite_OpenModeCached) {
  {
    Ferris::EA_Atom_ReadWrite::GetIStream_Func_t *arg1 = 0 ;
    Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t *arg2 = 0 ;
    Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    Ferris::EA_Atom_ReadWrite_OpenModeCached *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_EA_Atom_ReadWrite_OpenModeCached(f_i,f_io,f_closed);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__EA_Atom_ReadWrite__RWBase_t__GetIStream_Func_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_EA_Atom_ReadWrite_OpenModeCached" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadWrite::GetIStream_Func_t const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EA_Atom_ReadWrite_OpenModeCached" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadWrite::GetIStream_Func_t const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_ReadWrite::GetIStream_Func_t * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_EA_Atom_ReadWrite_OpenModeCached" "', argument " "2"" of type '" "Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EA_Atom_ReadWrite_OpenModeCached" "', argument " "2"" of type '" "Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t const &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Ferris__EA_Atom_ReadWrite__RWBase_t__IOStreamClosed_Func_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_EA_Atom_ReadWrite_OpenModeCached" "', argument " "3"" of type '" "Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EA_Atom_ReadWrite_OpenModeCached" "', argument " "3"" of type '" "Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t const &""'"); 
    }
    arg3 = reinterpret_cast< Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t * >(argp3);
    result = (Ferris::EA_Atom_ReadWrite_OpenModeCached *)new Ferris::EA_Atom_ReadWrite_OpenModeCached((Ferris::EA_Atom_ReadWrite::GetIStream_Func_t const &)*arg1,(Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t const &)*arg2,(Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_OpenModeCached, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_ReadWrite_OpenModeCached_getOpenMode) {
  {
    Ferris::EA_Atom_ReadWrite_OpenModeCached *arg1 = (Ferris::EA_Atom_ReadWrite_OpenModeCached *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::ferris_ios::openmode result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: EA_Atom_ReadWrite_OpenModeCached_getOpenMode(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_OpenModeCached, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_ReadWrite_OpenModeCached_getOpenMode" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadWrite_OpenModeCached *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_ReadWrite_OpenModeCached * >(argp1);
    result = (Ferris::ferris_ios::openmode)(arg1)->getOpenMode();
    ST(argvi) = SWIG_From_unsigned_SS_long_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long long >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_ReadWrite_OpenModeCached_getIStream) {
  {
    Ferris::EA_Atom_ReadWrite_OpenModeCached *arg1 = (Ferris::EA_Atom_ReadWrite_OpenModeCached *) 0 ;
    Ferris::Context *arg2 = (Ferris::Context *) 0 ;
    std::string *arg3 = 0 ;
    Ferris::ferris_ios::openmode arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    unsigned long long val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: EA_Atom_ReadWrite_OpenModeCached_getIStream(self,c,rdn,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_OpenModeCached, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_ReadWrite_OpenModeCached_getIStream" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadWrite_OpenModeCached *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_ReadWrite_OpenModeCached * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EA_Atom_ReadWrite_OpenModeCached_getIStream" "', argument " "2"" of type '" "Ferris::Context *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EA_Atom_ReadWrite_OpenModeCached_getIStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_ReadWrite_OpenModeCached_getIStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EA_Atom_ReadWrite_OpenModeCached_getIStream" "', argument " "4"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg4 = static_cast< Ferris::ferris_ios::openmode >(val4);
    try {
      result = (arg1)->getIStream(arg2,(std::string const &)*arg3,arg4);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_ReadWrite_OpenModeCached_getIOStream__SWIG_0) {
  {
    Ferris::EA_Atom_ReadWrite_OpenModeCached *arg1 = (Ferris::EA_Atom_ReadWrite_OpenModeCached *) 0 ;
    Ferris::Context *arg2 = (Ferris::Context *) 0 ;
    std::string *arg3 = 0 ;
    Ferris::ferris_ios::openmode arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    unsigned long long val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: EA_Atom_ReadWrite_OpenModeCached_getIOStream(self,c,rdn,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_OpenModeCached, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_ReadWrite_OpenModeCached_getIOStream" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadWrite_OpenModeCached *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_ReadWrite_OpenModeCached * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EA_Atom_ReadWrite_OpenModeCached_getIOStream" "', argument " "2"" of type '" "Ferris::Context *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EA_Atom_ReadWrite_OpenModeCached_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_ReadWrite_OpenModeCached_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EA_Atom_ReadWrite_OpenModeCached_getIOStream" "', argument " "4"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg4 = static_cast< Ferris::ferris_ios::openmode >(val4);
    try {
      result = (arg1)->getIOStream(arg2,(std::string const &)*arg3,arg4);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::AttributeNotWritable &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeNotWritable(static_cast< const Ferris::AttributeNotWritable& >(_e))),SWIGTYPE_p_Ferris__AttributeNotWritable,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_ReadWrite_OpenModeCached_getIOStream__SWIG_1) {
  {
    Ferris::EA_Atom_ReadWrite_OpenModeCached *arg1 = (Ferris::EA_Atom_ReadWrite_OpenModeCached *) 0 ;
    Ferris::Context *arg2 = (Ferris::Context *) 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: EA_Atom_ReadWrite_OpenModeCached_getIOStream(self,c,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_OpenModeCached, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_ReadWrite_OpenModeCached_getIOStream" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadWrite_OpenModeCached *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_ReadWrite_OpenModeCached * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EA_Atom_ReadWrite_OpenModeCached_getIOStream" "', argument " "2"" of type '" "Ferris::Context *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EA_Atom_ReadWrite_OpenModeCached_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_ReadWrite_OpenModeCached_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    try {
      result = (arg1)->getIOStream(arg2,(std::string const &)*arg3);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::AttributeNotWritable &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeNotWritable(static_cast< const Ferris::AttributeNotWritable& >(_e))),SWIGTYPE_p_Ferris__AttributeNotWritable,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_ReadWrite_OpenModeCached_getIOStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_OpenModeCached, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_OpenModeCached, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_EA_Atom_ReadWrite_OpenModeCached_getIOStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_EA_Atom_ReadWrite_OpenModeCached_getIOStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'EA_Atom_ReadWrite_OpenModeCached_getIOStream'");
  XSRETURN(0);
}


XS(_wrap_new_EA_Atom_ReadWrite_Contents) {
  {
    Ferris::EA_Atom_ReadWrite::GetIStream_Func_t *arg1 = 0 ;
    Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    Ferris::EA_Atom_ReadWrite_Contents *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_EA_Atom_ReadWrite_Contents(f_i,f_io);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__EA_Atom_ReadWrite__RWBase_t__GetIStream_Func_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_EA_Atom_ReadWrite_Contents" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadWrite::GetIStream_Func_t const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EA_Atom_ReadWrite_Contents" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadWrite::GetIStream_Func_t const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_ReadWrite::GetIStream_Func_t * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Loki__FunctorT_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_EA_Atom_ReadWrite_Contents" "', argument " "2"" of type '" "Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EA_Atom_ReadWrite_Contents" "', argument " "2"" of type '" "Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t const &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t * >(argp2);
    result = (Ferris::EA_Atom_ReadWrite_Contents *)new Ferris::EA_Atom_ReadWrite_Contents((Ferris::EA_Atom_ReadWrite::GetIStream_Func_t const &)*arg1,(Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_Contents, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_ReadWrite_Contents_getIOStream__SWIG_0) {
  {
    Ferris::EA_Atom_ReadWrite_Contents *arg1 = (Ferris::EA_Atom_ReadWrite_Contents *) 0 ;
    Ferris::Context *arg2 = (Ferris::Context *) 0 ;
    std::string *arg3 = 0 ;
    Ferris::ferris_ios::openmode arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    unsigned long long val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: EA_Atom_ReadWrite_Contents_getIOStream(self,c,rdn,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_Contents, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_ReadWrite_Contents_getIOStream" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadWrite_Contents *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_ReadWrite_Contents * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EA_Atom_ReadWrite_Contents_getIOStream" "', argument " "2"" of type '" "Ferris::Context *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EA_Atom_ReadWrite_Contents_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_ReadWrite_Contents_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EA_Atom_ReadWrite_Contents_getIOStream" "', argument " "4"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg4 = static_cast< Ferris::ferris_ios::openmode >(val4);
    try {
      result = (arg1)->getIOStream(arg2,(std::string const &)*arg3,arg4);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::AttributeNotWritable &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeNotWritable(static_cast< const Ferris::AttributeNotWritable& >(_e))),SWIGTYPE_p_Ferris__AttributeNotWritable,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_ReadWrite_Contents_getIOStream__SWIG_1) {
  {
    Ferris::EA_Atom_ReadWrite_Contents *arg1 = (Ferris::EA_Atom_ReadWrite_Contents *) 0 ;
    Ferris::Context *arg2 = (Ferris::Context *) 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: EA_Atom_ReadWrite_Contents_getIOStream(self,c,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_Contents, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_ReadWrite_Contents_getIOStream" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadWrite_Contents *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_ReadWrite_Contents * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EA_Atom_ReadWrite_Contents_getIOStream" "', argument " "2"" of type '" "Ferris::Context *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EA_Atom_ReadWrite_Contents_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_ReadWrite_Contents_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    try {
      result = (arg1)->getIOStream(arg2,(std::string const &)*arg3);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::AttributeNotWritable &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeNotWritable(static_cast< const Ferris::AttributeNotWritable& >(_e))),SWIGTYPE_p_Ferris__AttributeNotWritable,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_ReadWrite_Contents_getIOStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_Contents, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_Contents, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_EA_Atom_ReadWrite_Contents_getIOStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_EA_Atom_ReadWrite_Contents_getIOStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'EA_Atom_ReadWrite_Contents_getIOStream'");
  XSRETURN(0);
}


XS(_wrap_EA_Atom_ReadWrite_Contents_nullclosed) {
  {
    Ferris::EA_Atom_ReadWrite_Contents *arg1 = (Ferris::EA_Atom_ReadWrite_Contents *) 0 ;
    Ferris::Context *arg2 = (Ferris::Context *) 0 ;
    std::string *arg3 = 0 ;
    Ferris::EA_Atom *arg4 = (Ferris::EA_Atom *) 0 ;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    void *argp5 ;
    int res5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: EA_Atom_ReadWrite_Contents_nullclosed(self,Ferris::Context *,std::string const &,Ferris::EA_Atom *,Ferris::fh_istream);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_Contents, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_ReadWrite_Contents_nullclosed" "', argument " "1"" of type '" "Ferris::EA_Atom_ReadWrite_Contents *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_ReadWrite_Contents * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EA_Atom_ReadWrite_Contents_nullclosed" "', argument " "2"" of type '" "Ferris::Context *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EA_Atom_ReadWrite_Contents_nullclosed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_ReadWrite_Contents_nullclosed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__EA_Atom, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EA_Atom_ReadWrite_Contents_nullclosed" "', argument " "4"" of type '" "Ferris::EA_Atom *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::EA_Atom * >(argp4);
    {
      res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "EA_Atom_ReadWrite_Contents_nullclosed" "', argument " "5"" of type '" "Ferris::fh_istream""'"); 
      }  
      if (!argp5) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_ReadWrite_Contents_nullclosed" "', argument " "5"" of type '" "Ferris::fh_istream""'");
      } else {
        arg5 = *(reinterpret_cast< Ferris::fh_istream * >(argp5));
      }
    }
    (arg1)->nullclosed(arg2,(std::string const &)*arg3,arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_Static_getIStream) {
  {
    Ferris::EA_Atom_Static *arg1 = (Ferris::EA_Atom_Static *) 0 ;
    Ferris::Context *arg2 = (Ferris::Context *) 0 ;
    std::string *arg3 = 0 ;
    Ferris::ferris_ios::openmode arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    unsigned long long val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: EA_Atom_Static_getIStream(self,c,rdn,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom_Static, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_Static_getIStream" "', argument " "1"" of type '" "Ferris::EA_Atom_Static *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_Static * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EA_Atom_Static_getIStream" "', argument " "2"" of type '" "Ferris::Context *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EA_Atom_Static_getIStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_Static_getIStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EA_Atom_Static_getIStream" "', argument " "4"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg4 = static_cast< Ferris::ferris_ios::openmode >(val4);
    try {
      result = (arg1)->getIStream(arg2,(std::string const &)*arg3,arg4);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_RDFCacheAttribute_getIStream) {
  {
    Ferris::EA_Atom_RDFCacheAttribute *arg1 = (Ferris::EA_Atom_RDFCacheAttribute *) 0 ;
    Ferris::Context *arg2 = (Ferris::Context *) 0 ;
    std::string *arg3 = 0 ;
    Ferris::ferris_ios::openmode arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    unsigned long long val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: EA_Atom_RDFCacheAttribute_getIStream(self,c,rdn,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom_RDFCacheAttribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_RDFCacheAttribute_getIStream" "', argument " "1"" of type '" "Ferris::EA_Atom_RDFCacheAttribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_RDFCacheAttribute * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EA_Atom_RDFCacheAttribute_getIStream" "', argument " "2"" of type '" "Ferris::Context *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EA_Atom_RDFCacheAttribute_getIStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_RDFCacheAttribute_getIStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EA_Atom_RDFCacheAttribute_getIStream" "', argument " "4"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg4 = static_cast< Ferris::ferris_ios::openmode >(val4);
    try {
      result = (arg1)->getIStream(arg2,(std::string const &)*arg3,arg4);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_RDFCacheAttribute_getIOStream__SWIG_0) {
  {
    Ferris::EA_Atom_RDFCacheAttribute *arg1 = (Ferris::EA_Atom_RDFCacheAttribute *) 0 ;
    Ferris::Context *arg2 = (Ferris::Context *) 0 ;
    std::string *arg3 = 0 ;
    Ferris::ferris_ios::openmode arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    unsigned long long val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: EA_Atom_RDFCacheAttribute_getIOStream(self,c,rdn,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom_RDFCacheAttribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_RDFCacheAttribute_getIOStream" "', argument " "1"" of type '" "Ferris::EA_Atom_RDFCacheAttribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_RDFCacheAttribute * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EA_Atom_RDFCacheAttribute_getIOStream" "', argument " "2"" of type '" "Ferris::Context *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EA_Atom_RDFCacheAttribute_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_RDFCacheAttribute_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EA_Atom_RDFCacheAttribute_getIOStream" "', argument " "4"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg4 = static_cast< Ferris::ferris_ios::openmode >(val4);
    try {
      result = (arg1)->getIOStream(arg2,(std::string const &)*arg3,arg4);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::AttributeNotWritable &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeNotWritable(static_cast< const Ferris::AttributeNotWritable& >(_e))),SWIGTYPE_p_Ferris__AttributeNotWritable,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_RDFCacheAttribute_getIOStream__SWIG_1) {
  {
    Ferris::EA_Atom_RDFCacheAttribute *arg1 = (Ferris::EA_Atom_RDFCacheAttribute *) 0 ;
    Ferris::Context *arg2 = (Ferris::Context *) 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: EA_Atom_RDFCacheAttribute_getIOStream(self,c,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom_RDFCacheAttribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_RDFCacheAttribute_getIOStream" "', argument " "1"" of type '" "Ferris::EA_Atom_RDFCacheAttribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_RDFCacheAttribute * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EA_Atom_RDFCacheAttribute_getIOStream" "', argument " "2"" of type '" "Ferris::Context *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EA_Atom_RDFCacheAttribute_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EA_Atom_RDFCacheAttribute_getIOStream" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    try {
      result = (arg1)->getIOStream(arg2,(std::string const &)*arg3);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::AttributeNotWritable &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeNotWritable(static_cast< const Ferris::AttributeNotWritable& >(_e))),SWIGTYPE_p_Ferris__AttributeNotWritable,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_EA_Atom_RDFCacheAttribute_getIOStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__EA_Atom_RDFCacheAttribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__EA_Atom_RDFCacheAttribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_EA_Atom_RDFCacheAttribute_getIOStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_EA_Atom_RDFCacheAttribute_getIOStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'EA_Atom_RDFCacheAttribute_getIOStream'");
  XSRETURN(0);
}


XS(_wrap_EA_Atom_RDFCacheAttribute_getSupportedOpenModes) {
  {
    Ferris::EA_Atom_RDFCacheAttribute *arg1 = (Ferris::EA_Atom_RDFCacheAttribute *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::ferris_ios::openmode result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: EA_Atom_RDFCacheAttribute_getSupportedOpenModes(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__EA_Atom_RDFCacheAttribute, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EA_Atom_RDFCacheAttribute_getSupportedOpenModes" "', argument " "1"" of type '" "Ferris::EA_Atom_RDFCacheAttribute *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::EA_Atom_RDFCacheAttribute * >(argp1);
    result = (Ferris::ferris_ios::openmode)(arg1)->getSupportedOpenModes();
    ST(argvi) = SWIG_From_unsigned_SS_long_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long long >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_remove_prefix) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: remove_prefix(ret,prefix);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "remove_prefix" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "remove_prefix" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "remove_prefix" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "remove_prefix" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = Ferris::remove_prefix((std::string const &)*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_remove_postfix) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: remove_postfix(ret,postfix);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "remove_postfix" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "remove_postfix" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "remove_postfix" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "remove_postfix" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = Ferris::remove_postfix((std::string const &)*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_tostr__SWIG_9) {
  {
    tm *arg1 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: tostr(tm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_tm,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tostr" "', argument " "1"" of type '" "tm const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tostr" "', argument " "1"" of type '" "tm const &""'"); 
    }
    arg1 = reinterpret_cast< tm * >(argp1);
    result = Ferris::tostr((tm const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_tostr) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__istringstream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__ostringstream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__stringstream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_p_std__istringstream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_p_std__ostringstream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_p_std__stringstream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 6;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_6:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_ostringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 7;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_7:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_stringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 8;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_8:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_tm, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_9;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 9;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_9:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_10;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 10;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_10:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_tostr__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_tostr__SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_tostr__SWIG_3); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_tostr__SWIG_4); return;
    case 5:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_tostr__SWIG_5); return;
    case 6:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_tostr__SWIG_6); return;
    case 7:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_tostr__SWIG_7); return;
    case 8:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_tostr__SWIG_8); return;
    case 9:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_tostr__SWIG_9); return;
    case 10:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_tostr__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'tostr'");
  XSRETURN(0);
}


XS(_wrap_split) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< std::pair< std::string,std::string > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: split(data,sep);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "split" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "split" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "split" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "split" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = Ferris::split((std::string const &)*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::stringpair_t(static_cast< const Ferris::stringpair_t& >(result))), SWIGTYPE_p_std__pairT_std__string_std__string_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_toupperstring) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: toupperstring(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "toupperstring" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "toupperstring" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::toupperstring((std::string const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_tolowerstring) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: tolowerstring(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tolowerstring" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tolowerstring" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::tolowerstring((std::string const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_attemptToAbsoluteURL__SWIG_0) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: attemptToAbsoluteURL(maybeRelative,cwd);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "attemptToAbsoluteURL" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "attemptToAbsoluteURL" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "attemptToAbsoluteURL" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "attemptToAbsoluteURL" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = Ferris::attemptToAbsoluteURL((std::string const &)*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_attemptToAbsoluteURL__SWIG_1) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: attemptToAbsoluteURL(maybeRelative);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "attemptToAbsoluteURL" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "attemptToAbsoluteURL" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::attemptToAbsoluteURL((std::string const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_attemptToAbsoluteURL) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_attemptToAbsoluteURL__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_attemptToAbsoluteURL__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'attemptToAbsoluteURL'");
  XSRETURN(0);
}


XS(_wrap___lshift__) {
  {
    std::basic_ostream< wchar_t,std::char_traits< wchar_t > > *arg1 = 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::basic_ostream< wchar_t,std::char_traits< wchar_t > > *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: __lshift__(oss,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__basic_ostreamT_wchar_t_std__char_traitsT_wchar_t_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__lshift__" "', argument " "1"" of type '" "std::basic_ostream< wchar_t,std::char_traits< wchar_t > > &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__lshift__" "', argument " "1"" of type '" "std::basic_ostream< wchar_t,std::char_traits< wchar_t > > &""'"); 
    }
    arg1 = reinterpret_cast< std::basic_ostream< wchar_t,std::char_traits< wchar_t > > * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__lshift__" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__lshift__" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (std::basic_ostream< wchar_t,std::char_traits< wchar_t > > *) &Ferris::operator <<(*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_wchar_t_std__char_traitsT_wchar_t_t_t, 0 | 0); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_getline) {
  {
    std::istream *arg1 = 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::istream *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: getline(ss,ret,delim);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__istream,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getline" "', argument " "1"" of type '" "std::istream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getline" "', argument " "1"" of type '" "std::istream &""'"); 
    }
    arg1 = reinterpret_cast< std::istream * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getline" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getline" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "getline" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getline" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (std::istream *) &Ferris::getline(*arg1,*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__istream, 0 | 0); argvi++ ;
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_wstring_to_utf8__SWIG_0) {
  {
    std::string *arg1 = 0 ;
    std::wstring *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    std::string *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: wstring_to_utf8(ret,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "wstring_to_utf8" "', argument " "1"" of type '" "std::string &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "wstring_to_utf8" "', argument " "1"" of type '" "std::string &""'"); 
    }
    arg1 = reinterpret_cast< std::string * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__wstring,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "wstring_to_utf8" "', argument " "2"" of type '" "std::wstring const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "wstring_to_utf8" "', argument " "2"" of type '" "std::wstring const &""'"); 
    }
    arg2 = reinterpret_cast< std::wstring * >(argp2);
    result = (std::string *) &Ferris::Util::wstring_to_utf8(*arg1,(std::wstring const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_wstring_to_utf8__SWIG_1) {
  {
    std::wstring *arg1 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: wstring_to_utf8(s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__wstring,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "wstring_to_utf8" "', argument " "1"" of type '" "std::wstring const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "wstring_to_utf8" "', argument " "1"" of type '" "std::wstring const &""'"); 
    }
    arg1 = reinterpret_cast< std::wstring * >(argp1);
    result = Ferris::Util::wstring_to_utf8((std::wstring const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_wstring_to_utf8) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__wstring, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__wstring, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_wstring_to_utf8__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_wstring_to_utf8__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'wstring_to_utf8'");
  XSRETURN(0);
}


XS(_wrap_utf8_to_wstring__SWIG_0) {
  {
    std::wstring *arg1 = 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::wstring *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: utf8_to_wstring(ret,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__wstring,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "utf8_to_wstring" "', argument " "1"" of type '" "std::wstring &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "utf8_to_wstring" "', argument " "1"" of type '" "std::wstring &""'"); 
    }
    arg1 = reinterpret_cast< std::wstring * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "utf8_to_wstring" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "utf8_to_wstring" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (std::wstring *) &Ferris::Util::utf8_to_wstring(*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__wstring, 0 | 0); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_utf8_to_wstring__SWIG_1) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::wstring result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: utf8_to_wstring(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "utf8_to_wstring" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "utf8_to_wstring" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::Util::utf8_to_wstring((std::string const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new std::wstring(static_cast< const std::wstring& >(result))), SWIGTYPE_p_std__wstring, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_utf8_to_wstring) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__wstring, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_utf8_to_wstring__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_utf8_to_wstring__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'utf8_to_wstring'");
  XSRETURN(0);
}


XS(_wrap_iso8859_to_utf8) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: iso8859_to_utf8(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iso8859_to_utf8" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iso8859_to_utf8" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::Util::iso8859_to_utf8((std::string const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_convert_url_to_utf8) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: convert_url_to_utf8(earl);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "convert_url_to_utf8" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "convert_url_to_utf8" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::Util::convert_url_to_utf8((std::string const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_convert_basename_to_utf8) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: convert_basename_to_utf8(v);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "convert_basename_to_utf8" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "convert_basename_to_utf8" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::Util::convert_basename_to_utf8((std::string const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_URLDecode) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: URLDecode(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "URLDecode" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "URLDecode" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::Util::URLDecode((std::string const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_EscapeStringAsRegex) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: EscapeStringAsRegex(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EscapeStringAsRegex" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EscapeStringAsRegex" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::Util::EscapeStringAsRegex((std::string const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_replace_all__SWIG_0) {
  {
    std::string *arg1 = 0 ;
    char arg2 ;
    char arg3 ;
    int res1 = SWIG_OLDOBJ ;
    char val2 ;
    int ecode2 = 0 ;
    char val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: replace_all(s,oldc,newc);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "replace_all" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "replace_all" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "replace_all" "', argument " "2"" of type '" "char""'");
    } 
    arg2 = static_cast< char >(val2);
    ecode3 = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "replace_all" "', argument " "3"" of type '" "char""'");
    } 
    arg3 = static_cast< char >(val3);
    result = Ferris::Util::replace_all((std::string const &)*arg1,arg2,arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_replace_all__SWIG_1) {
  {
    std::string *arg1 = 0 ;
    char arg2 ;
    std::string *arg3 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    char val2 ;
    int ecode2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: replace_all(s,oldc,news);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "replace_all" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "replace_all" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "replace_all" "', argument " "2"" of type '" "char""'");
    } 
    arg2 = static_cast< char >(val2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "replace_all" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "replace_all" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = Ferris::Util::replace_all((std::string const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_replace_all__SWIG_2) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: replace_all(s,olds,news);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "replace_all" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "replace_all" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "replace_all" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "replace_all" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "replace_all" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "replace_all" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = Ferris::Util::replace_all((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_replace_all) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_replace_all__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_replace_all__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_replace_all__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'replace_all'");
  XSRETURN(0);
}


XS(_wrap_convertByteString__SWIG_0) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    guint64 result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: convertByteString(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "convertByteString" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "convertByteString" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::Util::convertByteString((std::string const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new guint64(static_cast< const guint64& >(result))), SWIGTYPE_p_guint64, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_convertByteString__SWIG_1) {
  {
    guint64 arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: convertByteString(v);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_guint64,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "convertByteString" "', argument " "1"" of type '" "guint64""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "convertByteString" "', argument " "1"" of type '" "guint64""'");
      } else {
        arg1 = *(reinterpret_cast< guint64 * >(argp1));
      }
    }
    result = Ferris::Util::convertByteString(arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_convertByteString) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_guint64, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_convertByteString__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_convertByteString__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'convertByteString'");
  XSRETURN(0);
}


XS(_wrap_ParseKeyValueString__SWIG_0) {
  {
    Ferris::StringMap_t *arg1 = 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::StringMap_t *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: ParseKeyValueString(ret,kvs,seps);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__mapT_std__string_std__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ParseKeyValueString" "', argument " "1"" of type '" "Ferris::StringMap_t &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseKeyValueString" "', argument " "1"" of type '" "Ferris::StringMap_t &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::StringMap_t * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ParseKeyValueString" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseKeyValueString" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ParseKeyValueString" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseKeyValueString" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::StringMap_t *) &Ferris::Util::ParseKeyValueString(*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_std__string_std__string_t, 0 | 0); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_ParseKeyValueString__SWIG_1) {
  {
    Ferris::StringMap_t *arg1 = 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::StringMap_t *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ParseKeyValueString(ret,kvs);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__mapT_std__string_std__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ParseKeyValueString" "', argument " "1"" of type '" "Ferris::StringMap_t &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseKeyValueString" "', argument " "1"" of type '" "Ferris::StringMap_t &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::StringMap_t * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ParseKeyValueString" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseKeyValueString" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (Ferris::StringMap_t *) &Ferris::Util::ParseKeyValueString(*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_std__string_std__string_t, 0 | 0); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ParseKeyValueString__SWIG_2) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< std::map< std::string,std::string > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ParseKeyValueString(kvs,seps);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ParseKeyValueString" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseKeyValueString" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ParseKeyValueString" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseKeyValueString" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = Ferris::Util::ParseKeyValueString((std::string const &)*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::StringMap_t(static_cast< const Ferris::StringMap_t& >(result))), SWIGTYPE_p_std__mapT_std__string_std__string_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ParseKeyValueString__SWIG_3) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< std::map< std::string,std::string > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ParseKeyValueString(kvs);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ParseKeyValueString" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseKeyValueString" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::Util::ParseKeyValueString((std::string const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::StringMap_t(static_cast< const Ferris::StringMap_t& >(result))), SWIGTYPE_p_std__mapT_std__string_std__string_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_ParseKeyValueString__SWIG_4) {
  {
    Ferris::fh_istream *arg1 = 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< std::map< std::string,std::string > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ParseKeyValueString(iss,seps);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ParseKeyValueString" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseKeyValueString" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_istream * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ParseKeyValueString" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseKeyValueString" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = Ferris::Util::ParseKeyValueString(*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::StringMap_t(static_cast< const Ferris::StringMap_t& >(result))), SWIGTYPE_p_std__mapT_std__string_std__string_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ParseKeyValueString__SWIG_5) {
  {
    Ferris::fh_istream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::map< std::string,std::string > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ParseKeyValueString(iss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ParseKeyValueString" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseKeyValueString" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_istream * >(argp1);
    result = Ferris::Util::ParseKeyValueString(*arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::StringMap_t(static_cast< const Ferris::StringMap_t& >(result))), SWIGTYPE_p_std__mapT_std__string_std__string_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ParseKeyValueString) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__mapT_std__string_std__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__mapT_std__string_std__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 6;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_6:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ParseKeyValueString__SWIG_5); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ParseKeyValueString__SWIG_3); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ParseKeyValueString__SWIG_1); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ParseKeyValueString__SWIG_4); return;
    case 5:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ParseKeyValueString__SWIG_2); return;
    case 6:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ParseKeyValueString__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'ParseKeyValueString'");
  XSRETURN(0);
}


XS(_wrap_CreateKeyValueString__SWIG_0) {
  {
    Ferris::StringMap_t *arg1 = 0 ;
    std::string arg2 ;
    std::string arg3 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CreateKeyValueString(sm,kvsep,atomsep);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__mapT_std__string_std__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CreateKeyValueString" "', argument " "1"" of type '" "Ferris::StringMap_t const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CreateKeyValueString" "', argument " "1"" of type '" "Ferris::StringMap_t const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::StringMap_t * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "CreateKeyValueString" "', argument " "2"" of type '" "std::string const""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "CreateKeyValueString" "', argument " "3"" of type '" "std::string const""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = Ferris::Util::CreateKeyValueString((std::map< std::string,std::string > const &)*arg1,arg2,arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CreateKeyValueString__SWIG_1) {
  {
    Ferris::StringMap_t *arg1 = 0 ;
    std::string arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CreateKeyValueString(sm,kvsep);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__mapT_std__string_std__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CreateKeyValueString" "', argument " "1"" of type '" "Ferris::StringMap_t const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CreateKeyValueString" "', argument " "1"" of type '" "Ferris::StringMap_t const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::StringMap_t * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "CreateKeyValueString" "', argument " "2"" of type '" "std::string const""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = Ferris::Util::CreateKeyValueString((std::map< std::string,std::string > const &)*arg1,arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CreateKeyValueString__SWIG_2) {
  {
    Ferris::StringMap_t *arg1 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CreateKeyValueString(sm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__mapT_std__string_std__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CreateKeyValueString" "', argument " "1"" of type '" "Ferris::StringMap_t const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CreateKeyValueString" "', argument " "1"" of type '" "Ferris::StringMap_t const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::StringMap_t * >(argp1);
    result = Ferris::Util::CreateKeyValueString((std::map< std::string,std::string > const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CreateKeyValueString) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__mapT_std__string_std__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__mapT_std__string_std__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__mapT_std__string_std__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_CreateKeyValueString__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_CreateKeyValueString__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_CreateKeyValueString__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CreateKeyValueString'");
  XSRETURN(0);
}


XS(_wrap_parseSeperatedList__SWIG_4) {
  {
    std::string *arg1 = 0 ;
    char arg2 ;
    int res1 = SWIG_OLDOBJ ;
    char val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< std::string > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: parseSeperatedList(s,sepchar);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "parseSeperatedList" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parseSeperatedList" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "parseSeperatedList" "', argument " "2"" of type '" "char""'");
    } 
    arg2 = static_cast< char >(val2);
    result = Ferris::Util::parseSeperatedList((std::string const &)*arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::stringlist_t(static_cast< const Ferris::stringlist_t& >(result))), SWIGTYPE_p_std__listT_std__string_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    SWIG_croak_null();
  }
}


XS(_wrap_parseSeperatedList__SWIG_5) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< std::list< std::string > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: parseSeperatedList(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "parseSeperatedList" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parseSeperatedList" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::Util::parseSeperatedList((std::string const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::stringlist_t(static_cast< const Ferris::stringlist_t& >(result))), SWIGTYPE_p_std__listT_std__string_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_parseSeperatedList__SWIG_6) {
  {
    std::string *arg1 = 0 ;
    char arg2 ;
    Ferris::stringlist_t *arg3 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    char val2 ;
    int ecode2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    Ferris::stringlist_t *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: parseSeperatedList(s,sepchar,ret);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "parseSeperatedList" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parseSeperatedList" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "parseSeperatedList" "', argument " "2"" of type '" "char""'");
    } 
    arg2 = static_cast< char >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__listT_std__string_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "parseSeperatedList" "', argument " "3"" of type '" "Ferris::stringlist_t &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parseSeperatedList" "', argument " "3"" of type '" "Ferris::stringlist_t &""'"); 
    }
    arg3 = reinterpret_cast< Ferris::stringlist_t * >(argp3);
    result = (Ferris::stringlist_t *) &Ferris::Util::parseSeperatedList((std::string const &)*arg1,arg2,*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_std__string_t, 0 | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_parseSeperatedList__SWIG_7) {
  {
    std::string *arg1 = 0 ;
    char arg2 ;
    Ferris::stringset_t *arg3 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    char val2 ;
    int ecode2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    Ferris::stringset_t *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: parseSeperatedList(s,sepchar,ret);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "parseSeperatedList" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parseSeperatedList" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "parseSeperatedList" "', argument " "2"" of type '" "char""'");
    } 
    arg2 = static_cast< char >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__setT_std__string_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "parseSeperatedList" "', argument " "3"" of type '" "Ferris::stringset_t &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parseSeperatedList" "', argument " "3"" of type '" "Ferris::stringset_t &""'"); 
    }
    arg3 = reinterpret_cast< Ferris::stringset_t * >(argp3);
    result = (Ferris::stringset_t *) &Ferris::Util::parseSeperatedList((std::string const &)*arg1,arg2,*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__setT_std__string_t, 0 | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_parseSeperatedList) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__listT_std__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__setT_std__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_parseSeperatedList__SWIG_5); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_parseSeperatedList__SWIG_4); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_parseSeperatedList__SWIG_6); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_parseSeperatedList__SWIG_7); return;
    }
  }
  
  croak("No matching function for overloaded 'parseSeperatedList'");
  XSRETURN(0);
}


XS(_wrap_createSeperatedList__SWIG_3) {
  {
    Ferris::stringlist_t *arg1 = 0 ;
    char arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    char val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: createSeperatedList(l,sepchar);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__listT_std__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "createSeperatedList" "', argument " "1"" of type '" "Ferris::stringlist_t const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createSeperatedList" "', argument " "1"" of type '" "Ferris::stringlist_t const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::stringlist_t * >(argp1);
    ecode2 = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "createSeperatedList" "', argument " "2"" of type '" "char""'");
    } 
    arg2 = static_cast< char >(val2);
    result = Ferris::Util::createSeperatedList((std::list< std::string > const &)*arg1,arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_createSeperatedList__SWIG_4) {
  {
    Ferris::stringlist_t *arg1 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: createSeperatedList(l);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__listT_std__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "createSeperatedList" "', argument " "1"" of type '" "Ferris::stringlist_t const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createSeperatedList" "', argument " "1"" of type '" "Ferris::stringlist_t const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::stringlist_t * >(argp1);
    result = Ferris::Util::createSeperatedList((std::list< std::string > const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_createSeperatedList__SWIG_5) {
  {
    Ferris::stringset_t *arg1 = 0 ;
    char arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    char val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: createSeperatedList(l,sepchar);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__setT_std__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "createSeperatedList" "', argument " "1"" of type '" "Ferris::stringset_t const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createSeperatedList" "', argument " "1"" of type '" "Ferris::stringset_t const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::stringset_t * >(argp1);
    ecode2 = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "createSeperatedList" "', argument " "2"" of type '" "char""'");
    } 
    arg2 = static_cast< char >(val2);
    result = Ferris::Util::createSeperatedList((std::set< std::string > const &)*arg1,arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_createSeperatedList__SWIG_6) {
  {
    Ferris::stringset_t *arg1 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: createSeperatedList(l);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__setT_std__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "createSeperatedList" "', argument " "1"" of type '" "Ferris::stringset_t const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createSeperatedList" "', argument " "1"" of type '" "Ferris::stringset_t const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::stringset_t * >(argp1);
    result = Ferris::Util::createSeperatedList((std::set< std::string > const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_createSeperatedList__SWIG_7) {
  {
    Ferris::stringlist_t *arg1 = 0 ;
    std::string *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: createSeperatedList(l,sepchar);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__listT_std__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "createSeperatedList" "', argument " "1"" of type '" "Ferris::stringlist_t const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createSeperatedList" "', argument " "1"" of type '" "Ferris::stringlist_t const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::stringlist_t * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "createSeperatedList" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createSeperatedList" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = Ferris::Util::createSeperatedList((std::list< std::string > const &)*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_createSeperatedList__SWIG_8) {
  {
    Ferris::stringset_t *arg1 = 0 ;
    std::string *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: createSeperatedList(l,sepchar);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__setT_std__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "createSeperatedList" "', argument " "1"" of type '" "Ferris::stringset_t const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createSeperatedList" "', argument " "1"" of type '" "Ferris::stringset_t const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::stringset_t * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "createSeperatedList" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createSeperatedList" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = Ferris::Util::createSeperatedList((std::set< std::string > const &)*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_createSeperatedList) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__listT_std__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__setT_std__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__setT_std__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__listT_std__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__listT_std__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__setT_std__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 6;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_6:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_createSeperatedList__SWIG_4); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_createSeperatedList__SWIG_6); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_createSeperatedList__SWIG_5); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_createSeperatedList__SWIG_3); return;
    case 5:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_createSeperatedList__SWIG_7); return;
    case 6:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_createSeperatedList__SWIG_8); return;
    }
  }
  
  croak("No matching function for overloaded 'createSeperatedList'");
  XSRETURN(0);
}


XS(_wrap_parseCommaSeperatedList__SWIG_0) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< std::list< std::string > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: parseCommaSeperatedList(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "parseCommaSeperatedList" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parseCommaSeperatedList" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::Util::parseCommaSeperatedList((std::string const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::stringlist_t(static_cast< const Ferris::stringlist_t& >(result))), SWIGTYPE_p_std__listT_std__string_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_parseCommaSeperatedList__SWIG_1) {
  {
    std::string *arg1 = 0 ;
    Ferris::stringlist_t *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: parseCommaSeperatedList(s,sl);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "parseCommaSeperatedList" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parseCommaSeperatedList" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__listT_std__string_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "parseCommaSeperatedList" "', argument " "2"" of type '" "Ferris::stringlist_t &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parseCommaSeperatedList" "', argument " "2"" of type '" "Ferris::stringlist_t &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::stringlist_t * >(argp2);
    Ferris::Util::parseCommaSeperatedList((std::string const &)*arg1,*arg2);
    ST(argvi) = sv_newmortal();
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    SWIG_croak_null();
  }
}


XS(_wrap_parseCommaSeperatedList__SWIG_2) {
  {
    std::string *arg1 = 0 ;
    Ferris::stringset_t *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: parseCommaSeperatedList(s,sl);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "parseCommaSeperatedList" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parseCommaSeperatedList" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__setT_std__string_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "parseCommaSeperatedList" "', argument " "2"" of type '" "Ferris::stringset_t &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parseCommaSeperatedList" "', argument " "2"" of type '" "Ferris::stringset_t &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::stringset_t * >(argp2);
    Ferris::Util::parseCommaSeperatedList((std::string const &)*arg1,*arg2);
    ST(argvi) = sv_newmortal();
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    SWIG_croak_null();
  }
}


XS(_wrap_parseCommaSeperatedList) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__listT_std__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__setT_std__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_parseCommaSeperatedList__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_parseCommaSeperatedList__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_parseCommaSeperatedList__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'parseCommaSeperatedList'");
  XSRETURN(0);
}


XS(_wrap_createCommaSeperatedList__SWIG_0) {
  {
    Ferris::stringlist_t *arg1 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: createCommaSeperatedList(l);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__listT_std__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "createCommaSeperatedList" "', argument " "1"" of type '" "Ferris::stringlist_t const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createCommaSeperatedList" "', argument " "1"" of type '" "Ferris::stringlist_t const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::stringlist_t * >(argp1);
    result = Ferris::Util::createCommaSeperatedList((std::list< std::string > const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_createCommaSeperatedList__SWIG_1) {
  {
    Ferris::stringset_t *arg1 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: createCommaSeperatedList(l);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__setT_std__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "createCommaSeperatedList" "', argument " "1"" of type '" "Ferris::stringset_t const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createCommaSeperatedList" "', argument " "1"" of type '" "Ferris::stringset_t const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::stringset_t * >(argp1);
    result = Ferris::Util::createCommaSeperatedList((std::set< std::string > const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_createCommaSeperatedList) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__listT_std__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__setT_std__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_createCommaSeperatedList__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_createCommaSeperatedList__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'createCommaSeperatedList'");
  XSRETURN(0);
}


XS(_wrap_parseNullSeperatedList__SWIG_0) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< std::list< std::string > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: parseNullSeperatedList(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "parseNullSeperatedList" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parseNullSeperatedList" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::Util::parseNullSeperatedList((std::string const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::stringlist_t(static_cast< const Ferris::stringlist_t& >(result))), SWIGTYPE_p_std__listT_std__string_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_parseNullSeperatedList__SWIG_1) {
  {
    std::string *arg1 = 0 ;
    Ferris::stringlist_t *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    Ferris::stringlist_t *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: parseNullSeperatedList(s,ret);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "parseNullSeperatedList" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parseNullSeperatedList" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__listT_std__string_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "parseNullSeperatedList" "', argument " "2"" of type '" "Ferris::stringlist_t &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "parseNullSeperatedList" "', argument " "2"" of type '" "Ferris::stringlist_t &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::stringlist_t * >(argp2);
    result = (Ferris::stringlist_t *) &Ferris::Util::parseNullSeperatedList((std::string const &)*arg1,*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_std__string_t, 0 | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    SWIG_croak_null();
  }
}


XS(_wrap_parseNullSeperatedList) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__listT_std__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_parseNullSeperatedList__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_parseNullSeperatedList__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'parseNullSeperatedList'");
  XSRETURN(0);
}


XS(_wrap_createNullSeperatedList) {
  {
    Ferris::stringlist_t *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: createNullSeperatedList(l);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__listT_std__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "createNullSeperatedList" "', argument " "1"" of type '" "Ferris::stringlist_t &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createNullSeperatedList" "', argument " "1"" of type '" "Ferris::stringlist_t &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::stringlist_t * >(argp1);
    result = Ferris::Util::createNullSeperatedList(*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_makeUUID) {
  {
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: makeUUID();");
    }
    result = Ferris::Util::makeUUID();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap___add__) {
  {
    tm *arg1 = 0 ;
    tm *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    tm result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: __add__(t1,t2);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_tm,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__add__" "', argument " "1"" of type '" "tm const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__add__" "', argument " "1"" of type '" "tm const &""'"); 
    }
    arg1 = reinterpret_cast< tm * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_tm,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__add__" "', argument " "2"" of type '" "tm const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__add__" "', argument " "2"" of type '" "tm const &""'"); 
    }
    arg2 = reinterpret_cast< tm * >(argp2);
    result = Ferris::Time::operator +((tm const &)*arg1,(tm const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new tm(static_cast< const tm& >(result))), SWIGTYPE_p_tm, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_toTime__SWIG_0) {
  {
    tm *arg1 = (tm *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: toTime(tm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_tm, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "toTime" "', argument " "1"" of type '" "tm *""'"); 
    }
    arg1 = reinterpret_cast< tm * >(argp1);
    result = Ferris::Time::toTime(arg1);
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_toTime__SWIG_1) {
  {
    tm arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: toTime(tm);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_tm,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "toTime" "', argument " "1"" of type '" "tm""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "toTime" "', argument " "1"" of type '" "tm""'");
      } else {
        arg1 = *(reinterpret_cast< tm * >(argp1));
      }
    }
    result = Ferris::Time::toTime(arg1);
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_toTime) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_tm, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_tm, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_toTime__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_toTime__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'toTime'");
  XSRETURN(0);
}


XS(_wrap_toXMLDateTime) {
  {
    time_t arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: toXMLDateTime(tt);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_time_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "toXMLDateTime" "', argument " "1"" of type '" "time_t""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "toXMLDateTime" "', argument " "1"" of type '" "time_t""'");
      } else {
        arg1 = *(reinterpret_cast< time_t * >(argp1));
      }
    }
    result = Ferris::Time::toXMLDateTime(arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_ParseTimeString__SWIG_0) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    bool arg3 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    tm result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: ParseTimeString(stddatestr,defaultformat,autoFresh);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ParseTimeString" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseTimeString" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ParseTimeString" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseTimeString" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ParseTimeString" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = Ferris::Time::ParseTimeString((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj((new tm(static_cast< const tm& >(result))), SWIGTYPE_p_tm, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_ParseTimeString__SWIG_1) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    tm result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ParseTimeString(stddatestr,defaultformat);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ParseTimeString" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseTimeString" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ParseTimeString" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseTimeString" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = Ferris::Time::ParseTimeString((std::string const &)*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new tm(static_cast< const tm& >(result))), SWIGTYPE_p_tm, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ParseTimeString__SWIG_2) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    tm result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ParseTimeString(stddatestr);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ParseTimeString" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseTimeString" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::Time::ParseTimeString((std::string const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new tm(static_cast< const tm& >(result))), SWIGTYPE_p_tm, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_ParseTimeString) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ParseTimeString__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ParseTimeString__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ParseTimeString__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'ParseTimeString'");
  XSRETURN(0);
}


XS(_wrap_ParseSimpleIntervalString) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    guint64 result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ParseSimpleIntervalString(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ParseSimpleIntervalString" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseSimpleIntervalString" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::Time::ParseSimpleIntervalString((std::string const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new guint64(static_cast< const guint64& >(result))), SWIGTYPE_p_guint64, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_FreshenTime__SWIG_0) {
  {
    tm *arg1 = 0 ;
    tm arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    tm *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: FreshenTime(tm,ref);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_tm,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreshenTime" "', argument " "1"" of type '" "tm &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FreshenTime" "', argument " "1"" of type '" "tm &""'"); 
    }
    arg1 = reinterpret_cast< tm * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_tm,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FreshenTime" "', argument " "2"" of type '" "tm""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FreshenTime" "', argument " "2"" of type '" "tm""'");
      } else {
        arg2 = *(reinterpret_cast< tm * >(argp2));
      }
    }
    result = (tm *) &Ferris::Time::FreshenTime(*arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tm, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_FreshenTime__SWIG_1) {
  {
    tm *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    tm *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: FreshenTime(tm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_tm,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FreshenTime" "', argument " "1"" of type '" "tm &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FreshenTime" "', argument " "1"" of type '" "tm &""'"); 
    }
    arg1 = reinterpret_cast< tm * >(argp1);
    result = (tm *) &Ferris::Time::FreshenTime(*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_tm, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_FreshenTime) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_tm, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_tm, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_tm, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_FreshenTime__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_FreshenTime__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'FreshenTime'");
  XSRETURN(0);
}


XS(_wrap_getTime) {
  {
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: getTime();");
    }
    result = Ferris::Time::getTime();
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_Sleep) {
  {
    double arg1 ;
    double val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Sleep(t);");
    }
    ecode1 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Sleep" "', argument " "1"" of type '" "double""'");
    } 
    arg1 = static_cast< double >(val1);
    Ferris::Time::Sleep(arg1);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_setDefaultTimeFormat) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: setDefaultTimeFormat(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "setDefaultTimeFormat" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setDefaultTimeFormat" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    Ferris::Time::setDefaultTimeFormat((std::string const &)*arg1);
    ST(argvi) = sv_newmortal();
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_getDefaultTimeFormat) {
  {
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: getDefaultTimeFormat();");
    }
    result = Ferris::Time::getDefaultTimeFormat();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_toTimeString__SWIG_0) {
  {
    time_t arg1 ;
    std::string arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: toTimeString(time_t,desired_format);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_time_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "toTimeString" "', argument " "1"" of type '" "time_t""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "toTimeString" "', argument " "1"" of type '" "time_t""'");
      } else {
        arg1 = *(reinterpret_cast< time_t * >(argp1));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "toTimeString" "', argument " "2"" of type '" "std::string const""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = Ferris::Time::toTimeString(arg1,arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_toTimeString__SWIG_1) {
  {
    time_t arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: toTimeString(time_t);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_time_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "toTimeString" "', argument " "1"" of type '" "time_t""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "toTimeString" "', argument " "1"" of type '" "time_t""'");
      } else {
        arg1 = *(reinterpret_cast< time_t * >(argp1));
      }
    }
    result = Ferris::Time::toTimeString(arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_toTimeString) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_time_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_time_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_toTimeString__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_toTimeString__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'toTimeString'");
  XSRETURN(0);
}


XS(_wrap_toHMSString__SWIG_0) {
  {
    int arg1 ;
    bool arg2 ;
    int val1 ;
    int ecode1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: toHMSString(v,canOmitMinutes);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "toHMSString" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "toHMSString" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = Ferris::Time::toHMSString(arg1,arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_toHMSString__SWIG_1) {
  {
    int arg1 ;
    int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: toHMSString(v);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "toHMSString" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    result = Ferris::Time::toHMSString(arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_toHMSString) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_toHMSString__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_toHMSString__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'toHMSString'");
  XSRETURN(0);
}


XS(_wrap_ParseRelativeTimeString__SWIG_0) {
  {
    std::string *arg1 = 0 ;
    time_t arg2 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ParseRelativeTimeString(s,relv);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ParseRelativeTimeString" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseRelativeTimeString" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_time_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ParseRelativeTimeString" "', argument " "2"" of type '" "time_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseRelativeTimeString" "', argument " "2"" of type '" "time_t""'");
      } else {
        arg2 = *(reinterpret_cast< time_t * >(argp2));
      }
    }
    result = Ferris::Time::ParseRelativeTimeString((std::string const &)*arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_ParseRelativeTimeString__SWIG_1) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ParseRelativeTimeString(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ParseRelativeTimeString" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseRelativeTimeString" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::Time::ParseRelativeTimeString((std::string const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_ParseRelativeTimeString) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_time_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ParseRelativeTimeString__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ParseRelativeTimeString__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'ParseRelativeTimeString'");
  XSRETURN(0);
}


XS(_wrap_new_Benchmark__SWIG_0) {
  {
    std::string *arg1 = 0 ;
    bool arg2 ;
    int res1 = SWIG_OLDOBJ ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    Ferris::Time::Benchmark *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_Benchmark(name,startAutomatically);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Benchmark" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Benchmark" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Benchmark" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (Ferris::Time::Benchmark *)new Ferris::Time::Benchmark((std::string const &)*arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Time__Benchmark, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_Benchmark__SWIG_1) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::Time::Benchmark *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_Benchmark(name);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Benchmark" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Benchmark" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = (Ferris::Time::Benchmark *)new Ferris::Time::Benchmark((std::string const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Time__Benchmark, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_new_Benchmark) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_Benchmark__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_Benchmark__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_Benchmark'");
  XSRETURN(0);
}


XS(_wrap_delete_Benchmark) {
  {
    Ferris::Time::Benchmark *arg1 = (Ferris::Time::Benchmark *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_Benchmark(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Time__Benchmark, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Benchmark" "', argument " "1"" of type '" "Ferris::Time::Benchmark *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Time::Benchmark * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Benchmark_start) {
  {
    Ferris::Time::Benchmark *arg1 = (Ferris::Time::Benchmark *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Benchmark_start(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Time__Benchmark, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Benchmark_start" "', argument " "1"" of type '" "Ferris::Time::Benchmark *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Time::Benchmark * >(argp1);
    (arg1)->start();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Benchmark_stop) {
  {
    Ferris::Time::Benchmark *arg1 = (Ferris::Time::Benchmark *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Benchmark_stop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Time__Benchmark, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Benchmark_stop" "', argument " "1"" of type '" "Ferris::Time::Benchmark *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Time::Benchmark * >(argp1);
    (arg1)->stop();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Benchmark_print) {
  {
    Ferris::Time::Benchmark *arg1 = (Ferris::Time::Benchmark *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Benchmark_print(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Time__Benchmark, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Benchmark_print" "', argument " "1"" of type '" "Ferris::Time::Benchmark *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Time::Benchmark * >(argp1);
    (arg1)->print();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Benchmark_getElapsedTime) {
  {
    Ferris::Time::Benchmark *arg1 = (Ferris::Time::Benchmark *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    float result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Benchmark_getElapsedTime(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Time__Benchmark, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Benchmark_getElapsedTime" "', argument " "1"" of type '" "Ferris::Time::Benchmark *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Time::Benchmark * >(argp1);
    result = (float)(arg1)->getElapsedTime();
    ST(argvi) = SWIG_From_float  SWIG_PERL_CALL_ARGS_1(static_cast< float >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Benchmark_setOutputStream) {
  {
    Ferris::Time::Benchmark *arg1 = (Ferris::Time::Benchmark *) 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Benchmark_setOutputStream(self,oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Time__Benchmark, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Benchmark_setOutputStream" "', argument " "1"" of type '" "Ferris::Time::Benchmark *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Time::Benchmark * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Benchmark_setOutputStream" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Benchmark_setOutputStream" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    (arg1)->setOutputStream(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_pread) {
  {
    Ferris::fh_istream *arg1 = 0 ;
    size_t arg2 ;
    size_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    size_t val2 ;
    int ecode2 = 0 ;
    size_t val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: pread(iss,count,offset);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pread" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pread" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_istream * >(argp1);
    ecode2 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pread" "', argument " "2"" of type '" "size_t""'");
    } 
    arg2 = static_cast< size_t >(val2);
    ecode3 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pread" "', argument " "3"" of type '" "size_t""'");
    } 
    arg3 = static_cast< size_t >(val3);
    result = Ferris::Bindings::pread(*arg1,arg2,arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_preadio) {
  {
    Ferris::fh_iostream *arg1 = 0 ;
    size_t arg2 ;
    size_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    size_t val2 ;
    int ecode2 = 0 ;
    size_t val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: preadio(iss,count,offset);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "preadio" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "preadio" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_iostream * >(argp1);
    ecode2 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "preadio" "', argument " "2"" of type '" "size_t""'");
    } 
    arg2 = static_cast< size_t >(val2);
    ecode3 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "preadio" "', argument " "3"" of type '" "size_t""'");
    } 
    arg3 = static_cast< size_t >(val3);
    result = Ferris::Bindings::preadio(*arg1,arg2,arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_readline) {
  {
    Ferris::fh_iostream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: readline(iss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "readline" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "readline" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_iostream * >(argp1);
    result = Ferris::Bindings::readline(*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_pwrite) {
  {
    Ferris::fh_iostream *arg1 = 0 ;
    std::string *arg2 = 0 ;
    size_t arg3 ;
    size_t arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    size_t val3 ;
    int ecode3 = 0 ;
    size_t val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: pwrite(oss,str,count,offset);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pwrite" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pwrite" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_iostream * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pwrite" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pwrite" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pwrite" "', argument " "3"" of type '" "size_t""'");
    } 
    arg3 = static_cast< size_t >(val3);
    ecode4 = SWIG_AsVal_size_t SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pwrite" "', argument " "4"" of type '" "size_t""'");
    } 
    arg4 = static_cast< size_t >(val4);
    result = Ferris::Bindings::pwrite(*arg1,(std::string const &)*arg2,arg3,arg4);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ferriswrite) {
  {
    Ferris::fh_iostream *arg1 = 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ferriswrite(oss,str);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ferriswrite" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ferriswrite" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_iostream * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ferriswrite" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ferriswrite" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = Ferris::Bindings::ferriswrite(*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_fsync) {
  {
    Ferris::fh_iostream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: fsync(oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "fsync" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "fsync" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_iostream * >(argp1);
    Ferris::Bindings::fsync(*arg1);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_tellgi) {
  {
    Ferris::fh_istream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: tellgi(iss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tellgi" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tellgi" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_istream * >(argp1);
    result = Ferris::Bindings::tellgi(*arg1);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_tellgio) {
  {
    Ferris::fh_iostream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: tellgio(oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tellgio" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tellgio" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_iostream * >(argp1);
    result = Ferris::Bindings::tellgio(*arg1);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_tellp) {
  {
    Ferris::fh_iostream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    size_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: tellp(oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tellp" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tellp" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_iostream * >(argp1);
    result = Ferris::Bindings::tellp(*arg1);
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_seekgio) {
  {
    Ferris::fh_iostream *arg1 = 0 ;
    long arg2 ;
    int arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    long val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: seekgio(oss,offset,whence);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "seekgio" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "seekgio" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_iostream * >(argp1);
    ecode2 = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "seekgio" "', argument " "2"" of type '" "long""'");
    } 
    arg2 = static_cast< long >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "seekgio" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    Ferris::Bindings::seekgio(*arg1,arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_seekp) {
  {
    Ferris::fh_iostream *arg1 = 0 ;
    long arg2 ;
    int arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    long val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: seekp(oss,offset,whence);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "seekp" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "seekp" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_iostream * >(argp1);
    ecode2 = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "seekp" "', argument " "2"" of type '" "long""'");
    } 
    arg2 = static_cast< long >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "seekp" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    Ferris::Bindings::seekp(*arg1,arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_goodi) {
  {
    Ferris::fh_istream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: goodi(iss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "goodi" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "goodi" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_istream * >(argp1);
    result = (bool)Ferris::Bindings::goodi(*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_goodio) {
  {
    Ferris::fh_iostream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: goodio(oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "goodio" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "goodio" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_iostream * >(argp1);
    result = (bool)Ferris::Bindings::goodio(*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_eofi) {
  {
    Ferris::fh_istream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: eofi(iss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "eofi" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "eofi" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_istream * >(argp1);
    result = (bool)Ferris::Bindings::eofi(*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_eofio) {
  {
    Ferris::fh_iostream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: eofio(oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "eofio" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "eofio" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_iostream * >(argp1);
    result = (bool)Ferris::Bindings::eofio(*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_get_ios_in) {
  {
    int argvi = 0;
    Ferris::ferris_ios::openmode result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: get_ios_in();");
    }
    result = (Ferris::ferris_ios::openmode)Ferris::Bindings::get_ios_in();
    ST(argvi) = SWIG_From_unsigned_SS_long_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long long >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_get_ios_out) {
  {
    int argvi = 0;
    Ferris::ferris_ios::openmode result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: get_ios_out();");
    }
    result = (Ferris::ferris_ios::openmode)Ferris::Bindings::get_ios_out();
    ST(argvi) = SWIG_From_unsigned_SS_long_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long long >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_get_ios_trunc) {
  {
    int argvi = 0;
    Ferris::ferris_ios::openmode result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: get_ios_trunc();");
    }
    result = (Ferris::ferris_ios::openmode)Ferris::Bindings::get_ios_trunc();
    ST(argvi) = SWIG_From_unsigned_SS_long_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long long >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_get_ios_ate) {
  {
    int argvi = 0;
    Ferris::ferris_ios::openmode result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: get_ios_ate();");
    }
    result = (Ferris::ferris_ios::openmode)Ferris::Bindings::get_ios_ate();
    ST(argvi) = SWIG_From_unsigned_SS_long_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long long >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_get_ios_app) {
  {
    int argvi = 0;
    Ferris::ferris_ios::openmode result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: get_ios_app();");
    }
    result = (Ferris::ferris_ios::openmode)Ferris::Bindings::get_ios_app();
    ST(argvi) = SWIG_From_unsigned_SS_long_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long long >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_get_ios_beg) {
  {
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: get_ios_beg();");
    }
    result = (int)Ferris::Bindings::get_ios_beg();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_get_ios_cur) {
  {
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: get_ios_cur();");
    }
    result = (int)Ferris::Bindings::get_ios_cur();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_get_ios_end) {
  {
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: get_ios_end();");
    }
    result = (int)Ferris::Bindings::get_ios_end();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_fireCloseSig) {
  {
    Ferris::fh_iostream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: fireCloseSig(oss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "fireCloseSig" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "fireCloseSig" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_iostream * >(argp1);
    Ferris::Bindings::fireCloseSig(*arg1);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_getAgentNames) {
  {
    int argvi = 0;
    Ferris::stringlist_t *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: getAgentNames();");
    }
    result = (Ferris::stringlist_t *) &Ferris::AI::getAgentNames();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_std__string_t, 0 | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_getAgent) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::AI::Agent,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: getAgent(agentName);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getAgent" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getAgent" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::AI::getAgent((std::string const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::AI::fh_agent(static_cast< const Ferris::AI::fh_agent& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__AI__Agent_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_getCompleteAgent) {
  {
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::AI::Agent,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: getCompleteAgent();");
    }
    result = Ferris::AI::getCompleteAgent();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::AI::fh_agent(static_cast< const Ferris::AI::fh_agent& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__AI__Agent_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_eraseAgent) {
  {
    SwigValueWrapper< Loki::SmartPtr< Ferris::AI::Agent,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: eraseAgent(d);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Loki__SmartPtrT_Ferris__AI__Agent_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "eraseAgent" "', argument " "1"" of type '" "Ferris::AI::fh_agent""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "eraseAgent" "', argument " "1"" of type '" "Ferris::AI::fh_agent""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::AI::fh_agent * >(argp1));
      }
    }
    Ferris::AI::eraseAgent(arg1);
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_getBinaryAgentImplemenationNames) {
  {
    int argvi = 0;
    Ferris::stringlist_t *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: getBinaryAgentImplemenationNames();");
    }
    result = (Ferris::stringlist_t *) &Ferris::AI::getBinaryAgentImplemenationNames();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_std__string_t, 0 | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_createBinaryAgent) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    Ferris::fh_emblem arg4 ;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > arg5 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 ;
    int res4 = 0 ;
    void *argp5 ;
    int res5 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::AI::Agent,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: createBinaryAgent(agentName,agentImplemenationName,stateDir,em,pers);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "createBinaryAgent" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createBinaryAgent" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "createBinaryAgent" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createBinaryAgent" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "createBinaryAgent" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createBinaryAgent" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    {
      res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "createBinaryAgent" "', argument " "4"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp4) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createBinaryAgent" "', argument " "4"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg4 = *(reinterpret_cast< Ferris::fh_emblem * >(argp4));
      }
    }
    {
      res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,  0 );
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "createBinaryAgent" "', argument " "5"" of type '" "Ferris::fh_personality""'"); 
      }  
      if (!argp5) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createBinaryAgent" "', argument " "5"" of type '" "Ferris::fh_personality""'");
      } else {
        arg5 = *(reinterpret_cast< Ferris::fh_personality * >(argp5));
      }
    }
    result = Ferris::AI::createBinaryAgent((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::AI::fh_agent(static_cast< const Ferris::AI::fh_agent& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__AI__Agent_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_Agent_getUUID) {
  {
    Ferris::AI::Agent *arg1 = (Ferris::AI::Agent *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Agent_getUUID(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__AI__Agent, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Agent_getUUID" "', argument " "1"" of type '" "Ferris::AI::Agent *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::AI::Agent * >(argp1);
    result = (arg1)->getUUID();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Agent_getName) {
  {
    Ferris::AI::Agent *arg1 = (Ferris::AI::Agent *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Agent_getName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__AI__Agent, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Agent_getName" "', argument " "1"" of type '" "Ferris::AI::Agent *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::AI::Agent * >(argp1);
    result = (arg1)->getName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Agent_setName) {
  {
    Ferris::AI::Agent *arg1 = (Ferris::AI::Agent *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Agent_setName(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__AI__Agent, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Agent_setName" "', argument " "1"" of type '" "Ferris::AI::Agent *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::AI::Agent * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Agent_setName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Agent_setName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->setName((std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Agent_getEmblem) {
  {
    Ferris::AI::Agent *arg1 = (Ferris::AI::Agent *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::fh_emblem result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Agent_getEmblem(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__AI__Agent, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Agent_getEmblem" "', argument " "1"" of type '" "Ferris::AI::Agent *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::AI::Agent * >(argp1);
    result = (arg1)->getEmblem();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_emblem(static_cast< const Ferris::fh_emblem& >(result))), SWIGTYPE_p_Ferris__fh_emblem, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Agent_setEmblem) {
  {
    Ferris::AI::Agent *arg1 = (Ferris::AI::Agent *) 0 ;
    Ferris::fh_emblem arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Agent_setEmblem(self,em);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__AI__Agent, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Agent_setEmblem" "', argument " "1"" of type '" "Ferris::AI::Agent *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::AI::Agent * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Agent_setEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Agent_setEmblem" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    (arg1)->setEmblem(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Agent_allowsManyEmblems) {
  {
    Ferris::AI::Agent *arg1 = (Ferris::AI::Agent *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Agent_allowsManyEmblems(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__AI__Agent, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Agent_allowsManyEmblems" "', argument " "1"" of type '" "Ferris::AI::Agent *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::AI::Agent * >(argp1);
    result = (bool)(arg1)->allowsManyEmblems();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Agent_getEmblems) {
  {
    Ferris::AI::Agent *arg1 = (Ferris::AI::Agent *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< Ferris::fh_emblem > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Agent_getEmblems(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__AI__Agent, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Agent_getEmblems" "', argument " "1"" of type '" "Ferris::AI::Agent *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::AI::Agent * >(argp1);
    result = (arg1)->getEmblems();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblems_t(static_cast< const Ferris::emblems_t& >(result))), SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Agent_setEmblems) {
  {
    Ferris::AI::Agent *arg1 = (Ferris::AI::Agent *) 0 ;
    Ferris::emblems_t *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Agent_setEmblems(self,el);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__AI__Agent, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Agent_setEmblems" "', argument " "1"" of type '" "Ferris::AI::Agent *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::AI::Agent * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__listT_Ferris__fh_emblem_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Agent_setEmblems" "', argument " "2"" of type '" "Ferris::emblems_t const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Agent_setEmblems" "', argument " "2"" of type '" "Ferris::emblems_t const &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::emblems_t * >(argp2);
    (arg1)->setEmblems((Ferris::emblems_t const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Agent_getPersonality) {
  {
    Ferris::AI::Agent *arg1 = (Ferris::AI::Agent *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Agent_getPersonality(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__AI__Agent, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Agent_getPersonality" "', argument " "1"" of type '" "Ferris::AI::Agent *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::AI::Agent * >(argp1);
    result = (arg1)->getPersonality();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_personality(static_cast< const Ferris::fh_personality& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Agent_setPersonality) {
  {
    Ferris::AI::Agent *arg1 = (Ferris::AI::Agent *) 0 ;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Agent_setPersonality(self,pers);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__AI__Agent, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Agent_setPersonality" "', argument " "1"" of type '" "Ferris::AI::Agent *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::AI::Agent * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Agent_setPersonality" "', argument " "2"" of type '" "Ferris::fh_personality""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Agent_setPersonality" "', argument " "2"" of type '" "Ferris::fh_personality""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_personality * >(argp2));
      }
    }
    (arg1)->setPersonality(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Agent_getAgentImplemenationName) {
  {
    Ferris::AI::Agent *arg1 = (Ferris::AI::Agent *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Agent_getAgentImplemenationName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__AI__Agent, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Agent_getAgentImplemenationName" "', argument " "1"" of type '" "Ferris::AI::Agent *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::AI::Agent * >(argp1);
    result = (arg1)->getAgentImplemenationName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Agent_setAgentImplemenationName) {
  {
    Ferris::AI::Agent *arg1 = (Ferris::AI::Agent *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Agent_setAgentImplemenationName(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__AI__Agent, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Agent_setAgentImplemenationName" "', argument " "1"" of type '" "Ferris::AI::Agent *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::AI::Agent * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Agent_setAgentImplemenationName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Agent_setAgentImplemenationName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->setAgentImplemenationName((std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Agent_getStateDir) {
  {
    Ferris::AI::Agent *arg1 = (Ferris::AI::Agent *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Agent_getStateDir(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__AI__Agent, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Agent_getStateDir" "', argument " "1"" of type '" "Ferris::AI::Agent *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::AI::Agent * >(argp1);
    result = (arg1)->getStateDir();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Agent_setStateDir) {
  {
    Ferris::AI::Agent *arg1 = (Ferris::AI::Agent *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Agent_setStateDir(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__AI__Agent, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Agent_setStateDir" "', argument " "1"" of type '" "Ferris::AI::Agent *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::AI::Agent * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Agent_setStateDir" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Agent_setStateDir" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->setStateDir((std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_Agent_getAlternateImplementationNames) {
  {
    Ferris::AI::Agent *arg1 = (Ferris::AI::Agent *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< std::string > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Agent_getAlternateImplementationNames(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__AI__Agent, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Agent_getAlternateImplementationNames" "', argument " "1"" of type '" "Ferris::AI::Agent *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::AI::Agent * >(argp1);
    result = (arg1)->getAlternateImplementationNames();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::stringlist_t(static_cast< const Ferris::stringlist_t& >(result))), SWIGTYPE_p_std__listT_std__string_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Agent_addTrainingExample) {
  {
    Ferris::AI::Agent *arg1 = (Ferris::AI::Agent *) 0 ;
    Ferris::fh_context arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Agent_addTrainingExample(self,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__AI__Agent, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Agent_addTrainingExample" "', argument " "1"" of type '" "Ferris::AI::Agent *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::AI::Agent * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Agent_addTrainingExample" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Agent_addTrainingExample" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    (arg1)->addTrainingExample(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Agent_train) {
  {
    Ferris::AI::Agent *arg1 = (Ferris::AI::Agent *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Agent_train(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__AI__Agent, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Agent_train" "', argument " "1"" of type '" "Ferris::AI::Agent *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::AI::Agent * >(argp1);
    (arg1)->train();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Agent_classify) {
  {
    Ferris::AI::Agent *arg1 = (Ferris::AI::Agent *) 0 ;
    Ferris::fh_context arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Agent_classify(self,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__AI__Agent, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Agent_classify" "', argument " "1"" of type '" "Ferris::AI::Agent *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::AI::Agent * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Agent_classify" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Agent_classify" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    (arg1)->classify(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_fh_emblem_less___call__) {
  {
    Ferris::fh_emblem_less *arg1 = (Ferris::fh_emblem_less *) 0 ;
    Ferris::fh_emblem arg2 ;
    Ferris::fh_emblem arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: fh_emblem_less___call__(self,k1,k2);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__fh_emblem_less, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "fh_emblem_less___call__" "', argument " "1"" of type '" "Ferris::fh_emblem_less *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_emblem_less * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "fh_emblem_less___call__" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "fh_emblem_less___call__" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "fh_emblem_less___call__" "', argument " "3"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "fh_emblem_less___call__" "', argument " "3"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg3 = *(reinterpret_cast< Ferris::fh_emblem * >(argp3));
      }
    }
    result = (bool)(arg1)->operator ()(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_contains__SWIG_2) {
  {
    Ferris::emblems_t *arg1 = 0 ;
    Ferris::fh_emblem arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: contains(el,em);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__listT_Ferris__fh_emblem_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "contains" "', argument " "1"" of type '" "Ferris::emblems_t &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "contains" "', argument " "1"" of type '" "Ferris::emblems_t &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::emblems_t * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "contains" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "contains" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    result = (bool)Ferris::contains(*arg1,arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_contains) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__listT_Ferris__fh_emblem_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_emblem, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_contains__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_contains__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'contains'");
  XSRETURN(0);
}


XS(_wrap_setSkipLoadingEmblems) {
  {
    bool arg1 ;
    bool val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: setSkipLoadingEmblems(v);");
    }
    ecode1 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "setSkipLoadingEmblems" "', argument " "1"" of type '" "bool""'");
    } 
    arg1 = static_cast< bool >(val1);
    result = (bool)Ferris::setSkipLoadingEmblems(arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_link) {
  {
    Ferris::fh_emblem arg1 ;
    Ferris::fh_emblem arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: link(parent,child);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "link" "', argument " "1"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "link" "', argument " "1"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_emblem * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "link" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "link" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    Ferris::link(arg1,arg2);
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_unlink) {
  {
    Ferris::fh_emblem arg1 ;
    Ferris::fh_emblem arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: unlink(parent,child);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "unlink" "', argument " "1"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "unlink" "', argument " "1"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_emblem * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "unlink" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "unlink" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    Ferris::unlink(arg1,arg2);
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_UseGetNextID) {
  {
    Ferris::Emblem *arg1 = (Ferris::Emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::emblemID_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: UseGetNextID(e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UseGetNextID" "', argument " "1"" of type '" "Ferris::Emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Emblem * >(argp1);
    result = Ferris::UseGetNextID(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblemID_t(static_cast< const Ferris::emblemID_t& >(result))), SWIGTYPE_p_guint32, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_UseGetNextID_EAOrdering) {
  {
    Ferris::Emblem *arg1 = (Ferris::Emblem *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::emblemID_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: UseGetNextID_EAOrdering(e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Emblem, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UseGetNextID_EAOrdering" "', argument " "1"" of type '" "Ferris::Emblem *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Emblem * >(argp1);
    result = Ferris::UseGetNextID_EAOrdering(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblemID_t(static_cast< const Ferris::emblemID_t& >(result))), SWIGTYPE_p_guint32, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_setDefaultEtagere__SWIG_0) {
  {
    Ferris::fh_etagere arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: setDefaultEtagere(et);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_etagere,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "setDefaultEtagere" "', argument " "1"" of type '" "Ferris::fh_etagere""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setDefaultEtagere" "', argument " "1"" of type '" "Ferris::fh_etagere""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_etagere * >(argp1));
      }
    }
    Ferris::Factory::setDefaultEtagere(arg1);
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_setDefaultEtagere__SWIG_1) {
  {
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: setDefaultEtagere();");
    }
    Ferris::Factory::setDefaultEtagere();
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_setDefaultEtagere) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_etagere, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_setDefaultEtagere__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_setDefaultEtagere__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'setDefaultEtagere'");
  XSRETURN(0);
}


XS(_wrap_getEtagere) {
  {
    int argvi = 0;
    Ferris::fh_etagere result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: getEtagere();");
    }
    result = Ferris::Factory::getEtagere();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_etagere(static_cast< const Ferris::fh_etagere& >(result))), SWIGTYPE_p_Ferris__fh_etagere, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_makeEtagere) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_etagere result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: makeEtagere(path);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "makeEtagere" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "makeEtagere" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::Factory::makeEtagere((std::string const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_etagere(static_cast< const Ferris::fh_etagere& >(result))), SWIGTYPE_p_Ferris__fh_etagere, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_new_Times) {
  {
    int argvi = 0;
    Ferris::Times *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_Times();");
    }
    result = (Ferris::Times *)new Ferris::Times();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Times, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_Times_setATime__SWIG_0) {
  {
    Ferris::Times *arg1 = (Ferris::Times *) 0 ;
    time_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Times_setATime(self,t);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Times, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Times_setATime" "', argument " "1"" of type '" "Ferris::Times *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Times * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_time_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Times_setATime" "', argument " "2"" of type '" "time_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Times_setATime" "', argument " "2"" of type '" "time_t""'");
      } else {
        arg2 = *(reinterpret_cast< time_t * >(argp2));
      }
    }
    (arg1)->setATime(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Times_setATime__SWIG_1) {
  {
    Ferris::Times *arg1 = (Ferris::Times *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Times_setATime(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Times, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Times_setATime" "', argument " "1"" of type '" "Ferris::Times *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Times * >(argp1);
    (arg1)->setATime();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Times_setATime) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Times, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Times, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_time_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Times_setATime__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Times_setATime__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Times_setATime'");
  XSRETURN(0);
}


XS(_wrap_Times_setMTime__SWIG_0) {
  {
    Ferris::Times *arg1 = (Ferris::Times *) 0 ;
    time_t arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Times_setMTime(self,t);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Times, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Times_setMTime" "', argument " "1"" of type '" "Ferris::Times *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Times * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_time_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Times_setMTime" "', argument " "2"" of type '" "time_t""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Times_setMTime" "', argument " "2"" of type '" "time_t""'");
      } else {
        arg2 = *(reinterpret_cast< time_t * >(argp2));
      }
    }
    (arg1)->setMTime(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Times_setMTime__SWIG_1) {
  {
    Ferris::Times *arg1 = (Ferris::Times *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Times_setMTime(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Times, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Times_setMTime" "', argument " "1"" of type '" "Ferris::Times *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Times * >(argp1);
    (arg1)->setMTime();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Times_setMTime) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Times, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Times, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_time_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Times_setMTime__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Times_setMTime__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'Times_setMTime'");
  XSRETURN(0);
}


XS(_wrap_Times_touchATime) {
  {
    Ferris::Times *arg1 = (Ferris::Times *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Times_touchATime(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Times, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Times_touchATime" "', argument " "1"" of type '" "Ferris::Times *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Times * >(argp1);
    (arg1)->touchATime();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Times_touchMTime) {
  {
    Ferris::Times *arg1 = (Ferris::Times *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Times_touchMTime(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Times, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Times_touchMTime" "', argument " "1"" of type '" "Ferris::Times *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Times * >(argp1);
    (arg1)->touchMTime();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Times_getATime) {
  {
    Ferris::Times *arg1 = (Ferris::Times *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Times_getATime(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Times, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Times_getATime" "', argument " "1"" of type '" "Ferris::Times *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Times * >(argp1);
    result = (arg1)->getATime();
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Times_getMTime) {
  {
    Ferris::Times *arg1 = (Ferris::Times *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Times_getMTime(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Times, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Times_getMTime" "', argument " "1"" of type '" "Ferris::Times *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Times * >(argp1);
    result = (arg1)->getMTime();
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_emblemListToEAQuery__SWIG_0) {
  {
    Ferris::emblemset_t *arg1 = 0 ;
    char arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    char val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: emblemListToEAQuery(el,combineOpcode);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "emblemListToEAQuery" "', argument " "1"" of type '" "Ferris::emblemset_t &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "emblemListToEAQuery" "', argument " "1"" of type '" "Ferris::emblemset_t &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::emblemset_t * >(argp1);
    ecode2 = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "emblemListToEAQuery" "', argument " "2"" of type '" "char""'");
    } 
    arg2 = static_cast< char >(val2);
    result = Ferris::emblemListToEAQuery(*arg1,arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_emblemListToEAQuery__SWIG_1) {
  {
    Ferris::emblemset_t *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: emblemListToEAQuery(el);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "emblemListToEAQuery" "', argument " "1"" of type '" "Ferris::emblemset_t &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "emblemListToEAQuery" "', argument " "1"" of type '" "Ferris::emblemset_t &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::emblemset_t * >(argp1);
    result = Ferris::emblemListToEAQuery(*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_emblemListToEAQuery) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_emblemListToEAQuery__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_emblemListToEAQuery__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'emblemListToEAQuery'");
  XSRETURN(0);
}


XS(_wrap_DRangeToKiloMeters) {
  {
    double arg1 ;
    double val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    double result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: DRangeToKiloMeters(d);");
    }
    ecode1 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DRangeToKiloMeters" "', argument " "1"" of type '" "double""'");
    } 
    arg1 = static_cast< double >(val1);
    result = (double)Ferris::DRangeToKiloMeters(arg1);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_KiloMetersToDRange) {
  {
    double arg1 ;
    double val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    double result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: KiloMetersToDRange(d);");
    }
    ecode1 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "KiloMetersToDRange" "', argument " "1"" of type '" "double""'");
    } 
    arg1 = static_cast< double >(val1);
    result = (double)Ferris::KiloMetersToDRange(arg1);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_getEmblemsNear__SWIG_0) {
  {
    Ferris::emblemset_t *arg1 = 0 ;
    Ferris::fh_emblem arg2 ;
    double arg3 ;
    Ferris::fh_etagere arg4 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    void *argp4 ;
    int res4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    Ferris::emblemset_t *result = 0 ;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: getEmblemsNear(result,em,kmrange,et,ShowDownSet);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getEmblemsNear" "', argument " "1"" of type '" "Ferris::emblemset_t &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getEmblemsNear" "', argument " "1"" of type '" "Ferris::emblemset_t &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::emblemset_t * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getEmblemsNear" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getEmblemsNear" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "getEmblemsNear" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    {
      res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_Ferris__fh_etagere,  0 );
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "getEmblemsNear" "', argument " "4"" of type '" "Ferris::fh_etagere""'"); 
      }  
      if (!argp4) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getEmblemsNear" "', argument " "4"" of type '" "Ferris::fh_etagere""'");
      } else {
        arg4 = *(reinterpret_cast< Ferris::fh_etagere * >(argp4));
      }
    }
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "getEmblemsNear" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    result = (Ferris::emblemset_t *) &Ferris::getEmblemsNear(*arg1,arg2,arg3,arg4,arg5);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t, 0 | 0); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_getEmblemsNear__SWIG_1) {
  {
    Ferris::emblemset_t *arg1 = 0 ;
    Ferris::fh_emblem arg2 ;
    double arg3 ;
    Ferris::fh_etagere arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    void *argp4 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::emblemset_t *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: getEmblemsNear(result,em,kmrange,et);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getEmblemsNear" "', argument " "1"" of type '" "Ferris::emblemset_t &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getEmblemsNear" "', argument " "1"" of type '" "Ferris::emblemset_t &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::emblemset_t * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getEmblemsNear" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getEmblemsNear" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "getEmblemsNear" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    {
      res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_Ferris__fh_etagere,  0 );
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "getEmblemsNear" "', argument " "4"" of type '" "Ferris::fh_etagere""'"); 
      }  
      if (!argp4) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getEmblemsNear" "', argument " "4"" of type '" "Ferris::fh_etagere""'");
      } else {
        arg4 = *(reinterpret_cast< Ferris::fh_etagere * >(argp4));
      }
    }
    result = (Ferris::emblemset_t *) &Ferris::getEmblemsNear(*arg1,arg2,arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t, 0 | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_getEmblemsNear__SWIG_2) {
  {
    Ferris::emblemset_t *arg1 = 0 ;
    Ferris::fh_emblem arg2 ;
    double arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    Ferris::emblemset_t *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: getEmblemsNear(result,em,kmrange);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getEmblemsNear" "', argument " "1"" of type '" "Ferris::emblemset_t &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getEmblemsNear" "', argument " "1"" of type '" "Ferris::emblemset_t &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::emblemset_t * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_emblem,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getEmblemsNear" "', argument " "2"" of type '" "Ferris::fh_emblem""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getEmblemsNear" "', argument " "2"" of type '" "Ferris::fh_emblem""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_emblem * >(argp2));
      }
    }
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "getEmblemsNear" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    result = (Ferris::emblemset_t *) &Ferris::getEmblemsNear(*arg1,arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t, 0 | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_getEmblemsNear) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_emblem, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_emblem, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__fh_etagere, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_emblem, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__fh_etagere, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getEmblemsNear__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getEmblemsNear__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getEmblemsNear__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'getEmblemsNear'");
  XSRETURN(0);
}


XS(_wrap_delete_Personality) {
  {
    Ferris::Personality *arg1 = (Ferris::Personality *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_Personality(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Personality, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Personality" "', argument " "1"" of type '" "Ferris::Personality *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Personality * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Personality_getName) {
  {
    Ferris::Personality *arg1 = (Ferris::Personality *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Personality_getName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Personality, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Personality_getName" "', argument " "1"" of type '" "Ferris::Personality *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Personality * >(argp1);
    result = (arg1)->getName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Personality_getID) {
  {
    Ferris::Personality *arg1 = (Ferris::Personality *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::emblemID_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Personality_getID(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Personality, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Personality_getID" "', argument " "1"" of type '" "Ferris::Personality *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Personality * >(argp1);
    result = (arg1)->getID();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::emblemID_t(static_cast< const Ferris::emblemID_t& >(result))), SWIGTYPE_p_guint32, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_getCurrentUserPersonality__SWIG_0) {
  {
    Ferris::fh_etagere arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: getCurrentUserPersonality(et);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_etagere,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getCurrentUserPersonality" "', argument " "1"" of type '" "Ferris::fh_etagere""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getCurrentUserPersonality" "', argument " "1"" of type '" "Ferris::fh_etagere""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_etagere * >(argp1));
      }
    }
    result = Ferris::Factory::getCurrentUserPersonality(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_personality(static_cast< const Ferris::fh_personality& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_getCurrentUserPersonality__SWIG_1) {
  {
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: getCurrentUserPersonality();");
    }
    result = Ferris::Factory::getCurrentUserPersonality();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_personality(static_cast< const Ferris::fh_personality& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_getCurrentUserPersonality) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_etagere, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getCurrentUserPersonality__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getCurrentUserPersonality__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'getCurrentUserPersonality'");
  XSRETURN(0);
}


XS(_wrap_getGenericClassifierAgentPersonality__SWIG_0) {
  {
    Ferris::fh_etagere arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: getGenericClassifierAgentPersonality(et);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_etagere,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getGenericClassifierAgentPersonality" "', argument " "1"" of type '" "Ferris::fh_etagere""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getGenericClassifierAgentPersonality" "', argument " "1"" of type '" "Ferris::fh_etagere""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_etagere * >(argp1));
      }
    }
    result = Ferris::Factory::getGenericClassifierAgentPersonality(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_personality(static_cast< const Ferris::fh_personality& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_getGenericClassifierAgentPersonality__SWIG_1) {
  {
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: getGenericClassifierAgentPersonality();");
    }
    result = Ferris::Factory::getGenericClassifierAgentPersonality();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_personality(static_cast< const Ferris::fh_personality& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_getGenericClassifierAgentPersonality) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_etagere, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getGenericClassifierAgentPersonality__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getGenericClassifierAgentPersonality__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'getGenericClassifierAgentPersonality'");
  XSRETURN(0);
}


XS(_wrap_createPersonality__SWIG_0) {
  {
    Ferris::fh_etagere arg1 ;
    std::string *arg2 = 0 ;
    std::list< Ferris::fh_personality > *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: createPersonality(et,name,parents);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_etagere,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "createPersonality" "', argument " "1"" of type '" "Ferris::fh_etagere""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createPersonality" "', argument " "1"" of type '" "Ferris::fh_etagere""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_etagere * >(argp1));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "createPersonality" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createPersonality" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__listT_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "createPersonality" "', argument " "3"" of type '" "std::list< Ferris::fh_personality > const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createPersonality" "', argument " "3"" of type '" "std::list< Ferris::fh_personality > const &""'"); 
    }
    arg3 = reinterpret_cast< std::list< Ferris::fh_personality > * >(argp3);
    result = Ferris::Factory::createPersonality(arg1,(std::string const &)*arg2,(std::list< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_personality(static_cast< const Ferris::fh_personality& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_createPersonality__SWIG_1) {
  {
    std::string *arg1 = 0 ;
    std::list< Ferris::fh_personality > *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: createPersonality(name,parents);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "createPersonality" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createPersonality" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__listT_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "createPersonality" "', argument " "2"" of type '" "std::list< Ferris::fh_personality > const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createPersonality" "', argument " "2"" of type '" "std::list< Ferris::fh_personality > const &""'"); 
    }
    arg2 = reinterpret_cast< std::list< Ferris::fh_personality > * >(argp2);
    result = Ferris::Factory::createPersonality((std::string const &)*arg1,(std::list< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_personality(static_cast< const Ferris::fh_personality& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    SWIG_croak_null();
  }
}


XS(_wrap_createPersonality__SWIG_2) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: createPersonality(name);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "createPersonality" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createPersonality" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::Factory::createPersonality((std::string const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_personality(static_cast< const Ferris::fh_personality& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_createPersonality) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__listT_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_etagere, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__listT_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_createPersonality__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_createPersonality__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_createPersonality__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'createPersonality'");
  XSRETURN(0);
}


XS(_wrap_obtainPersonality__SWIG_0) {
  {
    Ferris::fh_etagere arg1 ;
    std::string *arg2 = 0 ;
    std::list< Ferris::fh_personality > *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: obtainPersonality(et,name,parents);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_etagere,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "obtainPersonality" "', argument " "1"" of type '" "Ferris::fh_etagere""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "obtainPersonality" "', argument " "1"" of type '" "Ferris::fh_etagere""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_etagere * >(argp1));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "obtainPersonality" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "obtainPersonality" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__listT_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "obtainPersonality" "', argument " "3"" of type '" "std::list< Ferris::fh_personality > const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "obtainPersonality" "', argument " "3"" of type '" "std::list< Ferris::fh_personality > const &""'"); 
    }
    arg3 = reinterpret_cast< std::list< Ferris::fh_personality > * >(argp3);
    result = Ferris::obtainPersonality(arg1,(std::string const &)*arg2,(std::list< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_personality(static_cast< const Ferris::fh_personality& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_obtainPersonality__SWIG_1) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: obtainPersonality(name);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "obtainPersonality" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "obtainPersonality" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::obtainPersonality((std::string const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_personality(static_cast< const Ferris::fh_personality& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_obtainPersonality__SWIG_2) {
  {
    Ferris::emblemID_t arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: obtainPersonality(id);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_guint32,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "obtainPersonality" "', argument " "1"" of type '" "Ferris::emblemID_t""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "obtainPersonality" "', argument " "1"" of type '" "Ferris::emblemID_t""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::emblemID_t * >(argp1));
      }
    }
    result = Ferris::obtainPersonality(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_personality(static_cast< const Ferris::fh_personality& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_obtainPersonality) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_guint32, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_etagere, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__listT_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_obtainPersonality__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_obtainPersonality__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_obtainPersonality__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'obtainPersonality'");
  XSRETURN(0);
}


XS(_wrap_findPersonality__SWIG_0) {
  {
    std::string *arg1 = 0 ;
    bool arg2 ;
    int res1 = SWIG_OLDOBJ ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: findPersonality(name,decend);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "findPersonality" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "findPersonality" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "findPersonality" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = Ferris::findPersonality((std::string const &)*arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_personality(static_cast< const Ferris::fh_personality& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    SWIG_croak_null();
  }
}


XS(_wrap_findPersonality__SWIG_1) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: findPersonality(name);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "findPersonality" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "findPersonality" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::findPersonality((std::string const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_personality(static_cast< const Ferris::fh_personality& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_findPersonality) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_findPersonality__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_findPersonality__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'findPersonality'");
  XSRETURN(0);
}


XS(_wrap_findAllPersonalities__SWIG_0) {
  {
    std::string *arg1 = 0 ;
    std::list< Ferris::fh_personality > *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: findAllPersonalities(name,parents);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "findAllPersonalities" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "findAllPersonalities" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__listT_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "findAllPersonalities" "', argument " "2"" of type '" "std::list< Ferris::fh_personality > const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "findAllPersonalities" "', argument " "2"" of type '" "std::list< Ferris::fh_personality > const &""'"); 
    }
    arg2 = reinterpret_cast< std::list< Ferris::fh_personality > * >(argp2);
    result = Ferris::findAllPersonalities((std::string const &)*arg1,(std::list< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new std::list< Ferris::fh_personality >(static_cast< const std::list< Ferris::fh_personality >& >(result))), SWIGTYPE_p_std__listT_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    SWIG_croak_null();
  }
}


XS(_wrap_findAllPersonalities__SWIG_1) {
  {
    int argvi = 0;
    SwigValueWrapper< std::list< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > > result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: findAllPersonalities();");
    }
    result = Ferris::findAllPersonalities();
    ST(argvi) = SWIG_NewPointerObj((new std::list< Ferris::fh_personality >(static_cast< const std::list< Ferris::fh_personality >& >(result))), SWIGTYPE_p_std__listT_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_findAllPersonalities) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__listT_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_findAllPersonalities__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_findAllPersonalities__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'findAllPersonalities'");
  XSRETURN(0);
}


XS(_wrap_isXFS__SWIG_0) {
  {
    int arg1 ;
    int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: isXFS(fd);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "isXFS" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    result = (bool)Ferris::isXFS(arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_isXFS__SWIG_1) {
  {
    Ferris::fh_context arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: isXFS(c);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "isXFS" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "isXFS" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    result = (bool)Ferris::isXFS(arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_isXFS__SWIG_2) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: isXFS(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "isXFS" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "isXFS" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = (bool)Ferris::isXFS((std::string const &)*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_isXFS) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_isXFS__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_isXFS__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_isXFS__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'isXFS'");
  XSRETURN(0);
}


XS(_wrap_PrefixTrimmerOps_match) {
  {
    PrefixTrimmerOps *arg1 = (PrefixTrimmerOps *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: PrefixTrimmerOps_match(self,s,code);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_PrefixTrimmerOps, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PrefixTrimmerOps_match" "', argument " "1"" of type '" "PrefixTrimmerOps *""'"); 
    }
    arg1 = reinterpret_cast< PrefixTrimmerOps * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PrefixTrimmerOps_match" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PrefixTrimmerOps_match" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PrefixTrimmerOps_match" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PrefixTrimmerOps_match" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->match((std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_PrefixTrimmerOps_trim) {
  {
    PrefixTrimmerOps *arg1 = (PrefixTrimmerOps *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: PrefixTrimmerOps_trim(self,s,code);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_PrefixTrimmerOps, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PrefixTrimmerOps_trim" "', argument " "1"" of type '" "PrefixTrimmerOps *""'"); 
    }
    arg1 = reinterpret_cast< PrefixTrimmerOps * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PrefixTrimmerOps_trim" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PrefixTrimmerOps_trim" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PrefixTrimmerOps_trim" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PrefixTrimmerOps_trim" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (arg1)->trim((std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_PostfixTrimmerOps_match) {
  {
    PostfixTrimmerOps *arg1 = (PostfixTrimmerOps *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: PostfixTrimmerOps_match(self,s,code);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_PostfixTrimmerOps, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PostfixTrimmerOps_match" "', argument " "1"" of type '" "PostfixTrimmerOps *""'"); 
    }
    arg1 = reinterpret_cast< PostfixTrimmerOps * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PostfixTrimmerOps_match" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PostfixTrimmerOps_match" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PostfixTrimmerOps_match" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PostfixTrimmerOps_match" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->match((std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_PostfixTrimmerOps_trim) {
  {
    PostfixTrimmerOps *arg1 = (PostfixTrimmerOps *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: PostfixTrimmerOps_trim(self,s,code);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_PostfixTrimmerOps, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PostfixTrimmerOps_trim" "', argument " "1"" of type '" "PostfixTrimmerOps *""'"); 
    }
    arg1 = reinterpret_cast< PostfixTrimmerOps * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PostfixTrimmerOps_trim" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PostfixTrimmerOps_trim" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PostfixTrimmerOps_trim" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PostfixTrimmerOps_trim" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (arg1)->trim((std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_delete_TrimmerBase) {
  {
    TrimmerBase *arg1 = (TrimmerBase *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_TrimmerBase(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_TrimmerBase, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TrimmerBase" "', argument " "1"" of type '" "TrimmerBase *""'"); 
    }
    arg1 = reinterpret_cast< TrimmerBase * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_TrimmerBase_push_back) {
  {
    TrimmerBase *arg1 = (TrimmerBase *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: TrimmerBase_push_back(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_TrimmerBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TrimmerBase_push_back" "', argument " "1"" of type '" "TrimmerBase *""'"); 
    }
    arg1 = reinterpret_cast< TrimmerBase * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TrimmerBase_push_back" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TrimmerBase_push_back" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->push_back((std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_TrimmerBase_clear) {
  {
    TrimmerBase *arg1 = (TrimmerBase *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: TrimmerBase_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_TrimmerBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TrimmerBase_clear" "', argument " "1"" of type '" "TrimmerBase *""'"); 
    }
    arg1 = reinterpret_cast< TrimmerBase * >(argp1);
    (arg1)->clear();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_TrimmerBase___call__) {
  {
    TrimmerBase *arg1 = (TrimmerBase *) 0 ;
    std::string arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: TrimmerBase___call__(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_TrimmerBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TrimmerBase___call__" "', argument " "1"" of type '" "TrimmerBase *""'"); 
    }
    arg1 = reinterpret_cast< TrimmerBase * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "TrimmerBase___call__" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = (arg1)->operator ()(arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_giStreamPosRAII) {
  {
    Ferris::fh_istream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::giStreamPosRAII *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_giStreamPosRAII(stream);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_giStreamPosRAII" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_giStreamPosRAII" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_istream * >(argp1);
    result = (Ferris::giStreamPosRAII *)new Ferris::giStreamPosRAII(*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__giStreamPosRAII, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_isCompressedContext) {
  {
    Ferris::fh_context arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: isCompressedContext(c);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "isCompressedContext" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "isCompressedContext" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    result = (bool)Ferris::isCompressedContext(arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_getNullConvertToCompressedChunkContextProgress_Sig) {
  {
    int argvi = 0;
    Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: getNullConvertToCompressedChunkContextProgress_Sig();");
    }
    result = (Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t *) &Ferris::Factory::getNullConvertToCompressedChunkContextProgress_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal4T_void_Ferris__fh_context_Ferris__fh_context_int_int_t, 0 | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_getCompressedChunkIOStream) {
  {
    Ferris::fh_context arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: getCompressedChunkIOStream(c);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getCompressedChunkIOStream" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getCompressedChunkIOStream" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    result = Ferris::Factory::getCompressedChunkIOStream(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_ConvertToCompressedChunkContext__SWIG_0) {
  {
    Ferris::fh_context arg1 ;
    Ferris::fh_context arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t *arg6 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    void *argp6 = 0 ;
    int res6 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: ConvertToCompressedChunkContext(c,target,blocksize,algo,compress_level,Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t &);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvertToCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertToCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvertToCompressedChunkContext" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertToCompressedChunkContext" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ConvertToCompressedChunkContext" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ConvertToCompressedChunkContext" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ConvertToCompressedChunkContext" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    res6 = SWIG_ConvertPtr(ST(5), &argp6, SWIGTYPE_p_sigc__signal4T_void_Ferris__fh_context_Ferris__fh_context_int_int_t,  0 );
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ConvertToCompressedChunkContext" "', argument " "6"" of type '" "Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t &""'"); 
    }
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertToCompressedChunkContext" "', argument " "6"" of type '" "Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t &""'"); 
    }
    arg6 = reinterpret_cast< Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t * >(argp6);
    Ferris::Factory::ConvertToCompressedChunkContext(arg1,arg2,arg3,arg4,arg5,*arg6);
    ST(argvi) = sv_newmortal();
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ConvertToCompressedChunkContext__SWIG_1) {
  {
    Ferris::fh_context arg1 ;
    Ferris::fh_context arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: ConvertToCompressedChunkContext(c,target,blocksize,algo,compress_level);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvertToCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertToCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvertToCompressedChunkContext" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertToCompressedChunkContext" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ConvertToCompressedChunkContext" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ConvertToCompressedChunkContext" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ConvertToCompressedChunkContext" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    Ferris::Factory::ConvertToCompressedChunkContext(arg1,arg2,arg3,arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ConvertToCompressedChunkContext__SWIG_2) {
  {
    Ferris::fh_context arg1 ;
    Ferris::fh_context arg2 ;
    int arg3 ;
    int arg4 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: ConvertToCompressedChunkContext(c,target,blocksize,algo);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvertToCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertToCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvertToCompressedChunkContext" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertToCompressedChunkContext" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ConvertToCompressedChunkContext" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ConvertToCompressedChunkContext" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    Ferris::Factory::ConvertToCompressedChunkContext(arg1,arg2,arg3,arg4);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ConvertToCompressedChunkContext__SWIG_3) {
  {
    Ferris::fh_context arg1 ;
    Ferris::fh_context arg2 ;
    int arg3 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: ConvertToCompressedChunkContext(c,target,blocksize);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvertToCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertToCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvertToCompressedChunkContext" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertToCompressedChunkContext" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ConvertToCompressedChunkContext" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    Ferris::Factory::ConvertToCompressedChunkContext(arg1,arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ConvertToCompressedChunkContext__SWIG_4) {
  {
    Ferris::fh_context arg1 ;
    Ferris::fh_context arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ConvertToCompressedChunkContext(c,target);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvertToCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertToCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvertToCompressedChunkContext" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertToCompressedChunkContext" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    Ferris::Factory::ConvertToCompressedChunkContext(arg1,arg2);
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_ConvertToCompressedChunkContext__SWIG_5) {
  {
    Ferris::fh_context arg1 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t *arg5 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: ConvertToCompressedChunkContext(c,blocksize,algo,compress_level,Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t &);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvertToCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertToCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ConvertToCompressedChunkContext" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ConvertToCompressedChunkContext" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ConvertToCompressedChunkContext" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_sigc__signal4T_void_Ferris__fh_context_Ferris__fh_context_int_int_t,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ConvertToCompressedChunkContext" "', argument " "5"" of type '" "Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertToCompressedChunkContext" "', argument " "5"" of type '" "Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t &""'"); 
    }
    arg5 = reinterpret_cast< Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t * >(argp5);
    Ferris::Factory::ConvertToCompressedChunkContext(arg1,arg2,arg3,arg4,*arg5);
    ST(argvi) = sv_newmortal();
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ConvertToCompressedChunkContext__SWIG_6) {
  {
    Ferris::fh_context arg1 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    void *argp1 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: ConvertToCompressedChunkContext(c,blocksize,algo,compress_level);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvertToCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertToCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ConvertToCompressedChunkContext" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ConvertToCompressedChunkContext" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ConvertToCompressedChunkContext" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    Ferris::Factory::ConvertToCompressedChunkContext(arg1,arg2,arg3,arg4);
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ConvertToCompressedChunkContext__SWIG_7) {
  {
    Ferris::fh_context arg1 ;
    int arg2 ;
    int arg3 ;
    void *argp1 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: ConvertToCompressedChunkContext(c,blocksize,algo);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvertToCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertToCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ConvertToCompressedChunkContext" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ConvertToCompressedChunkContext" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    Ferris::Factory::ConvertToCompressedChunkContext(arg1,arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ConvertToCompressedChunkContext__SWIG_8) {
  {
    Ferris::fh_context arg1 ;
    int arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ConvertToCompressedChunkContext(c,blocksize);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvertToCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertToCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ConvertToCompressedChunkContext" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    Ferris::Factory::ConvertToCompressedChunkContext(arg1,arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ConvertToCompressedChunkContext__SWIG_9) {
  {
    Ferris::fh_context arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ConvertToCompressedChunkContext(c);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvertToCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertToCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    Ferris::Factory::ConvertToCompressedChunkContext(arg1);
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_ConvertToCompressedChunkContext) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 6;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_6:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 7;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_7:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 8;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_8:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_9;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_9;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_9;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_9;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(4), &vptr, SWIGTYPE_p_sigc__signal4T_void_Ferris__fh_context_Ferris__fh_context_int_int_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_9;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 9;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_9:
    
    if (items == 6) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_10;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_10;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_10;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_10;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_10;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(5), &vptr, SWIGTYPE_p_sigc__signal4T_void_Ferris__fh_context_Ferris__fh_context_int_int_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_10;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 10;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_10:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ConvertToCompressedChunkContext__SWIG_9); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ConvertToCompressedChunkContext__SWIG_4); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ConvertToCompressedChunkContext__SWIG_8); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ConvertToCompressedChunkContext__SWIG_3); return;
    case 5:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ConvertToCompressedChunkContext__SWIG_7); return;
    case 6:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ConvertToCompressedChunkContext__SWIG_2); return;
    case 7:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ConvertToCompressedChunkContext__SWIG_6); return;
    case 8:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ConvertToCompressedChunkContext__SWIG_1); return;
    case 9:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ConvertToCompressedChunkContext__SWIG_5); return;
    case 10:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ConvertToCompressedChunkContext__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'ConvertToCompressedChunkContext'");
  XSRETURN(0);
}


XS(_wrap_ConvertFromCompressedChunkContext__SWIG_0) {
  {
    Ferris::fh_context arg1 ;
    Ferris::fh_context arg2 ;
    Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: ConvertFromCompressedChunkContext(c,target,Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t &);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvertFromCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertFromCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvertFromCompressedChunkContext" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertFromCompressedChunkContext" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_sigc__signal4T_void_Ferris__fh_context_Ferris__fh_context_int_int_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ConvertFromCompressedChunkContext" "', argument " "3"" of type '" "Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertFromCompressedChunkContext" "', argument " "3"" of type '" "Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t &""'"); 
    }
    arg3 = reinterpret_cast< Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t * >(argp3);
    Ferris::Factory::ConvertFromCompressedChunkContext(arg1,arg2,*arg3);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ConvertFromCompressedChunkContext__SWIG_1) {
  {
    Ferris::fh_context arg1 ;
    Ferris::fh_context arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ConvertFromCompressedChunkContext(c,target);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvertFromCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertFromCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvertFromCompressedChunkContext" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertFromCompressedChunkContext" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    Ferris::Factory::ConvertFromCompressedChunkContext(arg1,arg2);
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_ConvertFromCompressedChunkContext__SWIG_2) {
  {
    Ferris::fh_context arg1 ;
    Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ConvertFromCompressedChunkContext(c,Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t &);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvertFromCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertFromCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_sigc__signal4T_void_Ferris__fh_context_Ferris__fh_context_int_int_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvertFromCompressedChunkContext" "', argument " "2"" of type '" "Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertFromCompressedChunkContext" "', argument " "2"" of type '" "Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t * >(argp2);
    Ferris::Factory::ConvertFromCompressedChunkContext(arg1,*arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ConvertFromCompressedChunkContext__SWIG_3) {
  {
    Ferris::fh_context arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ConvertFromCompressedChunkContext(c);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvertFromCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvertFromCompressedChunkContext" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    Ferris::Factory::ConvertFromCompressedChunkContext(arg1);
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_ConvertFromCompressedChunkContext) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_sigc__signal4T_void_Ferris__fh_context_Ferris__fh_context_int_int_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_sigc__signal4T_void_Ferris__fh_context_Ferris__fh_context_int_int_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ConvertFromCompressedChunkContext__SWIG_3); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ConvertFromCompressedChunkContext__SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ConvertFromCompressedChunkContext__SWIG_1); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ConvertFromCompressedChunkContext__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'ConvertFromCompressedChunkContext'");
  XSRETURN(0);
}


XS(_wrap_getSchemaDefaultSortList) {
  {
    Ferris::fh_context arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< std::string > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: getSchemaDefaultSortList(sc);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getSchemaDefaultSortList" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getSchemaDefaultSortList" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    result = Ferris::getSchemaDefaultSortList(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::stringlist_t(static_cast< const Ferris::stringlist_t& >(result))), SWIGTYPE_p_std__listT_std__string_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_getSchemaDefaultSort) {
  {
    Ferris::fh_context arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: getSchemaDefaultSort(sc);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getSchemaDefaultSort" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getSchemaDefaultSort" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    result = Ferris::getSchemaDefaultSort(arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_maskOffXSDMeta) {
  {
    Ferris::XSDBasic_t arg1 ;
    int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    Ferris::XSDBasic_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: maskOffXSDMeta(t);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "maskOffXSDMeta" "', argument " "1"" of type '" "Ferris::XSDBasic_t""'");
    } 
    arg1 = static_cast< Ferris::XSDBasic_t >(val1);
    result = (Ferris::XSDBasic_t)Ferris::maskOffXSDMeta(arg1);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_attachStatelessSchema) {
  {
    Ferris::Context *arg1 = (Ferris::Context *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::XSDBasic_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: attachStatelessSchema(c,rawname,t);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "attachStatelessSchema" "', argument " "1"" of type '" "Ferris::Context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "attachStatelessSchema" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "attachStatelessSchema" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "attachStatelessSchema" "', argument " "3"" of type '" "Ferris::XSDBasic_t""'");
    } 
    arg3 = static_cast< Ferris::XSDBasic_t >(val3);
    Ferris::attachStatelessSchema(arg1,(std::string const &)*arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_attachGenericSchema) {
  {
    Ferris::Context *arg1 = (Ferris::Context *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::XSDBasic_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: attachGenericSchema(c,rawname,t);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Context, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "attachGenericSchema" "', argument " "1"" of type '" "Ferris::Context *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "attachGenericSchema" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "attachGenericSchema" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "attachGenericSchema" "', argument " "3"" of type '" "Ferris::XSDBasic_t""'");
    } 
    arg3 = static_cast< Ferris::XSDBasic_t >(val3);
    Ferris::attachGenericSchema(arg1,(std::string const &)*arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_getSchemaType__SWIG_0) {
  {
    Ferris::fh_context *arg1 = 0 ;
    std::string *arg2 = 0 ;
    Ferris::XSDBasic_t arg3 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    Ferris::XSDBasic_t result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: getSchemaType(c,eaname,sct);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getSchemaType" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getSchemaType" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getSchemaType" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getSchemaType" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "getSchemaType" "', argument " "3"" of type '" "Ferris::XSDBasic_t""'");
    } 
    arg3 = static_cast< Ferris::XSDBasic_t >(val3);
    result = (Ferris::XSDBasic_t)Ferris::getSchemaType((Ferris::fh_context const &)*arg1,(std::string const &)*arg2,arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_getSchemaJustification__SWIG_0) {
  {
    Ferris::fh_context *arg1 = 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: getSchemaJustification(c,eaname,def);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getSchemaJustification" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getSchemaJustification" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getSchemaJustification" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getSchemaJustification" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "getSchemaJustification" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getSchemaJustification" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = Ferris::getSchemaJustification((Ferris::fh_context const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_getSchemaJustification__SWIG_1) {
  {
    Ferris::fh_context *arg1 = 0 ;
    std::string *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: getSchemaJustification(c,eaname);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getSchemaJustification" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getSchemaJustification" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getSchemaJustification" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getSchemaJustification" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = Ferris::getSchemaJustification((Ferris::fh_context const &)*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_getSchemaJustification) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getSchemaJustification__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getSchemaJustification__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'getSchemaJustification'");
  XSRETURN(0);
}


XS(_wrap_getSchemaDisplayWidth__SWIG_0) {
  {
    Ferris::fh_context *arg1 = 0 ;
    std::string *arg2 = 0 ;
    int arg3 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: getSchemaDisplayWidth(c,eaname,def);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getSchemaDisplayWidth" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getSchemaDisplayWidth" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getSchemaDisplayWidth" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getSchemaDisplayWidth" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "getSchemaDisplayWidth" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (int)Ferris::getSchemaDisplayWidth((Ferris::fh_context const &)*arg1,(std::string const &)*arg2,arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_getSchemaDisplayWidth__SWIG_1) {
  {
    Ferris::fh_context *arg1 = 0 ;
    std::string *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: getSchemaDisplayWidth(c,eaname);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getSchemaDisplayWidth" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getSchemaDisplayWidth" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getSchemaDisplayWidth" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getSchemaDisplayWidth" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (int)Ferris::getSchemaDisplayWidth((Ferris::fh_context const &)*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_getSchemaDisplayWidth) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getSchemaDisplayWidth__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getSchemaDisplayWidth__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'getSchemaDisplayWidth'");
  XSRETURN(0);
}


XS(_wrap_getSchemaDisplayPrecision__SWIG_0) {
  {
    Ferris::fh_context *arg1 = 0 ;
    std::string *arg2 = 0 ;
    int arg3 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: getSchemaDisplayPrecision(c,eaname,def);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getSchemaDisplayPrecision" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getSchemaDisplayPrecision" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getSchemaDisplayPrecision" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getSchemaDisplayPrecision" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "getSchemaDisplayPrecision" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (int)Ferris::getSchemaDisplayPrecision((Ferris::fh_context const &)*arg1,(std::string const &)*arg2,arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_getSchemaDisplayPrecision__SWIG_1) {
  {
    Ferris::fh_context *arg1 = 0 ;
    std::string *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: getSchemaDisplayPrecision(c,eaname);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getSchemaDisplayPrecision" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getSchemaDisplayPrecision" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getSchemaDisplayPrecision" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getSchemaDisplayPrecision" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (int)Ferris::getSchemaDisplayPrecision((Ferris::fh_context const &)*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_getSchemaDisplayPrecision) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getSchemaDisplayPrecision__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getSchemaDisplayPrecision__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'getSchemaDisplayPrecision'");
  XSRETURN(0);
}


XS(_wrap_getSchemaType__SWIG_1) {
  {
    Ferris::fh_context *arg1 = 0 ;
    Ferris::XSDBasic_t arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    Ferris::XSDBasic_t result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: getSchemaType(sc,sct);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getSchemaType" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getSchemaType" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "getSchemaType" "', argument " "2"" of type '" "Ferris::XSDBasic_t""'");
    } 
    arg2 = static_cast< Ferris::XSDBasic_t >(val2);
    result = (Ferris::XSDBasic_t)Ferris::getSchemaType((Ferris::fh_context const &)*arg1,arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_getSchemaType) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getSchemaType__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getSchemaType__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'getSchemaType'");
  XSRETURN(0);
}


XS(_wrap_getSchemaURLForType) {
  {
    Ferris::XSDBasic_t arg1 ;
    int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: getSchemaURLForType(sct);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "getSchemaURLForType" "', argument " "1"" of type '" "Ferris::XSDBasic_t""'");
    } 
    arg1 = static_cast< Ferris::XSDBasic_t >(val1);
    result = Ferris::Factory::getSchemaURLForType(arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_makeBasicTypeMap) {
  {
    Ferris::Factory::xsdtypemap_t *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Factory::xsdtypemap_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: makeBasicTypeMap(m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__mapT_Ferris__XSDBasic_t_Ferris__fh_context_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "makeBasicTypeMap" "', argument " "1"" of type '" "Ferris::Factory::xsdtypemap_t &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "makeBasicTypeMap" "', argument " "1"" of type '" "Ferris::Factory::xsdtypemap_t &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Factory::xsdtypemap_t * >(argp1);
    result = (Ferris::Factory::xsdtypemap_t *) &Ferris::Factory::makeBasicTypeMap(*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_Ferris__XSDBasic_t_Ferris__fh_context_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_attachStreamCollector) {
  {
    Ferris::fh_runner *arg1 = 0 ;
    Runner_AsyncIOFunctor_t *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: attachStreamCollector(r,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_runner,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "attachStreamCollector" "', argument " "1"" of type '" "Ferris::fh_runner const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "attachStreamCollector" "', argument " "1"" of type '" "Ferris::fh_runner const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_runner * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Runner_AsyncIOFunctor_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "attachStreamCollector" "', argument " "2"" of type '" "Runner_AsyncIOFunctor_t const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "attachStreamCollector" "', argument " "2"" of type '" "Runner_AsyncIOFunctor_t const &""'"); 
    }
    arg2 = reinterpret_cast< Runner_AsyncIOFunctor_t * >(argp2);
    Ferris::Private::attachStreamCollector((Ferris::fh_runner const &)*arg1,(Runner_AsyncIOFunctor_t const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_stringvec_to_CSTRvec) {
  {
    std::vector< std::string > *arg1 = 0 ;
    std::vector< std::string > temp1 ;
    std::vector< std::string > *v1 ;
    int argvi = 0;
    char **result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: stringvec_to_CSTRvec(v);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorT_std__string_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of stringvec_to_CSTRvec. "
          "Expected an array of ""std::string");
        SV **tv;
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SvPOK(*tv)) {
            temp1.push_back((std::string)SwigSvToString(*tv));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "stringvec_to_CSTRvec. "
              "Expected an array of ""std::string");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of stringvec_to_CSTRvec. "
          "Expected an array of ""std::string");
      }
    }
    result = (char **)Ferris::stringvec_to_CSTRvec((std::vector< std::string > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_char, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Resolve__SWIG_0) {
  {
    std::string arg1 ;
    Ferris::ResolveStyle arg2 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Resolve(earl,rs);");
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Resolve" "', argument " "1"" of type '" "std::string const""'"); 
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Resolve" "', argument " "2"" of type '" "Ferris::ResolveStyle""'");
    } 
    arg2 = static_cast< Ferris::ResolveStyle >(val2);
    result = Ferris::Resolve(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Resolve__SWIG_1) {
  {
    std::string arg1 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Resolve(earl);");
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Resolve" "', argument " "1"" of type '" "std::string const""'"); 
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = Ferris::Resolve(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_Resolve__SWIG_2) {
  {
    std::string arg1 ;
    Ferris::ResolveStyle arg2 ;
    int arg3 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: Resolve(earl,rs,ex);");
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Resolve" "', argument " "1"" of type '" "std::string const""'"); 
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Resolve" "', argument " "2"" of type '" "Ferris::ResolveStyle""'");
    } 
    arg2 = static_cast< Ferris::ResolveStyle >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Resolve" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = Ferris::Resolve(arg1,arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Resolve) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Resolve__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Resolve__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_Resolve__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'Resolve'");
  XSRETURN(0);
}


XS(_wrap_expandShellGlobs__SWIG_0) {
  {
    Ferris::stringlist_t *arg1 = 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::stringlist_t *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: expandShellGlobs(ret,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__listT_std__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "expandShellGlobs" "', argument " "1"" of type '" "Ferris::stringlist_t &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "expandShellGlobs" "', argument " "1"" of type '" "Ferris::stringlist_t &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::stringlist_t * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "expandShellGlobs" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "expandShellGlobs" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (Ferris::stringlist_t *) &Ferris::expandShellGlobs(*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_std__string_t, 0 | 0); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_getExpandShellGlobsPopTable) {
  {
    int argvi = 0;
    ::poptOption *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: getExpandShellGlobsPopTable();");
    }
    result = (::poptOption *)Ferris::getExpandShellGlobsPopTable();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_poptOption, 0 | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_expandShellGlobs__SWIG_1) {
  {
    Ferris::stringlist_t *arg1 = 0 ;
    poptContext *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    Ferris::stringlist_t *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: expandShellGlobs(ret,optCon);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__listT_std__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "expandShellGlobs" "', argument " "1"" of type '" "Ferris::stringlist_t &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "expandShellGlobs" "', argument " "1"" of type '" "Ferris::stringlist_t &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::stringlist_t * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_poptContext,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "expandShellGlobs" "', argument " "2"" of type '" "poptContext &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "expandShellGlobs" "', argument " "2"" of type '" "poptContext &""'"); 
    }
    arg2 = reinterpret_cast< poptContext * >(argp2);
    result = (Ferris::stringlist_t *) &Ferris::expandShellGlobs(*arg1,*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_std__string_t, 0 | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_expandShellGlobs) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__listT_std__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_poptContext, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__listT_std__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_expandShellGlobs__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_expandShellGlobs__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'expandShellGlobs'");
  XSRETURN(0);
}


XS(_wrap_new_DesktopFileKeyNotFound__SWIG_0) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    Ferris::Attribute *arg4 = (Ferris::Attribute *) 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    Ferris::DesktopFileKeyNotFound *result = 0 ;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_DesktopFileKeyNotFound(state,log,e,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DesktopFileKeyNotFound" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DesktopFileKeyNotFound" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DesktopFileKeyNotFound" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DesktopFileKeyNotFound" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_DesktopFileKeyNotFound" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DesktopFileKeyNotFound" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_Ferris__Attribute, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_DesktopFileKeyNotFound" "', argument " "4"" of type '" "Ferris::Attribute *""'"); 
    }
    arg4 = reinterpret_cast< Ferris::Attribute * >(argp4);
    result = (Ferris::DesktopFileKeyNotFound *)new Ferris::DesktopFileKeyNotFound((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__DesktopFileKeyNotFound, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_DesktopFileKeyNotFound__SWIG_1) {
  {
    Ferris::FerrisException_CodeState *arg1 = 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::DesktopFileKeyNotFound *result = 0 ;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_DesktopFileKeyNotFound(state,log,e);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__FerrisException_CodeState,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DesktopFileKeyNotFound" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DesktopFileKeyNotFound" "', argument " "1"" of type '" "Ferris::FerrisException_CodeState const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::FerrisException_CodeState * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DesktopFileKeyNotFound" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DesktopFileKeyNotFound" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_DesktopFileKeyNotFound" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DesktopFileKeyNotFound" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (Ferris::DesktopFileKeyNotFound *)new Ferris::DesktopFileKeyNotFound((Ferris::FerrisException_CodeState const &)*arg1,arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__DesktopFileKeyNotFound, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_DesktopFileKeyNotFound) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__FerrisException_CodeState, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_Ferris__Attribute, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_DesktopFileKeyNotFound__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_DesktopFileKeyNotFound__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_DesktopFileKeyNotFound'");
  XSRETURN(0);
}


XS(_wrap_importDesktopFileTo) {
  {
    Ferris::fh_context arg1 ;
    Ferris::fh_context arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: importDesktopFileTo(parentc,desktopc);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "importDesktopFileTo" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "importDesktopFileTo" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "importDesktopFileTo" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "importDesktopFileTo" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    Ferris::importDesktopFileTo(arg1,arg2);
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_importDesktopFile) {
  {
    Ferris::fh_context arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: importDesktopFile(c);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "importDesktopFile" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "importDesktopFile" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    Ferris::importDesktopFile(arg1);
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_getFileClipboard__SWIG_0) {
  {
    std::string arg1 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: getFileClipboard(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getFileClipboard" "', argument " "1"" of type '" "std::string""'"); 
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = Ferris::Factory::getFileClipboard(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_getFileClipboard__SWIG_1) {
  {
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: getFileClipboard();");
    }
    result = Ferris::Factory::getFileClipboard();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_getFileClipboard) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getFileClipboard__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getFileClipboard__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'getFileClipboard'");
  XSRETURN(0);
}


XS(_wrap_Clear) {
  {
    Ferris::fh_context arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Clear(clip);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Clear" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Clear" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    Ferris::FileClip::Clear(arg1);
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_Cut) {
  {
    Ferris::fh_context arg1 ;
    Ferris::fh_context arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Cut(clip,c);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Cut" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Cut" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Cut" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Cut" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    Ferris::FileClip::Cut(arg1,arg2);
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_Copy) {
  {
    Ferris::fh_context arg1 ;
    Ferris::fh_context arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Copy(clip,c);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Copy" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Copy" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Copy" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Copy" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    Ferris::FileClip::Copy(arg1,arg2);
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_Link) {
  {
    Ferris::fh_context arg1 ;
    Ferris::fh_context arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Link(clip,c);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Link" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Link" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Link" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    Ferris::FileClip::Link(arg1,arg2);
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_Paste) {
  {
    Ferris::fh_context arg1 ;
    Ferris::fh_context arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: Paste(clip,dst);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Paste" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Paste" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Paste" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Paste" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    Ferris::FileClip::Paste(arg1,arg2);
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_Undo) {
  {
    Ferris::fh_context arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Undo(cursor);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Undo" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Undo" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    Ferris::FileClip::Undo(arg1);
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_Redo) {
  {
    Ferris::fh_context arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Redo(cursor);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Redo" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Redo" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    Ferris::FileClip::Redo(arg1);
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_getMimeHistory__SWIG_0) {
  {
    Ferris::fh_context arg1 ;
    Ferris::fh_context arg2 ;
    std::string arg3 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< std::string > > result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: getMimeHistory(clip,c,action);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getMimeHistory" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getMimeHistory" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getMimeHistory" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getMimeHistory" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getMimeHistory" "', argument " "3"" of type '" "std::string""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = Ferris::FileClip::getMimeHistory(arg1,arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::stringlist_t(static_cast< const Ferris::stringlist_t& >(result))), SWIGTYPE_p_std__listT_std__string_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_getMimeHistory__SWIG_1) {
  {
    Ferris::fh_context arg1 ;
    Ferris::fh_context arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< std::string > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: getMimeHistory(clip,c);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getMimeHistory" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getMimeHistory" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getMimeHistory" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getMimeHistory" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    result = Ferris::FileClip::getMimeHistory(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::stringlist_t(static_cast< const Ferris::stringlist_t& >(result))), SWIGTYPE_p_std__listT_std__string_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_getMimeHistory) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getMimeHistory__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getMimeHistory__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'getMimeHistory'");
  XSRETURN(0);
}


XS(_wrap_setUseSloth) {
  {
    Ferris::fh_context arg1 ;
    bool arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: setUseSloth(clip,v);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "setUseSloth" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setUseSloth" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "setUseSloth" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    Ferris::FileClip::setUseSloth(arg1,arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_setUseAutoClose) {
  {
    Ferris::fh_context arg1 ;
    bool arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: setUseAutoClose(clip,v);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "setUseAutoClose" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setUseAutoClose" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "setUseAutoClose" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    Ferris::FileClip::setUseAutoClose(arg1,arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_setCursorOption) {
  {
    Ferris::fh_context arg1 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: setCursorOption(parent,k,v);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "setCursorOption" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setCursorOption" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "setCursorOption" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setCursorOption" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "setCursorOption" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setCursorOption" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    Ferris::Config::setCursorOption(arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = sv_newmortal();
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_getCursor) {
  {
    Ferris::fh_context arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: getCursor(parent);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getCursor" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getCursor" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    result = Ferris::Factory::getCursor(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_cursorNext) {
  {
    Ferris::fh_context arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: cursorNext(cursor);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "cursorNext" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "cursorNext" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    result = Ferris::Cursor::cursorNext(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_cursorPrev) {
  {
    Ferris::fh_context arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: cursorPrev(cursor);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "cursorPrev" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "cursorPrev" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    result = Ferris::Cursor::cursorPrev(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_cursorOffset) {
  {
    Ferris::fh_context arg1 ;
    int arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: cursorOffset(cursor,offset);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "cursorOffset" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "cursorOffset" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "cursorOffset" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = Ferris::Cursor::cursorOffset(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_cursorSet) {
  {
    Ferris::fh_context arg1 ;
    Ferris::fh_context arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: cursorSet(cursor,newc);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "cursorSet" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "cursorSet" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "cursorSet" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "cursorSet" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    result = Ferris::Cursor::cursorSet(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_InitOpenSSL) {
  {
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: InitOpenSSL();");
    }
    InitOpenSSL();
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_digest__SWIG_0) {
  {
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > arg1 ;
    std::string arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: digest(Ferris::fh_istream,digestName);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "digest" "', argument " "1"" of type '" "Ferris::fh_istream""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "digest" "', argument " "1"" of type '" "Ferris::fh_istream""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_istream * >(argp1));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "digest" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = Ferris::digest(arg1,arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_digest__SWIG_1) {
  {
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: digest(Ferris::fh_istream);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "digest" "', argument " "1"" of type '" "Ferris::fh_istream""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "digest" "', argument " "1"" of type '" "Ferris::fh_istream""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_istream * >(argp1));
      }
    }
    result = Ferris::digest(arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_digest__SWIG_2) {
  {
    std::string arg1 ;
    std::string arg2 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: digest(std::string,digestName);");
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "digest" "', argument " "1"" of type '" "std::string""'"); 
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "digest" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = Ferris::digest(arg1,arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_digest__SWIG_3) {
  {
    std::string arg1 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: digest(std::string);");
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "digest" "', argument " "1"" of type '" "std::string""'"); 
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = Ferris::digest(arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_digest) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_digest__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_digest__SWIG_3); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_digest__SWIG_0); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_digest__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'digest'");
  XSRETURN(0);
}


XS(_wrap_base64encode) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: base64encode(v);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "base64encode" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "base64encode" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::base64encode((std::string const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_MakeDigestStream__SWIG_0) {
  {
    std::string arg1 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MakeDigestStream(digestName);");
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "MakeDigestStream" "', argument " "1"" of type '" "std::string""'"); 
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = Ferris::Factory::MakeDigestStream(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeDigestStream__SWIG_1) {
  {
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: MakeDigestStream();");
    }
    result = Ferris::Factory::MakeDigestStream();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_MakeDigestStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeDigestStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeDigestStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'MakeDigestStream'");
  XSRETURN(0);
}


XS(_wrap_new_ImplicitIteratorUpdateLock) {
  {
    int argvi = 0;
    Ferris::ImplicitIteratorUpdateLock *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_ImplicitIteratorUpdateLock();");
    }
    result = (Ferris::ImplicitIteratorUpdateLock *)new Ferris::ImplicitIteratorUpdateLock();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ImplicitIteratorUpdateLock, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_ImplicitIteratorUpdateLock) {
  {
    Ferris::ImplicitIteratorUpdateLock *arg1 = (Ferris::ImplicitIteratorUpdateLock *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_ImplicitIteratorUpdateLock(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ImplicitIteratorUpdateLock, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ImplicitIteratorUpdateLock" "', argument " "1"" of type '" "Ferris::ImplicitIteratorUpdateLock *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ImplicitIteratorUpdateLock * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ImplicitIteratorUpdateLock_isTaken) {
  {
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: ImplicitIteratorUpdateLock_isTaken();");
    }
    result = (bool)Ferris::ImplicitIteratorUpdateLock::isTaken();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_ContextIterator) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_ContextIterator(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ContextIterator" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_ContextIterator) {
  {
    Ferris::ContextIterator *arg1 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::ContextIterator *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_ContextIterator(ci);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__ContextIterator,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ContextIterator" "', argument " "1"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ContextIterator" "', argument " "1"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (Ferris::ContextIterator *)new Ferris::ContextIterator((Ferris::ContextIterator const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ContextIterator, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_operator_assignment) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    Ferris::ContextIterator *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    Ferris::ContextIterator *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_operator_assignment(self,ci);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_operator_assignment" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__ContextIterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_operator_assignment" "', argument " "2"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_operator_assignment" "', argument " "2"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::ContextIterator * >(argp2);
    result = (Ferris::ContextIterator *) &(arg1)->operator =((Ferris::ContextIterator const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ContextIterator, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator___ref__) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::ContextIterator::reference result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator___ref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator___ref__" "', argument " "1"" of type '" "Ferris::ContextIterator const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = ((Ferris::ContextIterator const *)arg1)->operator *();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::ContextIterator::reference(static_cast< const Ferris::ContextIterator::reference& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator___deref__) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::ContextIterator::pointer result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator___deref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator___deref__" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (arg1)->operator ->();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::ContextIterator::pointer(static_cast< const Ferris::ContextIterator::pointer& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_operator_atindex) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    Ferris::ContextIterator::difference_type arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    Ferris::ContextIterator::reference result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_operator_atindex(self,n);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_operator_atindex" "', argument " "1"" of type '" "Ferris::ContextIterator const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    ecode2 = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContextIterator_operator_atindex" "', argument " "2"" of type '" "Ferris::ContextIterator::difference_type""'");
    } 
    arg2 = static_cast< Ferris::ContextIterator::difference_type >(val2);
    result = ((Ferris::ContextIterator const *)arg1)->operator [](arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::ContextIterator::reference(static_cast< const Ferris::ContextIterator::reference& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator___plusplus____SWIG_0) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::ContextIterator::_Self *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator___plusplus__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator___plusplus__" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (Ferris::ContextIterator::_Self *) &(arg1)->operator ++();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ContextIterator, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator___plusplus____SWIG_1) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    Ferris::ContextIterator::_Self result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator___plusplus__(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator___plusplus__" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContextIterator___plusplus__" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (arg1)->operator ++(arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::ContextIterator::_Self(static_cast< const Ferris::ContextIterator::_Self& >(result))), SWIGTYPE_p_Ferris__ContextIterator, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator___plusplus__) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator___plusplus____SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator___plusplus____SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'ContextIterator___plusplus__'");
  XSRETURN(0);
}


XS(_wrap_ContextIterator___minmin____SWIG_0) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::ContextIterator::_Self *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator___minmin__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator___minmin__" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (Ferris::ContextIterator::_Self *) &(arg1)->operator --();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ContextIterator, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator___minmin____SWIG_1) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    Ferris::ContextIterator::_Self result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator___minmin__(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator___minmin__" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContextIterator___minmin__" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (arg1)->operator --(arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::ContextIterator::_Self(static_cast< const Ferris::ContextIterator::_Self& >(result))), SWIGTYPE_p_Ferris__ContextIterator, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator___minmin__) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator___minmin____SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator___minmin____SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'ContextIterator___minmin__'");
  XSRETURN(0);
}


XS(_wrap_ContextIterator___add__) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    Ferris::ContextIterator::difference_type arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    Ferris::ContextIterator::_Self result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator___add__(self,n);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator___add__" "', argument " "1"" of type '" "Ferris::ContextIterator const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    ecode2 = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContextIterator___add__" "', argument " "2"" of type '" "Ferris::ContextIterator::difference_type""'");
    } 
    arg2 = static_cast< Ferris::ContextIterator::difference_type >(val2);
    result = ((Ferris::ContextIterator const *)arg1)->operator +(arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::ContextIterator::_Self(static_cast< const Ferris::ContextIterator::_Self& >(result))), SWIGTYPE_p_Ferris__ContextIterator, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator___iadd__) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    Ferris::ContextIterator::difference_type arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    Ferris::ContextIterator::_Self *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator___iadd__(self,n);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator___iadd__" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    ecode2 = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContextIterator___iadd__" "', argument " "2"" of type '" "Ferris::ContextIterator::difference_type""'");
    } 
    arg2 = static_cast< Ferris::ContextIterator::difference_type >(val2);
    result = (Ferris::ContextIterator::_Self *) &(arg1)->operator +=(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ContextIterator, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator___sub__) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    Ferris::ContextIterator::difference_type arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    Ferris::ContextIterator::_Self result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator___sub__(self,n);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator___sub__" "', argument " "1"" of type '" "Ferris::ContextIterator const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    ecode2 = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContextIterator___sub__" "', argument " "2"" of type '" "Ferris::ContextIterator::difference_type""'");
    } 
    arg2 = static_cast< Ferris::ContextIterator::difference_type >(val2);
    result = ((Ferris::ContextIterator const *)arg1)->operator -(arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::ContextIterator::_Self(static_cast< const Ferris::ContextIterator::_Self& >(result))), SWIGTYPE_p_Ferris__ContextIterator, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator___isub__) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    Ferris::ContextIterator::difference_type arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    Ferris::ContextIterator::_Self *result = 0 ;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator___isub__(self,n);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator___isub__" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    ecode2 = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContextIterator___isub__" "', argument " "2"" of type '" "Ferris::ContextIterator::difference_type""'");
    } 
    arg2 = static_cast< Ferris::ContextIterator::difference_type >(val2);
    result = (Ferris::ContextIterator::_Self *) &(arg1)->operator -=(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__ContextIterator, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getContextClassStatelessEANames) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::stringset_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getContextClassStatelessEANames(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getContextClassStatelessEANames" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (Ferris::stringset_t *) &(*arg1)->getContextClassStatelessEANames();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__setT_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_isDir) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_isDir(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_isDir" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (bool)(*arg1)->isDir();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getDirName) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getDirName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getDirName" "', argument " "1"" of type '" "Ferris::ContextIterator const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (std::string *) &(*arg1)->getDirName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getParent) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Attribute::Parent_t result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getParent(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getParent" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    try {
      result = (Ferris::Attribute::Parent_t)(*arg1)->getParent();
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Context, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_isParentBound) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_isParentBound(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_isParentBound" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (bool)(*arg1)->isParentBound();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getRecommendedEA) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getRecommendedEA(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getRecommendedEA" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (*arg1)->getRecommendedEA();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getHasSubContextsGuess) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getHasSubContextsGuess(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getHasSubContextsGuess" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (bool)(*arg1)->getHasSubContextsGuess();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getHaveReadDir) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getHaveReadDir(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getHaveReadDir" "', argument " "1"" of type '" "Ferris::ContextIterator const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (int)(*arg1)->getHaveReadDir();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_toAttribute) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::fh_attribute result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_toAttribute(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_toAttribute" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (*arg1)->toAttribute();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_attribute(static_cast< const Ferris::fh_attribute& >(result))), SWIGTYPE_p_Ferris__fh_attribute, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getSchema) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_getSchema(self,eaname);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getSchema" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_getSchema" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_getSchema" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->getSchema((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getSchemaOrDefault) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::XSDBasic_t arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: ContextIterator_getSchemaOrDefault(self,eaname,sct);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getSchemaOrDefault" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_getSchemaOrDefault" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_getSchemaOrDefault" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContextIterator_getSchemaOrDefault" "', argument " "3"" of type '" "Ferris::XSDBasic_t""'");
    } 
    arg3 = static_cast< Ferris::XSDBasic_t >(val3);
    result = (*arg1)->getSchemaOrDefault((std::string const &)*arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_begin) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Context::iterator result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_begin(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_begin" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (*arg1)->begin();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::Context::iterator(static_cast< const Ferris::Context::iterator& >(result))), SWIGTYPE_p_Ferris__ContextIterator, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_end) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Context::iterator result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_end(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_end" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (*arg1)->end();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::Context::iterator(static_cast< const Ferris::Context::iterator& >(result))), SWIGTYPE_p_Ferris__ContextIterator, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_rbegin) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::reverse_iterator< Ferris::ContextIterator > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_rbegin(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_rbegin" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (*arg1)->rbegin();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::Context::reverse_iterator(static_cast< const Ferris::Context::reverse_iterator& >(result))), SWIGTYPE_p_std__reverse_iteratorT_Ferris__ContextIterator_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_rend) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::reverse_iterator< Ferris::ContextIterator > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_rend(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_rend" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (*arg1)->rend();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::Context::reverse_iterator(static_cast< const Ferris::Context::reverse_iterator& >(result))), SWIGTYPE_p_std__reverse_iteratorT_Ferris__ContextIterator_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_find) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::Context::iterator result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_find(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_find" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_find" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_find" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->find((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::Context::iterator(static_cast< const Ferris::Context::iterator& >(result))), SWIGTYPE_p_Ferris__ContextIterator, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_monsterName) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_monsterName(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_monsterName" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_monsterName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_monsterName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->monsterName((std::string const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getIsNativeContext) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getIsNativeContext(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getIsNativeContext" "', argument " "1"" of type '" "Ferris::ContextIterator const *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (bool)(*arg1)->getIsNativeContext();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_setHasDynamicAttributes) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_setHasDynamicAttributes(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_setHasDynamicAttributes" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContextIterator_setHasDynamicAttributes" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (*arg1)->setHasDynamicAttributes(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_setAttribute__SWIG_0) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::EA_Atom *arg3 = (Ferris::EA_Atom *) 0 ;
    bool arg4 ;
    Ferris::XSDBasic_t arg5 ;
    bool arg6 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    bool val6 ;
    int ecode6 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: ContextIterator_setAttribute(self,rdn,atx,addToREA,sct,isStateLess);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_setAttribute" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_setAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_setAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_Ferris__EA_Atom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContextIterator_setAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom *""'"); 
    }
    arg3 = reinterpret_cast< Ferris::EA_Atom * >(argp3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ContextIterator_setAttribute" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ContextIterator_setAttribute" "', argument " "5"" of type '" "Ferris::XSDBasic_t""'");
    } 
    arg5 = static_cast< Ferris::XSDBasic_t >(val5);
    ecode6 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ContextIterator_setAttribute" "', argument " "6"" of type '" "bool""'");
    } 
    arg6 = static_cast< bool >(val6);
    try {
      result = (bool)(*arg1)->setAttribute((std::string const &)*arg2,arg3,arg4,arg5,arg6);
    }
    catch(Ferris::AttributeAlreadyInUse &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeAlreadyInUse(static_cast< const Ferris::AttributeAlreadyInUse& >(_e))),SWIGTYPE_p_Ferris__AttributeAlreadyInUse,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_setAttribute__SWIG_1) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::EA_Atom *arg3 = (Ferris::EA_Atom *) 0 ;
    bool arg4 ;
    Ferris::XSDBasic_t arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: ContextIterator_setAttribute(self,rdn,atx,addToREA,sct);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_setAttribute" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_setAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_setAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_Ferris__EA_Atom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContextIterator_setAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom *""'"); 
    }
    arg3 = reinterpret_cast< Ferris::EA_Atom * >(argp3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ContextIterator_setAttribute" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ContextIterator_setAttribute" "', argument " "5"" of type '" "Ferris::XSDBasic_t""'");
    } 
    arg5 = static_cast< Ferris::XSDBasic_t >(val5);
    try {
      result = (bool)(*arg1)->setAttribute((std::string const &)*arg2,arg3,arg4,arg5);
    }
    catch(Ferris::AttributeAlreadyInUse &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeAlreadyInUse(static_cast< const Ferris::AttributeAlreadyInUse& >(_e))),SWIGTYPE_p_Ferris__AttributeAlreadyInUse,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_setAttribute__SWIG_2) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::EA_Atom *arg3 = (Ferris::EA_Atom *) 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: ContextIterator_setAttribute(self,rdn,atx,addToREA);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_setAttribute" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_setAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_setAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_Ferris__EA_Atom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContextIterator_setAttribute" "', argument " "3"" of type '" "Ferris::EA_Atom *""'"); 
    }
    arg3 = reinterpret_cast< Ferris::EA_Atom * >(argp3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ContextIterator_setAttribute" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    try {
      result = (bool)(*arg1)->setAttribute((std::string const &)*arg2,arg3,arg4);
    }
    catch(Ferris::AttributeAlreadyInUse &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeAlreadyInUse(static_cast< const Ferris::AttributeAlreadyInUse& >(_e))),SWIGTYPE_p_Ferris__AttributeAlreadyInUse,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_setAttribute) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Ferris__EA_Atom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Ferris__EA_Atom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 6) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Ferris__EA_Atom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_setAttribute__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_setAttribute__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_setAttribute__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'ContextIterator_setAttribute'");
  XSRETURN(0);
}


XS(_wrap_ContextIterator_getSubContextAttributesWithSameNameHaveSameSchema) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getSubContextAttributesWithSameNameHaveSameSchema(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getSubContextAttributesWithSameNameHaveSameSchema" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (bool)(*arg1)->getSubContextAttributesWithSameNameHaveSameSchema();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_dumpOutItems) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_dumpOutItems(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_dumpOutItems" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    (*arg1)->dumpOutItems();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getOverMountContext) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Context *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getOverMountContext(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getOverMountContext" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (Ferris::Context *)(*arg1)->getOverMountContext();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Context, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_remove__SWIG_0) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_remove(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_remove" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_remove" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_remove" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (*arg1)->remove((std::string const &)*arg2);
    ST(argvi) = sv_newmortal();
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_remove__SWIG_1) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    Ferris::fh_context arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_remove(self,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_remove" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_remove" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_remove" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    (*arg1)->remove(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_remove) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_remove__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_remove__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'ContextIterator_remove'");
  XSRETURN(0);
}


XS(_wrap_ContextIterator_rename__SWIG_0) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    bool arg4 ;
    bool arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: ContextIterator_rename(self,rdn,newPath,TryToCopyOverFileSystems,OverWriteDstIfExists);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_rename" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_rename" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_rename" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContextIterator_rename" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_rename" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ContextIterator_rename" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ContextIterator_rename" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    result = (*arg1)->rename((std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_rename__SWIG_1) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: ContextIterator_rename(self,rdn,newPath,TryToCopyOverFileSystems);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_rename" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_rename" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_rename" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContextIterator_rename" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_rename" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ContextIterator_rename" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = (*arg1)->rename((std::string const &)*arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_rename__SWIG_2) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: ContextIterator_rename(self,rdn,newPath);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_rename" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_rename" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_rename" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContextIterator_rename" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_rename" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (*arg1)->rename((std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_rename) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_rename__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_rename__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_rename__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'ContextIterator_rename'");
  XSRETURN(0);
}


XS(_wrap_ContextIterator_copyTo__SWIG_0) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: ContextIterator_copyTo(self,newPath,OverWriteDstIfExists);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_copyTo" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_copyTo" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_copyTo" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContextIterator_copyTo" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (*arg1)->copyTo((std::string const &)*arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_copyTo__SWIG_1) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_copyTo(self,newPath);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_copyTo" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_copyTo" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_copyTo" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->copyTo((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_copyTo) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_copyTo__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_copyTo__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'ContextIterator_copyTo'");
  XSRETURN(0);
}


XS(_wrap_ContextIterator_createAttribute) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_attribute result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_createAttribute(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_createAttribute" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_createAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_createAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    try {
      result = (*arg1)->createAttribute((std::string const &)*arg2);
    }
    catch(Ferris::FerrisCreateAttributeFailed &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisCreateAttributeFailed(static_cast< const Ferris::FerrisCreateAttributeFailed& >(_e))),SWIGTYPE_p_Ferris__FerrisCreateAttributeFailed,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::FerrisCreateAttributeNotSupported &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisCreateAttributeNotSupported(static_cast< const Ferris::FerrisCreateAttributeNotSupported& >(_e))),SWIGTYPE_p_Ferris__FerrisCreateAttributeNotSupported,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::AttributeAlreadyInUse &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeAlreadyInUse(static_cast< const Ferris::AttributeAlreadyInUse& >(_e))),SWIGTYPE_p_Ferris__AttributeAlreadyInUse,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_attribute(static_cast< const Ferris::fh_attribute& >(result))), SWIGTYPE_p_Ferris__fh_attribute, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_acquireAttribute) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_attribute result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_acquireAttribute(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_acquireAttribute" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_acquireAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_acquireAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    try {
      result = (*arg1)->acquireAttribute((std::string const &)*arg2);
    }
    catch(Ferris::FerrisCreateAttributeFailed &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisCreateAttributeFailed(static_cast< const Ferris::FerrisCreateAttributeFailed& >(_e))),SWIGTYPE_p_Ferris__FerrisCreateAttributeFailed,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::FerrisCreateAttributeNotSupported &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisCreateAttributeNotSupported(static_cast< const Ferris::FerrisCreateAttributeNotSupported& >(_e))),SWIGTYPE_p_Ferris__FerrisCreateAttributeNotSupported,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_attribute(static_cast< const Ferris::fh_attribute& >(result))), SWIGTYPE_p_Ferris__fh_attribute, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getCreateSubContextSchema) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getCreateSubContextSchema(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getCreateSubContextSchema" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (*arg1)->getCreateSubContextSchema();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_createSubContext__SWIG_0) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::fh_context arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: ContextIterator_createSubContext(self,rdn,md);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_createSubContext" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_createSubContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_createSubContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContextIterator_createSubContext" "', argument " "3"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_createSubContext" "', argument " "3"" of type '" "Ferris::fh_context""'");
      } else {
        arg3 = *(reinterpret_cast< Ferris::fh_context * >(argp3));
      }
    }
    try {
      result = (*arg1)->createSubContext((std::string const &)*arg2,arg3);
    }
    catch(Ferris::FerrisCreateSubContextFailed &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisCreateSubContextFailed(static_cast< const Ferris::FerrisCreateSubContextFailed& >(_e))),SWIGTYPE_p_Ferris__FerrisCreateSubContextFailed,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::FerrisCreateSubContextNotSupported &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisCreateSubContextNotSupported(static_cast< const Ferris::FerrisCreateSubContextNotSupported& >(_e))),SWIGTYPE_p_Ferris__FerrisCreateSubContextNotSupported,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_createSubContext__SWIG_1) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_createSubContext(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_createSubContext" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_createSubContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_createSubContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    try {
      result = (*arg1)->createSubContext((std::string const &)*arg2);
    }
    catch(Ferris::FerrisCreateSubContextFailed &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisCreateSubContextFailed(static_cast< const Ferris::FerrisCreateSubContextFailed& >(_e))),SWIGTYPE_p_Ferris__FerrisCreateSubContextFailed,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::FerrisCreateSubContextNotSupported &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisCreateSubContextNotSupported(static_cast< const Ferris::FerrisCreateSubContextNotSupported& >(_e))),SWIGTYPE_p_Ferris__FerrisCreateSubContextNotSupported,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_createSubContext__SWIG_2) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    SwigValueWrapper< Loki::SmartPtr< Ferris::CreateMetaDataContext,::Ferris::FerrisExRefCountedContext,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: ContextIterator_createSubContext(self,rdn,md);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_createSubContext" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_createSubContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_createSubContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Loki__SmartPtrT_Ferris__CreateMetaDataContext___Ferris__FerrisExRefCountedContext_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContextIterator_createSubContext" "', argument " "3"" of type '" "Ferris::fh_mdcontext""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_createSubContext" "', argument " "3"" of type '" "Ferris::fh_mdcontext""'");
      } else {
        arg3 = *(reinterpret_cast< Ferris::fh_mdcontext * >(argp3));
      }
    }
    try {
      result = (*arg1)->createSubContext((std::string const &)*arg2,arg3);
    }
    catch(Ferris::FerrisCreateSubContextFailed &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisCreateSubContextFailed(static_cast< const Ferris::FerrisCreateSubContextFailed& >(_e))),SWIGTYPE_p_Ferris__FerrisCreateSubContextFailed,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::FerrisCreateSubContextNotSupported &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisCreateSubContextNotSupported(static_cast< const Ferris::FerrisCreateSubContextNotSupported& >(_e))),SWIGTYPE_p_Ferris__FerrisCreateSubContextNotSupported,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_createSubContext) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Loki__SmartPtrT_Ferris__CreateMetaDataContext___Ferris__FerrisExRefCountedContext_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_createSubContext__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_createSubContext__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_createSubContext__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'ContextIterator_createSubContext'");
  XSRETURN(0);
}


XS(_wrap_ContextIterator_getRelativeContext__SWIG_0) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::RootContextFactory *arg3 = (Ferris::RootContextFactory *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: ContextIterator_getRelativeContext(self,xdn,f);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getRelativeContext" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_getRelativeContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_getRelativeContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_Ferris__RootContextFactory, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContextIterator_getRelativeContext" "', argument " "3"" of type '" "Ferris::RootContextFactory *""'"); 
    }
    arg3 = reinterpret_cast< Ferris::RootContextFactory * >(argp3);
    try {
      result = (*arg1)->getRelativeContext((std::string const &)*arg2,arg3);
    }
    catch(Ferris::NoSuchSubContext &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::NoSuchSubContext(static_cast< const Ferris::NoSuchSubContext& >(_e))),SWIGTYPE_p_Ferris__NoSuchSubContext,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getRelativeContext__SWIG_1) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_getRelativeContext(self,xdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getRelativeContext" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_getRelativeContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_getRelativeContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    try {
      result = (*arg1)->getRelativeContext((std::string const &)*arg2);
    }
    catch(Ferris::NoSuchSubContext &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::NoSuchSubContext(static_cast< const Ferris::NoSuchSubContext& >(_e))),SWIGTYPE_p_Ferris__NoSuchSubContext,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getRelativeContext) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_Ferris__RootContextFactory, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_getRelativeContext__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_getRelativeContext__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'ContextIterator_getRelativeContext'");
  XSRETURN(0);
}


XS(_wrap_ContextIterator_getSubContextNames) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::ContextCollection::SubContextNames_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getSubContextNames(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getSubContextNames" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (Ferris::ContextCollection::SubContextNames_t *) &(*arg1)->getSubContextNames();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getSubContext) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_getSubContext(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getSubContext" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_getSubContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_getSubContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    try {
      result = (*arg1)->getSubContext((std::string const &)*arg2);
    }
    catch(Ferris::NoSuchSubContext &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::NoSuchSubContext(static_cast< const Ferris::NoSuchSubContext& >(_e))),SWIGTYPE_p_Ferris__NoSuchSubContext,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_priv_isSubContextBound) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_priv_isSubContextBound(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_priv_isSubContextBound" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_priv_isSubContextBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_priv_isSubContextBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(*arg1)->priv_isSubContextBound((std::string const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_isSubContextBound) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_isSubContextBound(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_isSubContextBound" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_isSubContextBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_isSubContextBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(*arg1)->isSubContextBound((std::string const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_read__SWIG_0) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_read(self,force);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_read" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContextIterator_read" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (*arg1)->read(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_read__SWIG_1) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_read(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_read" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    (*arg1)->read();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_read) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_read__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_read__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'ContextIterator_read'");
  XSRETURN(0);
}


XS(_wrap_ContextIterator_guessSize) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    long result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_guessSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_guessSize" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (long)(*arg1)->guessSize();
    ST(argvi) = SWIG_From_long  SWIG_PERL_CALL_ARGS_1(static_cast< long >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_hasSubContexts) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_hasSubContexts(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_hasSubContexts" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (bool)(*arg1)->hasSubContexts();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_SubContextCount) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_SubContextCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_SubContextCount" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (int)(*arg1)->SubContextCount();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_all_attributes_have_single_ref_count) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_all_attributes_have_single_ref_count(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_all_attributes_have_single_ref_count" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (bool)(*arg1)->all_attributes_have_single_ref_count();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_isAttributeBound__SWIG_0) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: ContextIterator_isAttributeBound(self,rdn,createIfNotThere);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_isAttributeBound" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_isAttributeBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_isAttributeBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContextIterator_isAttributeBound" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    try {
      result = (bool)(*arg1)->isAttributeBound((std::string const &)*arg2,arg3);
    }
    catch(Ferris::NoSuchAttribute &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::NoSuchAttribute(static_cast< const Ferris::NoSuchAttribute& >(_e))),SWIGTYPE_p_Ferris__NoSuchAttribute,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_isAttributeBound__SWIG_1) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_isAttributeBound(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_isAttributeBound" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_isAttributeBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_isAttributeBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    try {
      result = (bool)(*arg1)->isAttributeBound((std::string const &)*arg2);
    }
    catch(Ferris::NoSuchAttribute &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::NoSuchAttribute(static_cast< const Ferris::NoSuchAttribute& >(_e))),SWIGTYPE_p_Ferris__NoSuchAttribute,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_isAttributeBound) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_isAttributeBound__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_isAttributeBound__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'ContextIterator_isAttributeBound'");
  XSRETURN(0);
}


XS(_wrap_ContextIterator_getAttribute) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_attribute result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_getAttribute(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getAttribute" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_getAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_getAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    try {
      result = (*arg1)->getAttribute((std::string const &)*arg2);
    }
    catch(Ferris::NoSuchAttribute &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::NoSuchAttribute(static_cast< const Ferris::NoSuchAttribute& >(_e))),SWIGTYPE_p_Ferris__NoSuchAttribute,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_attribute(static_cast< const Ferris::fh_attribute& >(result))), SWIGTYPE_p_Ferris__fh_attribute, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getAttributeCount) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getAttributeCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getAttributeCount" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (int)(*arg1)->getAttributeCount();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getAttributeRootEmblem) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::fh_emblem result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getAttributeRootEmblem(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getAttributeRootEmblem" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (*arg1)->getAttributeRootEmblem();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_emblem(static_cast< const Ferris::fh_emblem& >(result))), SWIGTYPE_p_Ferris__fh_emblem, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_Emit_Changed) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    NamingEvent_Changed *arg2 = (NamingEvent_Changed *) 0 ;
    std::string *arg3 = 0 ;
    std::string *arg4 = 0 ;
    sigc::trackable *arg5 = (sigc::trackable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: ContextIterator_Emit_Changed(self,e,olddn,newdn,ExtraData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_Emit_Changed" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_NamingEvent_Changed, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_Emit_Changed" "', argument " "2"" of type '" "NamingEvent_Changed *""'"); 
    }
    arg2 = reinterpret_cast< NamingEvent_Changed * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContextIterator_Emit_Changed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_Emit_Changed" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ContextIterator_Emit_Changed" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_Emit_Changed" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      arg4 = ptr;
    }
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_sigc__trackable, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ContextIterator_Emit_Changed" "', argument " "5"" of type '" "sigc::trackable *""'"); 
    }
    arg5 = reinterpret_cast< sigc::trackable * >(argp5);
    (*arg1)->Emit_Changed(arg2,(std::string const &)*arg3,(std::string const &)*arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    if (SWIG_IsNewObj(res4)) delete arg4;
    
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    if (SWIG_IsNewObj(res4)) delete arg4;
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_Emit_Deleted) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    NamingEvent_Deleted *arg2 = (NamingEvent_Deleted *) 0 ;
    std::string arg3 ;
    std::string arg4 ;
    sigc::trackable *arg5 = (sigc::trackable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: ContextIterator_Emit_Deleted(self,e,olddn,newdn,ExtraData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_Emit_Deleted" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_NamingEvent_Deleted, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_Emit_Deleted" "', argument " "2"" of type '" "NamingEvent_Deleted *""'"); 
    }
    arg2 = reinterpret_cast< NamingEvent_Deleted * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "ContextIterator_Emit_Deleted" "', argument " "3"" of type '" "std::string""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "ContextIterator_Emit_Deleted" "', argument " "4"" of type '" "std::string""'"); 
      }
      arg4 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_sigc__trackable, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ContextIterator_Emit_Deleted" "', argument " "5"" of type '" "sigc::trackable *""'"); 
    }
    arg5 = reinterpret_cast< sigc::trackable * >(argp5);
    (*arg1)->Emit_Deleted(arg2,arg3,arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_Emit_Start_Execute) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    NamingEvent_Start_Execute *arg2 = (NamingEvent_Start_Execute *) 0 ;
    std::string arg3 ;
    std::string arg4 ;
    sigc::trackable *arg5 = (sigc::trackable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: ContextIterator_Emit_Start_Execute(self,e,olddn,newdn,ExtraData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_Emit_Start_Execute" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_NamingEvent_Start_Execute, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_Emit_Start_Execute" "', argument " "2"" of type '" "NamingEvent_Start_Execute *""'"); 
    }
    arg2 = reinterpret_cast< NamingEvent_Start_Execute * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "ContextIterator_Emit_Start_Execute" "', argument " "3"" of type '" "std::string""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "ContextIterator_Emit_Start_Execute" "', argument " "4"" of type '" "std::string""'"); 
      }
      arg4 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_sigc__trackable, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ContextIterator_Emit_Start_Execute" "', argument " "5"" of type '" "sigc::trackable *""'"); 
    }
    arg5 = reinterpret_cast< sigc::trackable * >(argp5);
    (*arg1)->Emit_Start_Execute(arg2,arg3,arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_Emit_Stop_Execute) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    NamingEvent_Stop_Execute *arg2 = (NamingEvent_Stop_Execute *) 0 ;
    std::string arg3 ;
    std::string arg4 ;
    sigc::trackable *arg5 = (sigc::trackable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: ContextIterator_Emit_Stop_Execute(self,e,olddn,newdn,ExtraData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_Emit_Stop_Execute" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_NamingEvent_Stop_Execute, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_Emit_Stop_Execute" "', argument " "2"" of type '" "NamingEvent_Stop_Execute *""'"); 
    }
    arg2 = reinterpret_cast< NamingEvent_Stop_Execute * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "ContextIterator_Emit_Stop_Execute" "', argument " "3"" of type '" "std::string""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "ContextIterator_Emit_Stop_Execute" "', argument " "4"" of type '" "std::string""'"); 
      }
      arg4 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_sigc__trackable, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ContextIterator_Emit_Stop_Execute" "', argument " "5"" of type '" "sigc::trackable *""'"); 
    }
    arg5 = reinterpret_cast< sigc::trackable * >(argp5);
    (*arg1)->Emit_Stop_Execute(arg2,arg3,arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_Emit_Created) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    NamingEvent_Created *arg2 = (NamingEvent_Created *) 0 ;
    Ferris::fh_context *arg3 = 0 ;
    std::string arg4 ;
    std::string arg5 ;
    sigc::trackable *arg6 = (sigc::trackable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp6 = 0 ;
    int res6 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: ContextIterator_Emit_Created(self,e,newc,olddn,newdn,ExtraData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_Emit_Created" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_NamingEvent_Created, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_Emit_Created" "', argument " "2"" of type '" "NamingEvent_Created *""'"); 
    }
    arg2 = reinterpret_cast< NamingEvent_Created * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Ferris__fh_context,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContextIterator_Emit_Created" "', argument " "3"" of type '" "Ferris::fh_context const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_Emit_Created" "', argument " "3"" of type '" "Ferris::fh_context const &""'"); 
    }
    arg3 = reinterpret_cast< Ferris::fh_context * >(argp3);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "ContextIterator_Emit_Created" "', argument " "4"" of type '" "std::string""'"); 
      }
      arg4 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "ContextIterator_Emit_Created" "', argument " "5"" of type '" "std::string""'"); 
      }
      arg5 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    res6 = SWIG_ConvertPtr(ST(5), &argp6,SWIGTYPE_p_sigc__trackable, 0 |  0 );
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ContextIterator_Emit_Created" "', argument " "6"" of type '" "sigc::trackable *""'"); 
    }
    arg6 = reinterpret_cast< sigc::trackable * >(argp6);
    (*arg1)->Emit_Created(arg2,(Ferris::fh_context const &)*arg3,arg4,arg5,arg6);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_Emit_Moved) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    NamingEvent_Moved *arg2 = (NamingEvent_Moved *) 0 ;
    std::string arg3 ;
    std::string arg4 ;
    sigc::trackable *arg5 = (sigc::trackable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: ContextIterator_Emit_Moved(self,e,olddn,newdn,ExtraData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_Emit_Moved" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_NamingEvent_Moved, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_Emit_Moved" "', argument " "2"" of type '" "NamingEvent_Moved *""'"); 
    }
    arg2 = reinterpret_cast< NamingEvent_Moved * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "ContextIterator_Emit_Moved" "', argument " "3"" of type '" "std::string""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "ContextIterator_Emit_Moved" "', argument " "4"" of type '" "std::string""'"); 
      }
      arg4 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_sigc__trackable, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ContextIterator_Emit_Moved" "', argument " "5"" of type '" "sigc::trackable *""'"); 
    }
    arg5 = reinterpret_cast< sigc::trackable * >(argp5);
    (*arg1)->Emit_Moved(arg2,arg3,arg4,arg5);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_Emit_Exists) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    NamingEvent_Exists *arg2 = (NamingEvent_Exists *) 0 ;
    Ferris::fh_context *arg3 = 0 ;
    std::string arg4 ;
    std::string arg5 ;
    sigc::trackable *arg6 = (sigc::trackable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp6 = 0 ;
    int res6 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: ContextIterator_Emit_Exists(self,e,newc,olddn,newdn,ExtraData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_Emit_Exists" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_NamingEvent_Exists, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_Emit_Exists" "', argument " "2"" of type '" "NamingEvent_Exists *""'"); 
    }
    arg2 = reinterpret_cast< NamingEvent_Exists * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Ferris__fh_context,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContextIterator_Emit_Exists" "', argument " "3"" of type '" "Ferris::fh_context const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_Emit_Exists" "', argument " "3"" of type '" "Ferris::fh_context const &""'"); 
    }
    arg3 = reinterpret_cast< Ferris::fh_context * >(argp3);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "ContextIterator_Emit_Exists" "', argument " "4"" of type '" "std::string""'"); 
      }
      arg4 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "ContextIterator_Emit_Exists" "', argument " "5"" of type '" "std::string""'"); 
      }
      arg5 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    res6 = SWIG_ConvertPtr(ST(5), &argp6,SWIGTYPE_p_sigc__trackable, 0 |  0 );
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ContextIterator_Emit_Exists" "', argument " "6"" of type '" "sigc::trackable *""'"); 
    }
    arg6 = reinterpret_cast< sigc::trackable * >(argp6);
    (*arg1)->Emit_Exists(arg2,(Ferris::fh_context const &)*arg3,arg4,arg5,arg6);
    ST(argvi) = sv_newmortal();
    
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_Emit_Start_Reading_Context) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    NamingEvent_Start_Reading_Context *arg2 = (NamingEvent_Start_Reading_Context *) 0 ;
    sigc::trackable *arg3 = (sigc::trackable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: ContextIterator_Emit_Start_Reading_Context(self,e,ExtraData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_Emit_Start_Reading_Context" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_NamingEvent_Start_Reading_Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_Emit_Start_Reading_Context" "', argument " "2"" of type '" "NamingEvent_Start_Reading_Context *""'"); 
    }
    arg2 = reinterpret_cast< NamingEvent_Start_Reading_Context * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_sigc__trackable, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContextIterator_Emit_Start_Reading_Context" "', argument " "3"" of type '" "sigc::trackable *""'"); 
    }
    arg3 = reinterpret_cast< sigc::trackable * >(argp3);
    (*arg1)->Emit_Start_Reading_Context(arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_Emit_Stop_Reading_Context) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    NamingEvent_Stop_Reading_Context *arg2 = (NamingEvent_Stop_Reading_Context *) 0 ;
    sigc::trackable *arg3 = (sigc::trackable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: ContextIterator_Emit_Stop_Reading_Context(self,e,ExtraData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_Emit_Stop_Reading_Context" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_NamingEvent_Stop_Reading_Context, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_Emit_Stop_Reading_Context" "', argument " "2"" of type '" "NamingEvent_Stop_Reading_Context *""'"); 
    }
    arg2 = reinterpret_cast< NamingEvent_Stop_Reading_Context * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_sigc__trackable, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContextIterator_Emit_Stop_Reading_Context" "', argument " "3"" of type '" "sigc::trackable *""'"); 
    }
    arg3 = reinterpret_cast< sigc::trackable * >(argp3);
    (*arg1)->Emit_Stop_Reading_Context(arg2,arg3);
    ST(argvi) = sv_newmortal();
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getURL) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getURL(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getURL" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (*arg1)->getURL();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_SubCreate_file) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    Ferris::fh_context arg2 ;
    Ferris::fh_context arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: ContextIterator_SubCreate_file(self,c,md);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_SubCreate_file" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_SubCreate_file" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_SubCreate_file" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContextIterator_SubCreate_file" "', argument " "3"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_SubCreate_file" "', argument " "3"" of type '" "Ferris::fh_context""'");
      } else {
        arg3 = *(reinterpret_cast< Ferris::fh_context * >(argp3));
      }
    }
    result = (*arg1)->SubCreate_file(arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_dumpRefDebugData) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_dumpRefDebugData(self,ss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_dumpRefDebugData" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_dumpRefDebugData" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_dumpRefDebugData" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    (*arg1)->dumpRefDebugData(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_splitPath) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    SwigValueWrapper< std::list< std::string > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_splitPath(self,dn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_splitPath" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_splitPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_splitPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->splitPath((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::Context::SplitPath_t(static_cast< const Ferris::Context::SplitPath_t& >(result))), SWIGTYPE_p_std__listT_std__string_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_unSplitPath) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    Ferris::Context::SplitPath_t *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_unSplitPath(self,pa);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_unSplitPath" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__listT_std__string_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_unSplitPath" "', argument " "2"" of type '" "Ferris::Context::SplitPath_t const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_unSplitPath" "', argument " "2"" of type '" "Ferris::Context::SplitPath_t const &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Context::SplitPath_t * >(argp2);
    result = (*arg1)->unSplitPath((Ferris::Context::SplitPath_t const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getMimeType__SWIG_0) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_getMimeType(self,fromContent);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getMimeType" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContextIterator_getMimeType" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (*arg1)->getMimeType(arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getMimeType__SWIG_1) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getMimeType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getMimeType" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (*arg1)->getMimeType();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getMimeType) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_getMimeType__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_getMimeType__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'ContextIterator_getMimeType'");
  XSRETURN(0);
}


XS(_wrap_ContextIterator_getFileType) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getFileType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getFileType" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (*arg1)->getFileType();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getMedallion) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::fh_medallion result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getMedallion(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getMedallion" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (*arg1)->getMedallion();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_medallion(static_cast< const Ferris::fh_medallion& >(result))), SWIGTYPE_p_Ferris__fh_medallion, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_hasMedallion) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_hasMedallion(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_hasMedallion" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (bool)(*arg1)->hasMedallion();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getNamespacePrefixes) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< std::list< std::string > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getNamespacePrefixes(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getNamespacePrefixes" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (*arg1)->getNamespacePrefixes();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::stringlist_t(static_cast< const Ferris::stringlist_t& >(result))), SWIGTYPE_p_std__listT_std__string_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getBranchFileSystem) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getBranchFileSystem(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getBranchFileSystem" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (*arg1)->getBranchFileSystem();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getNameExtension) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getNameExtension(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getNameExtension" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (*arg1)->getNameExtension();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getImage) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Image,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getImage(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getImage" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (*arg1)->getImage();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_image(static_cast< const Ferris::fh_image& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getImageOrNULL) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Image,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getImageOrNULL(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getImageOrNULL" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (*arg1)->getImageOrNULL();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_image(static_cast< const Ferris::fh_image& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_priv_getImage) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Image,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_priv_getImage(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_priv_getImage" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (*arg1)->priv_getImage();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_image(static_cast< const Ferris::fh_image& >(result))), SWIGTYPE_p_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_taintImage) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    SwigValueWrapper< Loki::SmartPtr< Ferris::Image,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_taintImage(self,im);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_taintImage" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_taintImage" "', argument " "2"" of type '" "Ferris::fh_image""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_taintImage" "', argument " "2"" of type '" "Ferris::fh_image""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_image * >(argp2));
      }
    }
    (*arg1)->taintImage(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_RegisterImageEAGeneratorModule) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    bool arg3 ;
    std::string *arg4 = 0 ;
    std::string *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    int res5 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: ContextIterator_RegisterImageEAGeneratorModule(self,ext,writable,implname,shortname);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_RegisterImageEAGeneratorModule" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_RegisterImageEAGeneratorModule" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_RegisterImageEAGeneratorModule" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContextIterator_RegisterImageEAGeneratorModule" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    {
      std::string *ptr = (std::string *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ContextIterator_RegisterImageEAGeneratorModule" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_RegisterImageEAGeneratorModule" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      arg4 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ContextIterator_RegisterImageEAGeneratorModule" "', argument " "5"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_RegisterImageEAGeneratorModule" "', argument " "5"" of type '" "std::string const &""'"); 
      }
      arg5 = ptr;
    }
    result = (bool)(*arg1)->RegisterImageEAGeneratorModule((std::string const &)*arg2,arg3,(std::string const &)*arg4,(std::string const &)*arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    if (SWIG_IsNewObj(res4)) delete arg4;
    if (SWIG_IsNewObj(res5)) delete arg5;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    if (SWIG_IsNewObj(res4)) delete arg4;
    if (SWIG_IsNewObj(res5)) delete arg5;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_UnrollRegisteredImageEAGeneratorModule) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    bool arg3 ;
    std::string *arg4 = 0 ;
    Ferris::Context::f_imageEAGenerator *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int res4 = SWIG_OLDOBJ ;
    void *argp5 ;
    int res5 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: ContextIterator_UnrollRegisteredImageEAGeneratorModule(self,ext,writable,implname,f);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_UnrollRegisteredImageEAGeneratorModule" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_UnrollRegisteredImageEAGeneratorModule" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_UnrollRegisteredImageEAGeneratorModule" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContextIterator_UnrollRegisteredImageEAGeneratorModule" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    {
      std::string *ptr = (std::string *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ContextIterator_UnrollRegisteredImageEAGeneratorModule" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_UnrollRegisteredImageEAGeneratorModule" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      arg4 = ptr;
    }
    res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_Loki__FunctorT_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ContextIterator_UnrollRegisteredImageEAGeneratorModule" "', argument " "5"" of type '" "Ferris::Context::f_imageEAGenerator const &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_UnrollRegisteredImageEAGeneratorModule" "', argument " "5"" of type '" "Ferris::Context::f_imageEAGenerator const &""'"); 
    }
    arg5 = reinterpret_cast< Ferris::Context::f_imageEAGenerator * >(argp5);
    result = (bool)(*arg1)->UnrollRegisteredImageEAGeneratorModule((std::string const &)*arg2,arg3,(std::string const &)*arg4,(Ferris::Context::f_imageEAGenerator const &)*arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    if (SWIG_IsNewObj(res4)) delete arg4;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    if (SWIG_IsNewObj(res4)) delete arg4;
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_isCompressedContext) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_isCompressedContext(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_isCompressedContext" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (bool)(*arg1)->isCompressedContext();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_addHandlableToBeReleasedWithContext) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    Ferris::Handlable *arg2 = (Ferris::Handlable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_addHandlableToBeReleasedWithContext(self,h);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_addHandlableToBeReleasedWithContext" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_Ferris__Handlable, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_addHandlableToBeReleasedWithContext" "', argument " "2"" of type '" "Ferris::Handlable *""'"); 
    }
    arg2 = reinterpret_cast< Ferris::Handlable * >(argp2);
    (*arg1)->addHandlableToBeReleasedWithContext(arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_SubCreate_dir) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    Ferris::fh_context arg2 ;
    Ferris::fh_context arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: ContextIterator_SubCreate_dir(self,c,md);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_SubCreate_dir" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_SubCreate_dir" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_SubCreate_dir" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContextIterator_SubCreate_dir" "', argument " "3"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_SubCreate_dir" "', argument " "3"" of type '" "Ferris::fh_context""'");
      } else {
        arg3 = *(reinterpret_cast< Ferris::fh_context * >(argp3));
      }
    }
    result = (*arg1)->SubCreate_dir(arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_dumpTree) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_dumpTree(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_dumpTree" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    (*arg1)->dumpTree();
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getLastPartOfName) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_getLastPartOfName(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getLastPartOfName" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_getLastPartOfName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_getLastPartOfName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (*arg1)->getLastPartOfName((std::string const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_appendToPath__SWIG_0) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: ContextIterator_appendToPath(self,p,d,allowDirToBeAbsolute);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_appendToPath" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_appendToPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_appendToPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContextIterator_appendToPath" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_appendToPath" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ContextIterator_appendToPath" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = (*arg1)->appendToPath((std::string const &)*arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_appendToPath__SWIG_1) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: ContextIterator_appendToPath(self,p,d);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_appendToPath" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_appendToPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_appendToPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContextIterator_appendToPath" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_appendToPath" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (*arg1)->appendToPath((std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_appendToPath) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_appendToPath__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_appendToPath__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'ContextIterator_appendToPath'");
  XSRETURN(0);
}


XS(_wrap_ContextIterator_getIStream__SWIG_0) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    Ferris::ferris_ios::openmode arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_getIStream(self,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getIStream" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContextIterator_getIStream" "', argument " "2"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg2 = static_cast< Ferris::ferris_ios::openmode >(val2);
    try {
      result = (*arg1)->getIStream(arg2);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getIStream__SWIG_1) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getIStream(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getIStream" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    try {
      result = (*arg1)->getIStream();
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getIStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_getIStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_getIStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'ContextIterator_getIStream'");
  XSRETURN(0);
}


XS(_wrap_ContextIterator_getLocalIStream__SWIG_0) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    Ferris::ferris_ios::openmode arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    unsigned long long val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: ContextIterator_getLocalIStream(self,new_dn,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getLocalIStream" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_getLocalIStream" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_getLocalIStream" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    ecode3 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContextIterator_getLocalIStream" "', argument " "3"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg3 = static_cast< Ferris::ferris_ios::openmode >(val3);
    try {
      result = (*arg1)->getLocalIStream(*arg2,arg3);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getLocalIStream__SWIG_1) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_istream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_getLocalIStream(self,new_dn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getLocalIStream" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextIterator_getLocalIStream" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextIterator_getLocalIStream" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    try {
      result = (*arg1)->getLocalIStream(*arg2);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_istream(static_cast< const Ferris::fh_istream& >(result))), SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getLocalIStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_getLocalIStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_getLocalIStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'ContextIterator_getLocalIStream'");
  XSRETURN(0);
}


XS(_wrap_ContextIterator_getIOStream__SWIG_0) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    Ferris::ferris_ios::openmode arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_getIOStream(self,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getIOStream" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContextIterator_getIOStream" "', argument " "2"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg2 = static_cast< Ferris::ferris_ios::openmode >(val2);
    try {
      result = (*arg1)->getIOStream(arg2);
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::AttributeNotWritable &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeNotWritable(static_cast< const Ferris::AttributeNotWritable& >(_e))),SWIGTYPE_p_Ferris__AttributeNotWritable,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getIOStream__SWIG_1) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    SwigValueWrapper< Ferris::Ferris_iostream< char,std::char_traits< char > > > result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getIOStream(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getIOStream" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    try {
      result = (*arg1)->getIOStream();
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::AttributeNotWritable &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::AttributeNotWritable(static_cast< const Ferris::AttributeNotWritable& >(_e))),SWIGTYPE_p_Ferris__AttributeNotWritable,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(Ferris::CanNotGetStream &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::CanNotGetStream(static_cast< const Ferris::CanNotGetStream& >(_e))),SWIGTYPE_p_Ferris__CanNotGetStream,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    catch(std::exception &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::exception(static_cast< const std::exception& >(_e))),SWIGTYPE_p_std__exception,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_iostream(static_cast< const Ferris::fh_iostream& >(result))), SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getIOStream) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_getIOStream__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ContextIterator_getIOStream__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'ContextIterator_getIOStream'");
  XSRETURN(0);
}


XS(_wrap_ContextIterator_checkOpenModeSupported) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    Ferris::ferris_ios::openmode arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned long long val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextIterator_checkOpenModeSupported(self,userm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_checkOpenModeSupported" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ContextIterator_checkOpenModeSupported" "', argument " "2"" of type '" "Ferris::ferris_ios::openmode""'");
    } 
    arg2 = static_cast< Ferris::ferris_ios::openmode >(val2);
    result = (bool)(*arg1)->checkOpenModeSupported(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getSupportedOpenModes) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::ferris_ios::openmode result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getSupportedOpenModes(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getSupportedOpenModes" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (Ferris::ferris_ios::openmode)(*arg1)->getSupportedOpenModes();
    ST(argvi) = SWIG_From_unsigned_SS_long_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long long >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getDirPath) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getDirPath(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getDirPath" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    try {
      result = (*arg1)->getDirPath();
    }
    catch(Ferris::FerrisParentNotSetError &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::FerrisParentNotSetError(static_cast< const Ferris::FerrisParentNotSetError& >(_e))),SWIGTYPE_p_Ferris__FerrisParentNotSetError,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getSubContextCount) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getSubContextCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getSubContextCount" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (int)(*arg1)->getSubContextCount();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_empty) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_empty(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_empty" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (bool)(*arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getNamingEvent_MedallionUpdated_Sig) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_MedallionUpdated_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getNamingEvent_MedallionUpdated_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getNamingEvent_MedallionUpdated_Sig" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_MedallionUpdated_Sig_t *) &(*arg1)->getNamingEvent_MedallionUpdated_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal1T_void_Ferris__fh_context_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getNamingEvent_Changed_Sig) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Changed_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getNamingEvent_Changed_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getNamingEvent_Changed_Sig" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Changed_Sig_t *) &(*arg1)->getNamingEvent_Changed_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal3T_void_NamingEvent_Changed_p_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getNamingEvent_Deleted_Sig) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Deleted_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getNamingEvent_Deleted_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getNamingEvent_Deleted_Sig" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Deleted_Sig_t *) &(*arg1)->getNamingEvent_Deleted_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal3T_void_NamingEvent_Deleted_p_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getNamingEvent_Start_Execute_Sig) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Start_Execute_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getNamingEvent_Start_Execute_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getNamingEvent_Start_Execute_Sig" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Start_Execute_Sig_t *) &(*arg1)->getNamingEvent_Start_Execute_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal3T_void_NamingEvent_Start_Execute_p_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getNamingEvent_Stop_Execute_Sig) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Stop_Execute_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getNamingEvent_Stop_Execute_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getNamingEvent_Stop_Execute_Sig" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Stop_Execute_Sig_t *) &(*arg1)->getNamingEvent_Stop_Execute_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal3T_void_NamingEvent_Stop_Execute_p_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getNamingEvent_Created_Sig) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Created_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getNamingEvent_Created_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getNamingEvent_Created_Sig" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Created_Sig_t *) &(*arg1)->getNamingEvent_Created_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal4T_void_NamingEvent_Created_p_Ferris__fh_context_const_R_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getNamingEvent_Moved_Sig) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Moved_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getNamingEvent_Moved_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getNamingEvent_Moved_Sig" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Moved_Sig_t *) &(*arg1)->getNamingEvent_Moved_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal3T_void_NamingEvent_Moved_p_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getNamingEvent_Exists_Sig) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Exists_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getNamingEvent_Exists_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getNamingEvent_Exists_Sig" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Exists_Sig_t *) &(*arg1)->getNamingEvent_Exists_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal4T_void_NamingEvent_Exists_p_Ferris__fh_context_const_R_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getNamingEvent_Start_Reading_Context_Sig) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Start_Reading_Context_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getNamingEvent_Start_Reading_Context_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getNamingEvent_Start_Reading_Context_Sig" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Start_Reading_Context_Sig_t *) &(*arg1)->getNamingEvent_Start_Reading_Context_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal1T_void_NamingEvent_Start_Reading_Context_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getNamingEvent_Stop_Reading_Context_Sig) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Stop_Reading_Context_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getNamingEvent_Stop_Reading_Context_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getNamingEvent_Stop_Reading_Context_Sig" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Stop_Reading_Context_Sig_t *) &(*arg1)->getNamingEvent_Stop_Reading_Context_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal1T_void_NamingEvent_Stop_Reading_Context_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextIterator_getContextEvent_Headers_Received_Sig) {
  {
    Ferris::ContextIterator *arg1 = (Ferris::ContextIterator *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::ContextEvent_Headers_Received_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextIterator_getContextEvent_Headers_Received_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextIterator, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextIterator_getContextEvent_Headers_Received_Sig" "', argument " "1"" of type '" "Ferris::ContextIterator *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    result = (Ferris::MutableCollectionEvents::ContextEvent_Headers_Received_Sig_t *) &(*arg1)->getContextEvent_Headers_Received_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal2T_void_Ferris__fh_context_Ferris__stringset_t_const_R_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap___sub__) {
  {
    Ferris::ContextIterator *arg1 = 0 ;
    Ferris::ContextIterator *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    Ferris::ContextIterator::difference_type result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: __sub__(x,y);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__ContextIterator,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__sub__" "', argument " "1"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__sub__" "', argument " "1"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__ContextIterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__sub__" "', argument " "2"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__sub__" "', argument " "2"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::ContextIterator * >(argp2);
    result = (Ferris::ContextIterator::difference_type)Ferris::operator -((Ferris::ContextIterator const &)*arg1,(Ferris::ContextIterator const &)*arg2);
    ST(argvi) = SWIG_From_long  SWIG_PERL_CALL_ARGS_1(static_cast< long >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap___eq____SWIG_0) {
  {
    Ferris::ContextIterator *arg1 = 0 ;
    Ferris::ContextIterator *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: __eq__(x,y);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__ContextIterator,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__eq__" "', argument " "1"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__eq__" "', argument " "1"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__ContextIterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__eq__" "', argument " "2"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__eq__" "', argument " "2"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::ContextIterator * >(argp2);
    result = (bool)Ferris::operator ==((Ferris::ContextIterator const &)*arg1,(Ferris::ContextIterator const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap___lt__) {
  {
    Ferris::ContextIterator *arg1 = 0 ;
    Ferris::ContextIterator *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: __lt__(x,y);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__ContextIterator,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__lt__" "', argument " "1"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__lt__" "', argument " "1"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__ContextIterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__lt__" "', argument " "2"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__lt__" "', argument " "2"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::ContextIterator * >(argp2);
    result = (bool)Ferris::operator <((Ferris::ContextIterator const &)*arg1,(Ferris::ContextIterator const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap___ne____SWIG_0) {
  {
    Ferris::ContextIterator *arg1 = 0 ;
    Ferris::ContextIterator *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: __ne__(x,y);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__ContextIterator,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__ne__" "', argument " "1"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__ne__" "', argument " "1"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__ContextIterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__ne__" "', argument " "2"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__ne__" "', argument " "2"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::ContextIterator * >(argp2);
    result = (bool)Ferris::operator !=((Ferris::ContextIterator const &)*arg1,(Ferris::ContextIterator const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap___gt__) {
  {
    Ferris::ContextIterator *arg1 = 0 ;
    Ferris::ContextIterator *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: __gt__(x,y);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__ContextIterator,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__gt__" "', argument " "1"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__gt__" "', argument " "1"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__ContextIterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__gt__" "', argument " "2"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__gt__" "', argument " "2"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::ContextIterator * >(argp2);
    result = (bool)Ferris::operator >((Ferris::ContextIterator const &)*arg1,(Ferris::ContextIterator const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap___le__) {
  {
    Ferris::ContextIterator *arg1 = 0 ;
    Ferris::ContextIterator *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: __le__(x,y);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__ContextIterator,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__le__" "', argument " "1"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__le__" "', argument " "1"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__ContextIterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__le__" "', argument " "2"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__le__" "', argument " "2"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::ContextIterator * >(argp2);
    result = (bool)Ferris::operator <=((Ferris::ContextIterator const &)*arg1,(Ferris::ContextIterator const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap___ge__) {
  {
    Ferris::ContextIterator *arg1 = 0 ;
    Ferris::ContextIterator *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: __ge__(x,y);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__ContextIterator,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__ge__" "', argument " "1"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__ge__" "', argument " "1"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextIterator * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__ContextIterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__ge__" "', argument " "2"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__ge__" "', argument " "2"" of type '" "Ferris::ContextIterator const &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::ContextIterator * >(argp2);
    result = (bool)Ferris::operator >=((Ferris::ContextIterator const &)*arg1,(Ferris::ContextIterator const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_getIOErrorDescription__SWIG_0) {
  {
    Ferris::fh_istream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: getIOErrorDescription(ss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getIOErrorDescription" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getIOErrorDescription" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_istream * >(argp1);
    result = Ferris::getIOErrorDescription(*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_getIOErrorDescription__SWIG_1) {
  {
    Ferris::fh_ostream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: getIOErrorDescription(ss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getIOErrorDescription" "', argument " "1"" of type '" "Ferris::fh_ostream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getIOErrorDescription" "', argument " "1"" of type '" "Ferris::fh_ostream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_ostream * >(argp1);
    result = Ferris::getIOErrorDescription(*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_getIOErrorDescription__SWIG_2) {
  {
    Ferris::fh_iostream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: getIOErrorDescription(ss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getIOErrorDescription" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getIOErrorDescription" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_iostream * >(argp1);
    result = Ferris::getIOErrorDescription(*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_getIOErrorDescription__SWIG_3) {
  {
    Ferris::fh_istream *arg1 = 0 ;
    Ferris::fh_context arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: getIOErrorDescription(ss,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getIOErrorDescription" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getIOErrorDescription" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_istream * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getIOErrorDescription" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getIOErrorDescription" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    result = Ferris::getIOErrorDescription(*arg1,arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_getIOErrorDescription__SWIG_4) {
  {
    Ferris::fh_ostream *arg1 = 0 ;
    Ferris::fh_context arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: getIOErrorDescription(ss,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getIOErrorDescription" "', argument " "1"" of type '" "Ferris::fh_ostream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getIOErrorDescription" "', argument " "1"" of type '" "Ferris::fh_ostream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_ostream * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getIOErrorDescription" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getIOErrorDescription" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    result = Ferris::getIOErrorDescription(*arg1,arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_getIOErrorDescription__SWIG_5) {
  {
    Ferris::fh_iostream *arg1 = 0 ;
    Ferris::fh_context arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: getIOErrorDescription(ss,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getIOErrorDescription" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getIOErrorDescription" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_iostream * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getIOErrorDescription" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getIOErrorDescription" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    result = Ferris::getIOErrorDescription(*arg1,arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_getIOErrorDescription__SWIG_6) {
  {
    Ferris::fh_istream *arg1 = 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: getIOErrorDescription(ss,earl);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getIOErrorDescription" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getIOErrorDescription" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_istream * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getIOErrorDescription" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getIOErrorDescription" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = Ferris::getIOErrorDescription(*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_getIOErrorDescription__SWIG_7) {
  {
    Ferris::fh_ostream *arg1 = 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: getIOErrorDescription(ss,earl);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getIOErrorDescription" "', argument " "1"" of type '" "Ferris::fh_ostream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getIOErrorDescription" "', argument " "1"" of type '" "Ferris::fh_ostream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_ostream * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getIOErrorDescription" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getIOErrorDescription" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = Ferris::getIOErrorDescription(*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_getIOErrorDescription__SWIG_8) {
  {
    Ferris::fh_iostream *arg1 = 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: getIOErrorDescription(ss,earl);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getIOErrorDescription" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getIOErrorDescription" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_iostream * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getIOErrorDescription" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getIOErrorDescription" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = Ferris::getIOErrorDescription(*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_getIOErrorDescription) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 6;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_6:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 7;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_7:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 8;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_8:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_9;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_9;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 9;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_9:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getIOErrorDescription__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getIOErrorDescription__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getIOErrorDescription__SWIG_2); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getIOErrorDescription__SWIG_3); return;
    case 5:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getIOErrorDescription__SWIG_4); return;
    case 6:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getIOErrorDescription__SWIG_5); return;
    case 7:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getIOErrorDescription__SWIG_6); return;
    case 8:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getIOErrorDescription__SWIG_7); return;
    case 9:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getIOErrorDescription__SWIG_8); return;
    }
  }
  
  croak("No matching function for overloaded 'getIOErrorDescription'");
  XSRETURN(0);
}


XS(_wrap_haveIOError__SWIG_0) {
  {
    Ferris::fh_istream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: haveIOError(ss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "haveIOError" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "haveIOError" "', argument " "1"" of type '" "Ferris::fh_istream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_istream * >(argp1);
    result = (bool)Ferris::haveIOError(*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_haveIOError__SWIG_1) {
  {
    Ferris::fh_ostream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: haveIOError(ss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "haveIOError" "', argument " "1"" of type '" "Ferris::fh_ostream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "haveIOError" "', argument " "1"" of type '" "Ferris::fh_ostream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_ostream * >(argp1);
    result = (bool)Ferris::haveIOError(*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_haveIOError__SWIG_2) {
  {
    Ferris::fh_iostream *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: haveIOError(ss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "haveIOError" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "haveIOError" "', argument " "1"" of type '" "Ferris::fh_iostream &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_iostream * >(argp1);
    result = (bool)Ferris::haveIOError(*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_haveIOError) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_haveIOError__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_haveIOError__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_haveIOError__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'haveIOError'");
  XSRETURN(0);
}


XS(_wrap_saveFile__SWIG_0) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    bool arg4 ;
    bool arg5 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: saveFile(parentURL,rdn_raw,byteContent,shouldMonsterName,overwrite);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "saveFile" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "saveFile" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "saveFile" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "saveFile" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "saveFile" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "saveFile" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "saveFile" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "saveFile" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    result = Ferris::saveFile((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_saveFile__SWIG_1) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    bool arg4 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: saveFile(parentURL,rdn_raw,byteContent,shouldMonsterName);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "saveFile" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "saveFile" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "saveFile" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "saveFile" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "saveFile" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "saveFile" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "saveFile" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = Ferris::saveFile((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_saveFile__SWIG_2) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: saveFile(parentURL,rdn_raw,byteContent);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "saveFile" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "saveFile" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "saveFile" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "saveFile" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "saveFile" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "saveFile" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = Ferris::saveFile((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_saveFile) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_saveFile__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_saveFile__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_saveFile__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'saveFile'");
  XSRETURN(0);
}


XS(_wrap_getStrAttr__SWIG_0) {
  {
    Ferris::AttributeCollection *arg1 = (Ferris::AttributeCollection *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    bool arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: getStrAttr(c,rdn,def,getAllLines);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__AttributeCollection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getStrAttr" "', argument " "1"" of type '" "Ferris::AttributeCollection *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::AttributeCollection * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "getStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "getStrAttr" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = Ferris::getStrAttr(arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_getStrAttr__SWIG_1) {
  {
    Ferris::AttributeCollection *arg1 = (Ferris::AttributeCollection *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: getStrAttr(c,rdn,def);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__AttributeCollection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getStrAttr" "', argument " "1"" of type '" "Ferris::AttributeCollection *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::AttributeCollection * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "getStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = Ferris::getStrAttr(arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_getStrAttr__SWIG_2) {
  {
    Ferris::fh_context *arg1 = 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    bool arg4 ;
    bool arg5 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: getStrAttr(c,rdn,def,getAllLines,throw_for_errors);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getStrAttr" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrAttr" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "getStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "getStrAttr" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "getStrAttr" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    result = Ferris::getStrAttr((Ferris::fh_context const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_getStrAttr__SWIG_3) {
  {
    Ferris::fh_context *arg1 = 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    bool arg4 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: getStrAttr(c,rdn,def,getAllLines);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getStrAttr" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrAttr" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "getStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "getStrAttr" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = Ferris::getStrAttr((Ferris::fh_context const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_getStrAttr__SWIG_4) {
  {
    Ferris::fh_context *arg1 = 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: getStrAttr(c,rdn,def);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getStrAttr" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrAttr" "', argument " "1"" of type '" "Ferris::fh_context const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "getStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = Ferris::getStrAttr((Ferris::fh_context const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_getStrAttr__SWIG_5) {
  {
    std::string arg1 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    bool arg4 ;
    bool arg5 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: getStrAttr(earl,rdn,def,getAllLines,throw_for_errors);");
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getStrAttr" "', argument " "1"" of type '" "std::string""'"); 
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "getStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "getStrAttr" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "getStrAttr" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    result = Ferris::getStrAttr(arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_getStrAttr__SWIG_6) {
  {
    std::string arg1 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    bool arg4 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: getStrAttr(earl,rdn,def,getAllLines);");
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getStrAttr" "', argument " "1"" of type '" "std::string""'"); 
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "getStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "getStrAttr" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = Ferris::getStrAttr(arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_getStrAttr__SWIG_7) {
  {
    std::string arg1 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: getStrAttr(earl,rdn,def);");
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getStrAttr" "', argument " "1"" of type '" "std::string""'"); 
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "getStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = Ferris::getStrAttr(arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_getStrAttr) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__AttributeCollection, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__AttributeCollection, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 6;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_6:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 7;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_7:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 8;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_8:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getStrAttr__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getStrAttr__SWIG_4); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getStrAttr__SWIG_7); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getStrAttr__SWIG_0); return;
    case 5:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getStrAttr__SWIG_3); return;
    case 6:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getStrAttr__SWIG_6); return;
    case 7:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getStrAttr__SWIG_2); return;
    case 8:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getStrAttr__SWIG_5); return;
    }
  }
  
  croak("No matching function for overloaded 'getStrAttr'");
  XSRETURN(0);
}


XS(_wrap_setChild) {
  {
    Ferris::fh_context arg1 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: setChild(c,rdn,v);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "setChild" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setChild" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "setChild" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setChild" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "setChild" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setChild" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = Ferris::setChild(arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_setStrAttr__SWIG_0) {
  {
    Ferris::fh_context arg1 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    bool arg4 ;
    bool arg5 ;
    bool arg6 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    bool val6 ;
    int ecode6 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: setStrAttr(c,rdn,v,create,throw_for_errors,dontDelegateToOvermountContext);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "setStrAttr" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setStrAttr" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "setStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "setStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "setStrAttr" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "setStrAttr" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    ecode6 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "setStrAttr" "', argument " "6"" of type '" "bool""'");
    } 
    arg6 = static_cast< bool >(val6);
    result = Ferris::setStrAttr(arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_setStrAttr__SWIG_1) {
  {
    Ferris::fh_context arg1 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    bool arg4 ;
    bool arg5 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: setStrAttr(c,rdn,v,create,throw_for_errors);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "setStrAttr" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setStrAttr" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "setStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "setStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "setStrAttr" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "setStrAttr" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    result = Ferris::setStrAttr(arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_setStrAttr__SWIG_2) {
  {
    Ferris::fh_context arg1 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    bool arg4 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: setStrAttr(c,rdn,v,create);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "setStrAttr" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setStrAttr" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "setStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "setStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "setStrAttr" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = Ferris::setStrAttr(arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_setStrAttr__SWIG_3) {
  {
    Ferris::fh_context arg1 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: setStrAttr(c,rdn,v);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "setStrAttr" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setStrAttr" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "setStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setStrAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "setStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setStrAttr" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = Ferris::setStrAttr(arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_setStrAttr) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 6) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_setStrAttr__SWIG_3); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_setStrAttr__SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_setStrAttr__SWIG_1); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_setStrAttr__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'setStrAttr'");
  XSRETURN(0);
}


XS(_wrap_getTimeAttr__SWIG_0) {
  {
    Ferris::fh_context arg1 ;
    std::string *arg2 = 0 ;
    time_t arg3 ;
    bool arg4 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: getTimeAttr(c,rdn,v,throw_for_errors);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getTimeAttr" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getTimeAttr" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getTimeAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getTimeAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_time_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "getTimeAttr" "', argument " "3"" of type '" "time_t""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getTimeAttr" "', argument " "3"" of type '" "time_t""'");
      } else {
        arg3 = *(reinterpret_cast< time_t * >(argp3));
      }
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "getTimeAttr" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = Ferris::getTimeAttr(arg1,(std::string const &)*arg2,arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_getTimeAttr__SWIG_1) {
  {
    Ferris::fh_context arg1 ;
    std::string *arg2 = 0 ;
    time_t arg3 ;
    void *argp1 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    time_t result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: getTimeAttr(c,rdn,v);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getTimeAttr" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getTimeAttr" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getTimeAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getTimeAttr" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_time_t,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "getTimeAttr" "', argument " "3"" of type '" "time_t""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getTimeAttr" "', argument " "3"" of type '" "time_t""'");
      } else {
        arg3 = *(reinterpret_cast< time_t * >(argp3));
      }
    }
    result = Ferris::getTimeAttr(arg1,(std::string const &)*arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj((new time_t(static_cast< const time_t& >(result))), SWIGTYPE_p_time_t, SWIG_POINTER_OWN | 0); argvi++ ;
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_getTimeAttr) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_time_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_time_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getTimeAttr__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getTimeAttr__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'getTimeAttr'");
  XSRETURN(0);
}


XS(_wrap_getStrSubCtx__SWIG_0) {
  {
    Ferris::fh_context arg1 ;
    std::string arg2 ;
    std::string arg3 ;
    bool arg4 ;
    bool arg5 ;
    void *argp1 ;
    int res1 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: getStrSubCtx(c,subname,def,getAllLines,throw_for_errors);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getStrSubCtx" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrSubCtx" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getStrSubCtx" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getStrSubCtx" "', argument " "3"" of type '" "std::string""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "getStrSubCtx" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "getStrSubCtx" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    result = Ferris::getStrSubCtx(arg1,arg2,arg3,arg4,arg5);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_getStrSubCtx__SWIG_1) {
  {
    Ferris::fh_context arg1 ;
    std::string arg2 ;
    std::string arg3 ;
    bool arg4 ;
    void *argp1 ;
    int res1 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: getStrSubCtx(c,subname,def,getAllLines);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getStrSubCtx" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrSubCtx" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getStrSubCtx" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getStrSubCtx" "', argument " "3"" of type '" "std::string""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "getStrSubCtx" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = Ferris::getStrSubCtx(arg1,arg2,arg3,arg4);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_getStrSubCtx__SWIG_2) {
  {
    Ferris::fh_context arg1 ;
    std::string arg2 ;
    std::string arg3 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: getStrSubCtx(c,subname,def);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getStrSubCtx" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrSubCtx" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getStrSubCtx" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getStrSubCtx" "', argument " "3"" of type '" "std::string""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = Ferris::getStrSubCtx(arg1,arg2,arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_getStrSubCtx__SWIG_3) {
  {
    std::string *arg1 = 0 ;
    std::string arg2 ;
    std::string arg3 ;
    bool arg4 ;
    bool arg5 ;
    int res1 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    bool val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: getStrSubCtx(earl,subname,def,getAllLines,throw_for_errors);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getStrSubCtx" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrSubCtx" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getStrSubCtx" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getStrSubCtx" "', argument " "3"" of type '" "std::string""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "getStrSubCtx" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    ecode5 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "getStrSubCtx" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
    result = Ferris::getStrSubCtx((std::string const &)*arg1,arg2,arg3,arg4,arg5);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_getStrSubCtx__SWIG_4) {
  {
    std::string *arg1 = 0 ;
    std::string arg2 ;
    std::string arg3 ;
    bool arg4 ;
    int res1 = SWIG_OLDOBJ ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: getStrSubCtx(earl,subname,def,getAllLines);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getStrSubCtx" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrSubCtx" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getStrSubCtx" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getStrSubCtx" "', argument " "3"" of type '" "std::string""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "getStrSubCtx" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = Ferris::getStrSubCtx((std::string const &)*arg1,arg2,arg3,arg4);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_getStrSubCtx__SWIG_5) {
  {
    std::string *arg1 = 0 ;
    std::string arg2 ;
    std::string arg3 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: getStrSubCtx(earl,subname,def);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getStrSubCtx" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrSubCtx" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getStrSubCtx" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getStrSubCtx" "', argument " "3"" of type '" "std::string""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = Ferris::getStrSubCtx((std::string const &)*arg1,arg2,arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_getStrSubCtx__SWIG_6) {
  {
    std::string *arg1 = 0 ;
    std::string arg2 ;
    bool arg3 ;
    bool arg4 ;
    int res1 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: getStrSubCtx(earl,def,getAllLines,throw_for_errors);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getStrSubCtx" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrSubCtx" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getStrSubCtx" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "getStrSubCtx" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "getStrSubCtx" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = Ferris::getStrSubCtx((std::string const &)*arg1,arg2,arg3,arg4);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_getStrSubCtx__SWIG_7) {
  {
    std::string *arg1 = 0 ;
    std::string arg2 ;
    bool arg3 ;
    int res1 = SWIG_OLDOBJ ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: getStrSubCtx(earl,def,getAllLines);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getStrSubCtx" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrSubCtx" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getStrSubCtx" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "getStrSubCtx" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = Ferris::getStrSubCtx((std::string const &)*arg1,arg2,arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_getStrSubCtx__SWIG_8) {
  {
    std::string *arg1 = 0 ;
    std::string arg2 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: getStrSubCtx(earl,def);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getStrSubCtx" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getStrSubCtx" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getStrSubCtx" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = Ferris::getStrSubCtx((std::string const &)*arg1,arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    SWIG_croak_null();
  }
}


XS(_wrap_getStrSubCtx) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 6;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_6:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 7;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_7:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_8;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 8;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_8:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_9;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_9;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_9;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_9;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_9;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 9;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_9:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getStrSubCtx__SWIG_8); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getStrSubCtx__SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getStrSubCtx__SWIG_7); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getStrSubCtx__SWIG_5); return;
    case 5:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getStrSubCtx__SWIG_1); return;
    case 6:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getStrSubCtx__SWIG_6); return;
    case 7:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getStrSubCtx__SWIG_4); return;
    case 8:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getStrSubCtx__SWIG_0); return;
    case 9:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_getStrSubCtx__SWIG_3); return;
    }
  }
  
  croak("No matching function for overloaded 'getStrSubCtx'");
  XSRETURN(0);
}


XS(_wrap_new_CacheManager) {
  {
    int argvi = 0;
    Ferris::CacheManager *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CacheManager();");
    }
    result = (Ferris::CacheManager *)new Ferris::CacheManager();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CacheManager, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CacheManager) {
  {
    Ferris::CacheManager *arg1 = (Ferris::CacheManager *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CacheManager(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__CacheManager, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CacheManager" "', argument " "1"" of type '" "Ferris::CacheManager *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::CacheManager * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CacheManager_dumpFreeListTo) {
  {
    Ferris::CacheManager *arg1 = (Ferris::CacheManager *) 0 ;
    SwigValueWrapper< Ferris::Ferris_ostream< char,std::char_traits< char > > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CacheManager_dumpFreeListTo(self,ss);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__CacheManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CacheManager_dumpFreeListTo" "', argument " "1"" of type '" "Ferris::CacheManager *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::CacheManager * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CacheManager_dumpFreeListTo" "', argument " "2"" of type '" "Ferris::fh_ostream""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CacheManager_dumpFreeListTo" "', argument " "2"" of type '" "Ferris::fh_ostream""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_ostream * >(argp2));
      }
    }
    (arg1)->dumpFreeListTo(arg2);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CacheManager_cleanUp__SWIG_0) {
  {
    Ferris::CacheManager *arg1 = (Ferris::CacheManager *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CacheManager_cleanUp(self,force);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__CacheManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CacheManager_cleanUp" "', argument " "1"" of type '" "Ferris::CacheManager *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::CacheManager * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CacheManager_cleanUp" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (int)(arg1)->cleanUp(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CacheManager_cleanUp__SWIG_1) {
  {
    Ferris::CacheManager *arg1 = (Ferris::CacheManager *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CacheManager_cleanUp(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__CacheManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CacheManager_cleanUp" "', argument " "1"" of type '" "Ferris::CacheManager *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::CacheManager * >(argp1);
    result = (int)(arg1)->cleanUp();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CacheManager_cleanUp) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__CacheManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__CacheManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_CacheManager_cleanUp__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_CacheManager_cleanUp__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CacheManager_cleanUp'");
  XSRETURN(0);
}


XS(_wrap_CacheManager_shouldAutoCleanUp) {
  {
    Ferris::CacheManager *arg1 = (Ferris::CacheManager *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CacheManager_shouldAutoCleanUp(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__CacheManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CacheManager_shouldAutoCleanUp" "', argument " "1"" of type '" "Ferris::CacheManager *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::CacheManager * >(argp1);
    result = (bool)(arg1)->shouldAutoCleanUp();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CacheManager_insideCleanupCall) {
  {
    Ferris::CacheManager *arg1 = (Ferris::CacheManager *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CacheManager_insideCleanupCall(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__CacheManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CacheManager_insideCleanupCall" "', argument " "1"" of type '" "Ferris::CacheManager *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::CacheManager * >(argp1);
    result = (bool)(arg1)->insideCleanupCall();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CacheManager_cleanUp_only_CreateMetaDataContext__SWIG_0) {
  {
    Ferris::CacheManager *arg1 = (Ferris::CacheManager *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CacheManager_cleanUp_only_CreateMetaDataContext(self,force);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__CacheManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CacheManager_cleanUp_only_CreateMetaDataContext" "', argument " "1"" of type '" "Ferris::CacheManager *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::CacheManager * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CacheManager_cleanUp_only_CreateMetaDataContext" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (int)(arg1)->cleanUp_only_CreateMetaDataContext(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CacheManager_cleanUp_only_CreateMetaDataContext__SWIG_1) {
  {
    Ferris::CacheManager *arg1 = (Ferris::CacheManager *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: CacheManager_cleanUp_only_CreateMetaDataContext(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__CacheManager, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CacheManager_cleanUp_only_CreateMetaDataContext" "', argument " "1"" of type '" "Ferris::CacheManager *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::CacheManager * >(argp1);
    result = (int)(arg1)->cleanUp_only_CreateMetaDataContext();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CacheManager_cleanUp_only_CreateMetaDataContext) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__CacheManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__CacheManager, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_CacheManager_cleanUp_only_CreateMetaDataContext__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_CacheManager_cleanUp_only_CreateMetaDataContext__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'CacheManager_cleanUp_only_CreateMetaDataContext'");
  XSRETURN(0);
}


XS(_wrap_getCacheManager) {
  {
    int argvi = 0;
    Ferris::CacheManager *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: getCacheManager();");
    }
    result = (Ferris::CacheManager *)Ferris::getCacheManager();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__CacheManager, 0 | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_DEBUG_dumpcl) {
  {
    std::string arg1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: DEBUG_dumpcl(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "DEBUG_dumpcl" "', argument " "1"" of type '" "std::string""'"); 
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    Ferris::DEBUG_dumpcl(arg1);
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_DEBUG_dumpcl_to_file) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: DEBUG_dumpcl_to_file(filenamePrefix);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DEBUG_dumpcl_to_file" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DEBUG_dumpcl_to_file" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    Ferris::DEBUG_dumpcl_to_file((std::string const &)*arg1);
    ST(argvi) = sv_newmortal();
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_delete_ContextCollection) {
  {
    Ferris::ContextCollection *arg1 = (Ferris::ContextCollection *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_ContextCollection(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextCollection, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ContextCollection" "', argument " "1"" of type '" "Ferris::ContextCollection *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextCollection * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextCollection_getSubContextNames) {
  {
    Ferris::ContextCollection *arg1 = (Ferris::ContextCollection *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::ContextCollection::SubContextNames_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextCollection_getSubContextNames(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextCollection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextCollection_getSubContextNames" "', argument " "1"" of type '" "Ferris::ContextCollection *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextCollection * >(argp1);
    result = (Ferris::ContextCollection::SubContextNames_t *) &(arg1)->getSubContextNames();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__listT_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextCollection_isSubContextBound) {
  {
    Ferris::ContextCollection *arg1 = (Ferris::ContextCollection *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextCollection_isSubContextBound(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextCollection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextCollection_isSubContextBound" "', argument " "1"" of type '" "Ferris::ContextCollection *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextCollection * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextCollection_isSubContextBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextCollection_isSubContextBound" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->isSubContextBound((std::string const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextCollection_getSubContext) {
  {
    Ferris::ContextCollection *arg1 = (Ferris::ContextCollection *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ContextCollection_getSubContext(self,rdn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextCollection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextCollection_getSubContext" "', argument " "1"" of type '" "Ferris::ContextCollection *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextCollection * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContextCollection_getSubContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContextCollection_getSubContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    try {
      result = (arg1)->getSubContext((std::string const &)*arg2);
    }
    catch(Ferris::NoSuchSubContext &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new Ferris::NoSuchSubContext(static_cast< const Ferris::NoSuchSubContext& >(_e))),SWIGTYPE_p_Ferris__NoSuchSubContext,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_ContextCollection_SubContextCount) {
  {
    Ferris::ContextCollection *arg1 = (Ferris::ContextCollection *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextCollection_SubContextCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextCollection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextCollection_SubContextCount" "', argument " "1"" of type '" "Ferris::ContextCollection *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextCollection * >(argp1);
    result = (int)(arg1)->SubContextCount();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextCollection_getSubContextCount) {
  {
    Ferris::ContextCollection *arg1 = (Ferris::ContextCollection *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    int result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextCollection_getSubContextCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextCollection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextCollection_getSubContextCount" "', argument " "1"" of type '" "Ferris::ContextCollection *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextCollection * >(argp1);
    result = (int)(arg1)->getSubContextCount();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ContextCollection_empty) {
  {
    Ferris::ContextCollection *arg1 = (Ferris::ContextCollection *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ContextCollection_empty(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__ContextCollection, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContextCollection_empty" "', argument " "1"" of type '" "Ferris::ContextCollection *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextCollection * >(argp1);
    result = (bool)(arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_MutableCollectionEvents) {
  {
    Ferris::MutableCollectionEvents *arg1 = (Ferris::MutableCollectionEvents *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_MutableCollectionEvents(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__MutableCollectionEvents, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MutableCollectionEvents" "', argument " "1"" of type '" "Ferris::MutableCollectionEvents *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::MutableCollectionEvents * >(argp1);
    delete arg1;
    ST(argvi) = sv_newmortal();
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MutableCollectionEvents_getNamingEvent_MedallionUpdated_Sig) {
  {
    Ferris::MutableCollectionEvents *arg1 = (Ferris::MutableCollectionEvents *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_MedallionUpdated_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MutableCollectionEvents_getNamingEvent_MedallionUpdated_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__MutableCollectionEvents, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MutableCollectionEvents_getNamingEvent_MedallionUpdated_Sig" "', argument " "1"" of type '" "Ferris::MutableCollectionEvents *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::MutableCollectionEvents * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_MedallionUpdated_Sig_t *) &(arg1)->getNamingEvent_MedallionUpdated_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal1T_void_Ferris__fh_context_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MutableCollectionEvents_getNamingEvent_Changed_Sig) {
  {
    Ferris::MutableCollectionEvents *arg1 = (Ferris::MutableCollectionEvents *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Changed_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MutableCollectionEvents_getNamingEvent_Changed_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__MutableCollectionEvents, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MutableCollectionEvents_getNamingEvent_Changed_Sig" "', argument " "1"" of type '" "Ferris::MutableCollectionEvents *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::MutableCollectionEvents * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Changed_Sig_t *) &(arg1)->getNamingEvent_Changed_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal3T_void_NamingEvent_Changed_p_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MutableCollectionEvents_getNamingEvent_Deleted_Sig) {
  {
    Ferris::MutableCollectionEvents *arg1 = (Ferris::MutableCollectionEvents *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Deleted_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MutableCollectionEvents_getNamingEvent_Deleted_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__MutableCollectionEvents, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MutableCollectionEvents_getNamingEvent_Deleted_Sig" "', argument " "1"" of type '" "Ferris::MutableCollectionEvents *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::MutableCollectionEvents * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Deleted_Sig_t *) &(arg1)->getNamingEvent_Deleted_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal3T_void_NamingEvent_Deleted_p_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MutableCollectionEvents_getNamingEvent_Start_Execute_Sig) {
  {
    Ferris::MutableCollectionEvents *arg1 = (Ferris::MutableCollectionEvents *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Start_Execute_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MutableCollectionEvents_getNamingEvent_Start_Execute_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__MutableCollectionEvents, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MutableCollectionEvents_getNamingEvent_Start_Execute_Sig" "', argument " "1"" of type '" "Ferris::MutableCollectionEvents *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::MutableCollectionEvents * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Start_Execute_Sig_t *) &(arg1)->getNamingEvent_Start_Execute_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal3T_void_NamingEvent_Start_Execute_p_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MutableCollectionEvents_getNamingEvent_Stop_Execute_Sig) {
  {
    Ferris::MutableCollectionEvents *arg1 = (Ferris::MutableCollectionEvents *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Stop_Execute_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MutableCollectionEvents_getNamingEvent_Stop_Execute_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__MutableCollectionEvents, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MutableCollectionEvents_getNamingEvent_Stop_Execute_Sig" "', argument " "1"" of type '" "Ferris::MutableCollectionEvents *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::MutableCollectionEvents * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Stop_Execute_Sig_t *) &(arg1)->getNamingEvent_Stop_Execute_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal3T_void_NamingEvent_Stop_Execute_p_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MutableCollectionEvents_getNamingEvent_Created_Sig) {
  {
    Ferris::MutableCollectionEvents *arg1 = (Ferris::MutableCollectionEvents *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Created_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MutableCollectionEvents_getNamingEvent_Created_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__MutableCollectionEvents, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MutableCollectionEvents_getNamingEvent_Created_Sig" "', argument " "1"" of type '" "Ferris::MutableCollectionEvents *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::MutableCollectionEvents * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Created_Sig_t *) &(arg1)->getNamingEvent_Created_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal4T_void_NamingEvent_Created_p_Ferris__fh_context_const_R_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MutableCollectionEvents_getNamingEvent_Moved_Sig) {
  {
    Ferris::MutableCollectionEvents *arg1 = (Ferris::MutableCollectionEvents *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Moved_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MutableCollectionEvents_getNamingEvent_Moved_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__MutableCollectionEvents, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MutableCollectionEvents_getNamingEvent_Moved_Sig" "', argument " "1"" of type '" "Ferris::MutableCollectionEvents *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::MutableCollectionEvents * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Moved_Sig_t *) &(arg1)->getNamingEvent_Moved_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal3T_void_NamingEvent_Moved_p_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MutableCollectionEvents_getNamingEvent_Exists_Sig) {
  {
    Ferris::MutableCollectionEvents *arg1 = (Ferris::MutableCollectionEvents *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Exists_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MutableCollectionEvents_getNamingEvent_Exists_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__MutableCollectionEvents, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MutableCollectionEvents_getNamingEvent_Exists_Sig" "', argument " "1"" of type '" "Ferris::MutableCollectionEvents *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::MutableCollectionEvents * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Exists_Sig_t *) &(arg1)->getNamingEvent_Exists_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal4T_void_NamingEvent_Exists_p_Ferris__fh_context_const_R_std__string_std__string_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MutableCollectionEvents_getNamingEvent_Start_Reading_Context_Sig) {
  {
    Ferris::MutableCollectionEvents *arg1 = (Ferris::MutableCollectionEvents *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Start_Reading_Context_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MutableCollectionEvents_getNamingEvent_Start_Reading_Context_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__MutableCollectionEvents, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MutableCollectionEvents_getNamingEvent_Start_Reading_Context_Sig" "', argument " "1"" of type '" "Ferris::MutableCollectionEvents *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::MutableCollectionEvents * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Start_Reading_Context_Sig_t *) &(arg1)->getNamingEvent_Start_Reading_Context_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal1T_void_NamingEvent_Start_Reading_Context_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MutableCollectionEvents_getNamingEvent_Stop_Reading_Context_Sig) {
  {
    Ferris::MutableCollectionEvents *arg1 = (Ferris::MutableCollectionEvents *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::NamingEvent_Stop_Reading_Context_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MutableCollectionEvents_getNamingEvent_Stop_Reading_Context_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__MutableCollectionEvents, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MutableCollectionEvents_getNamingEvent_Stop_Reading_Context_Sig" "', argument " "1"" of type '" "Ferris::MutableCollectionEvents *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::MutableCollectionEvents * >(argp1);
    result = (Ferris::MutableCollectionEvents::NamingEvent_Stop_Reading_Context_Sig_t *) &(arg1)->getNamingEvent_Stop_Reading_Context_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal1T_void_NamingEvent_Stop_Reading_Context_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MutableCollectionEvents_getContextEvent_Headers_Received_Sig) {
  {
    Ferris::MutableCollectionEvents *arg1 = (Ferris::MutableCollectionEvents *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::MutableCollectionEvents::ContextEvent_Headers_Received_Sig_t *result = 0 ;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MutableCollectionEvents_getContextEvent_Headers_Received_Sig(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__MutableCollectionEvents, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MutableCollectionEvents_getContextEvent_Headers_Received_Sig" "', argument " "1"" of type '" "Ferris::MutableCollectionEvents *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::MutableCollectionEvents * >(argp1);
    result = (Ferris::MutableCollectionEvents::ContextEvent_Headers_Received_Sig_t *) &(arg1)->getContextEvent_Headers_Received_Sig();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_sigc__signal2T_void_Ferris__fh_context_Ferris__stringset_t_const_R_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap___eq____SWIG_1) {
  {
    Ferris::ContextSetCompare *arg1 = 0 ;
    Ferris::ContextSetCompare *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: __eq__(a,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__ContextSetCompare,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__eq__" "', argument " "1"" of type '" "Ferris::ContextSetCompare const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__eq__" "', argument " "1"" of type '" "Ferris::ContextSetCompare const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextSetCompare * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__ContextSetCompare,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__eq__" "', argument " "2"" of type '" "Ferris::ContextSetCompare const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__eq__" "', argument " "2"" of type '" "Ferris::ContextSetCompare const &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::ContextSetCompare * >(argp2);
    result = (bool)Ferris::operator ==((Ferris::ContextSetCompare const &)*arg1,(Ferris::ContextSetCompare const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap___eq__) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextSetCompare, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__ContextSetCompare, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap___eq____SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap___eq____SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded '__eq__'");
  XSRETURN(0);
}


XS(_wrap___ne____SWIG_1) {
  {
    Ferris::ContextSetCompare *arg1 = 0 ;
    Ferris::ContextSetCompare *arg2 = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: __ne__(a,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__ContextSetCompare,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__ne__" "', argument " "1"" of type '" "Ferris::ContextSetCompare const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__ne__" "', argument " "1"" of type '" "Ferris::ContextSetCompare const &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::ContextSetCompare * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__ContextSetCompare,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__ne__" "', argument " "2"" of type '" "Ferris::ContextSetCompare const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__ne__" "', argument " "2"" of type '" "Ferris::ContextSetCompare const &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::ContextSetCompare * >(argp2);
    result = (bool)Ferris::operator !=((Ferris::ContextSetCompare const &)*arg1,(Ferris::ContextSetCompare const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap___ne__) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__ContextIterator, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__ContextSetCompare, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__ContextSetCompare, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap___ne____SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap___ne____SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded '__ne__'");
  XSRETURN(0);
}


XS(_wrap_ReverseSortStringOrder) {
  {
    std::string arg1 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ReverseSortStringOrder(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "ReverseSortStringOrder" "', argument " "1"" of type '" "std::string""'"); 
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = Ferris::Factory::ReverseSortStringOrder(arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeSorter) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_sorter result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: MakeSorter(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MakeSorter" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MakeSorter" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::Factory::MakeSorter((std::string const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_sorter(static_cast< const Ferris::fh_sorter& >(result))), SWIGTYPE_p_Ferris__fh_sorter, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_MakeSortedContext__SWIG_0) {
  {
    Ferris::fh_context *arg1 = 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: MakeSortedContext(ctx,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MakeSortedContext" "', argument " "1"" of type '" "Ferris::fh_context &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MakeSortedContext" "', argument " "1"" of type '" "Ferris::fh_context &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MakeSortedContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MakeSortedContext" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = Ferris::Factory::MakeSortedContext(*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_MakeSortedContext__SWIG_1) {
  {
    Ferris::fh_context *arg1 = 0 ;
    Ferris::fh_sorter *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: MakeSortedContext(ctx,f);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MakeSortedContext" "', argument " "1"" of type '" "Ferris::fh_context &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MakeSortedContext" "', argument " "1"" of type '" "Ferris::fh_context &""'"); 
    }
    arg1 = reinterpret_cast< Ferris::fh_context * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_sorter,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MakeSortedContext" "', argument " "2"" of type '" "Ferris::fh_sorter &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MakeSortedContext" "', argument " "2"" of type '" "Ferris::fh_sorter &""'"); 
    }
    arg2 = reinterpret_cast< Ferris::fh_sorter * >(argp2);
    result = Ferris::Factory::MakeSortedContext(*arg1,*arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_MakeSortedContext) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_Ferris__fh_sorter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_Ferris__fh_context, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeSortedContext__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_MakeSortedContext__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'MakeSortedContext'");
  XSRETURN(0);
}


XS(_wrap_adjustEANameForSorting) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: adjustEANameForSorting(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "adjustEANameForSorting" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "adjustEANameForSorting" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::adjustEANameForSorting((std::string const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_SL_SubCreate_alwaysThrow) {
  {
    Ferris::fh_context arg1 ;
    Ferris::fh_context arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: SL_SubCreate_alwaysThrow(c,md);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SL_SubCreate_alwaysThrow" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SL_SubCreate_alwaysThrow" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SL_SubCreate_alwaysThrow" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SL_SubCreate_alwaysThrow" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    result = Ferris::SL_SubCreate_alwaysThrow(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_SL_SubCreate_dir) {
  {
    Ferris::fh_context arg1 ;
    Ferris::fh_context arg2 ;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: SL_SubCreate_dir(c,md);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SL_SubCreate_dir" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SL_SubCreate_dir" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SL_SubCreate_dir" "', argument " "2"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SL_SubCreate_dir" "', argument " "2"" of type '" "Ferris::fh_context""'");
      } else {
        arg2 = *(reinterpret_cast< Ferris::fh_context * >(argp2));
      }
    }
    result = Ferris::SL_SubCreate_dir(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_isTrue) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: isTrue(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "isTrue" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "isTrue" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = (bool)Ferris::isTrue((std::string const &)*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_isFalse) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: isFalse(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "isFalse" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "isFalse" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = (bool)Ferris::isFalse((std::string const &)*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_isNumber) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: isNumber(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "isNumber" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "isNumber" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = (bool)Ferris::isNumber((std::string const &)*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_getCreateHistory) {
  {
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: getCreateHistory();");
    }
    result = Ferris::Factory::getCreateHistory();
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_EventPending) {
  {
    int argvi = 0;
    gboolean result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: EventPending();");
    }
    result = Ferris::Main::EventPending();
    ST(argvi) = SWIG_NewPointerObj((new gboolean(static_cast< const gboolean& >(result))), SWIGTYPE_p_gboolean, SWIG_POINTER_OWN | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_processEvent) {
  {
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: processEvent();");
    }
    Ferris::Main::processEvent();
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_processAllPendingEvents) {
  {
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: processAllPendingEvents();");
    }
    Ferris::Main::processAllPendingEvents();
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_mainLoop) {
  {
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: mainLoop();");
    }
    Ferris::Main::mainLoop();
    ST(argvi) = sv_newmortal();
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_SingleShot) {
  {
    int argvi = 0;
    Ferris::Util::SingleShot *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_SingleShot();");
    }
    result = (Ferris::Util::SingleShot *)new Ferris::Util::SingleShot();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Ferris__Util__SingleShot, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_SingleShot___call__) {
  {
    Ferris::Util::SingleShot *arg1 = (Ferris::Util::SingleShot *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: SingleShot___call__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Util__SingleShot, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingleShot___call__" "', argument " "1"" of type '" "Ferris::Util::SingleShot *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Util::SingleShot * >(argp1);
    result = (bool)(arg1)->operator ()();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_SingleShot_value) {
  {
    Ferris::Util::SingleShot *arg1 = (Ferris::Util::SingleShot *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: SingleShot_value(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_Ferris__Util__SingleShot, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingleShot_value" "', argument " "1"" of type '" "Ferris::Util::SingleShot *""'"); 
    }
    arg1 = reinterpret_cast< Ferris::Util::SingleShot * >(argp1);
    result = (bool)(arg1)->value();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_getMimeName) {
  {
    Ferris::fh_context arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: getMimeName(c);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getMimeName" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getMimeName" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    result = Ferris::getMimeName(arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_toContextIterator) {
  {
    Ferris::fh_context arg1 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    Ferris::Context::iterator result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: toContextIterator(c);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_Ferris__fh_context,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "toContextIterator" "', argument " "1"" of type '" "Ferris::fh_context""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "toContextIterator" "', argument " "1"" of type '" "Ferris::fh_context""'");
      } else {
        arg1 = *(reinterpret_cast< Ferris::fh_context * >(argp1));
      }
    }
    result = Ferris::toContextIterator(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::Context::iterator(static_cast< const Ferris::Context::iterator& >(result))), SWIGTYPE_p_Ferris__ContextIterator, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_addEAToSet) {
  {
    std::set< std::string > *arg1 = 0 ;
    std::string arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: addEAToSet(theSet,commaSepEA);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__setT_std__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "addEAToSet" "', argument " "1"" of type '" "std::set< std::string > &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "addEAToSet" "', argument " "1"" of type '" "std::set< std::string > &""'"); 
    }
    arg1 = reinterpret_cast< std::set< std::string > * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "addEAToSet" "', argument " "2"" of type '" "std::string const""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    Ferris::addEAToSet(*arg1,arg2);
    ST(argvi) = sv_newmortal();
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ExecuteQueryAgainstMyRDF) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ExecuteQueryAgainstMyRDF(sparql);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExecuteQueryAgainstMyRDF" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ExecuteQueryAgainstMyRDF" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::ExecuteQueryAgainstMyRDF((std::string const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_getStaticLinkedRootContextNames) {
  {
    int argvi = 0;
    Ferris::stringset_t *result = 0 ;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: getStaticLinkedRootContextNames();");
    }
    result = (Ferris::stringset_t *) &Ferris::ImplementationDetail::getStaticLinkedRootContextNames();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__setT_std__string_t, 0 | 0); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_appendToStaticLinkedRootContextNames) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: appendToStaticLinkedRootContextNames(s);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "appendToStaticLinkedRootContextNames" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "appendToStaticLinkedRootContextNames" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = (bool)Ferris::ImplementationDetail::appendToStaticLinkedRootContextNames((std::string const &)*arg1);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_ParseOnly_FERRIS_POPT_OPTIONS) {
  {
    std::string *arg1 = 0 ;
    int arg2 ;
    char **arg3 = (char **) 0 ;
    int res1 = SWIG_OLDOBJ ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: ParseOnly_FERRIS_POPT_OPTIONS(PROGRAM_NAME,argc,argv);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ParseOnly_FERRIS_POPT_OPTIONS" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseOnly_FERRIS_POPT_OPTIONS" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ParseOnly_FERRIS_POPT_OPTIONS" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_p_char, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ParseOnly_FERRIS_POPT_OPTIONS" "', argument " "3"" of type '" "char const **""'"); 
    }
    arg3 = reinterpret_cast< char ** >(argp3);
    Ferris::ParseOnly_FERRIS_POPT_OPTIONS((std::string const &)*arg1,arg2,(char const **)arg3);
    ST(argvi) = sv_newmortal();
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_tryToUseOutOfProcessMetadataServer) {
  {
    int argvi = 0;
    bool result;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: tryToUseOutOfProcessMetadataServer();");
    }
    result = (bool)Ferris::tryToUseOutOfProcessMetadataServer();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_makeFerrisPluginPath__SWIG_0) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: makeFerrisPluginPath(dir,libname);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "makeFerrisPluginPath" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "makeFerrisPluginPath" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "makeFerrisPluginPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "makeFerrisPluginPath" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = Ferris::makeFerrisPluginPath((std::string const &)*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_makeFerrisPluginPath__SWIG_1) {
  {
    std::string *arg1 = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    std::string result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: makeFerrisPluginPath(dir);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "makeFerrisPluginPath" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "makeFerrisPluginPath" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = Ferris::makeFerrisPluginPath((std::string const &)*arg1);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_makeFerrisPluginPath) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_makeFerrisPluginPath__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_makeFerrisPluginPath__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'makeFerrisPluginPath'");
  XSRETURN(0);
}


XS(_wrap_acquireContext__SWIG_0) {
  {
    std::string arg1 ;
    int arg2 ;
    bool arg3 ;
    int val2 ;
    int ecode2 = 0 ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: acquireContext(path,mode,isDir);");
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "acquireContext" "', argument " "1"" of type '" "std::string""'"); 
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "acquireContext" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "acquireContext" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = Ferris::Shell::acquireContext(arg1,arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_acquireContext__SWIG_1) {
  {
    std::string arg1 ;
    int arg2 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: acquireContext(path,mode);");
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "acquireContext" "', argument " "1"" of type '" "std::string""'"); 
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "acquireContext" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = Ferris::Shell::acquireContext(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_acquireContext__SWIG_2) {
  {
    std::string arg1 ;
    int argvi = 0;
    Ferris::fh_context result;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: acquireContext(path);");
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "acquireContext" "', argument " "1"" of type '" "std::string""'"); 
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = Ferris::Shell::acquireContext(arg1);
    ST(argvi) = SWIG_NewPointerObj((new Ferris::fh_context(static_cast< const Ferris::fh_context& >(result))), SWIGTYPE_p_Ferris__fh_context, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_acquireContext) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_acquireContext__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_acquireContext__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_acquireContext__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'acquireContext'");
  XSRETURN(0);
}



/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_Ferris__ColdEmblemTo_p_sigc__trackable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((sigc::trackable *) (FerrisLoki::Handlable *)(Ferris::Handlable *)(Ferris::Emblem *) ((Ferris::ColdEmblem *) x));
}
static void *_p_Ferris__EmblemTo_p_sigc__trackable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((sigc::trackable *) (FerrisLoki::Handlable *)(Ferris::Handlable *) ((Ferris::Emblem *) x));
}
static void *_p_Ferris__TimesTo_p_sigc__trackable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((sigc::trackable *) (FerrisLoki::Handlable *)(Ferris::Handlable *) ((Ferris::Times *) x));
}
static void *_p_Ferris__AttributeCollectionTo_p_sigc__trackable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((sigc::trackable *) (FerrisLoki::Handlable *)(Ferris::Handlable *)(Ferris::Versioned *) ((Ferris::AttributeCollection *) x));
}
static void *_p_Ferris__AttributeProxyTo_p_sigc__trackable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((sigc::trackable *) (FerrisLoki::Handlable *)(Ferris::Handlable *) ((Ferris::AttributeProxy *) x));
}
static void *_p_Ferris__AI__AgentTo_p_sigc__trackable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((sigc::trackable *) (FerrisLoki::Handlable *)(Ferris::Handlable *) ((Ferris::AI::Agent *) x));
}
static void *_p_Ferris__RunnerTo_p_sigc__trackable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((sigc::trackable *) (FerrisLoki::Handlable *)(Ferris::Handlable *) ((Ferris::Runner *) x));
}
static void *_p_Ferris__EA_Atom_ReadWrite_ContentsTo_p_sigc__trackable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((sigc::trackable *) (Ferris::EA_Atom_ReadWrite *)(Ferris::EA_Atom_ReadWrite_OpenModeCached *) ((Ferris::EA_Atom_ReadWrite_Contents *) x));
}
static void *_p_Ferris__EA_Atom_ReadWrite_OpenModeCachedTo_p_sigc__trackable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((sigc::trackable *) (Ferris::EA_Atom_ReadWrite *) ((Ferris::EA_Atom_ReadWrite_OpenModeCached *) x));
}
static void *_p_Ferris__MedallionBeliefTo_p_sigc__trackable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((sigc::trackable *) (FerrisLoki::Handlable *)(Ferris::Handlable *) ((Ferris::MedallionBelief *) x));
}
static void *_p_Ferris__PersonalityTo_p_sigc__trackable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((sigc::trackable *) (FerrisLoki::Handlable *)(Ferris::Handlable *)(Ferris::CacheHandlable *) ((Ferris::Personality *) x));
}
static void *_p_Ferris__Time__BenchmarkTo_p_sigc__trackable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((sigc::trackable *) (FerrisLoki::Handlable *)(Ferris::Handlable *) ((Ferris::Time::Benchmark *) x));
}
static void *_p_Ferris__VersionedTo_p_sigc__trackable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((sigc::trackable *) (FerrisLoki::Handlable *)(Ferris::Handlable *) ((Ferris::Versioned *) x));
}
static void *_p_Ferris__EtagereTo_p_sigc__trackable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((sigc::trackable *) (FerrisLoki::Handlable *)(Ferris::Handlable *) ((Ferris::Etagere *) x));
}
static void *_p_Ferris__EA_Atom_ReadWrite_PassedInStreamTo_p_sigc__trackable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((sigc::trackable *)  ((Ferris::EA_Atom_ReadWrite_PassedInStream *) x));
}
static void *_p_Ferris__CacheHandlableTo_p_sigc__trackable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((sigc::trackable *) (FerrisLoki::Handlable *)(Ferris::Handlable *) ((Ferris::CacheHandlable *) x));
}
static void *_p_Ferris__HandlableTo_p_sigc__trackable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((sigc::trackable *) (FerrisLoki::Handlable *) ((Ferris::Handlable *) x));
}
static void *_p_FerrisLoki__HandlableTo_p_sigc__trackable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((sigc::trackable *)  ((FerrisLoki::Handlable *) x));
}
static void *_p_Ferris__EA_Atom_ReadWriteTo_p_sigc__trackable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((sigc::trackable *)  ((Ferris::EA_Atom_ReadWrite *) x));
}
static void *_p_Ferris__MedallionTo_p_sigc__trackable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((sigc::trackable *) (FerrisLoki::Handlable *)(Ferris::Handlable *)(Ferris::CacheHandlable *) ((Ferris::Medallion *) x));
}
static void *_p_Ferris__ContextIteratorTo_p_sigc__trackable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((sigc::trackable *) (FerrisLoki::Handlable *)(Ferris::Handlable *) ((Ferris::ContextIterator *) x));
}
static void *_p_Ferris__CanNotReadContextPcctsParseFailedTo_p_Ferris__CanNotReadContext(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::CanNotReadContext *)  ((Ferris::CanNotReadContextPcctsParseFailed *) x));
}
static void *_p_Ferris__CanNotMonitorDirWithFAMTo_p_Ferris__CanNotReadContext(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::CanNotReadContext *)  ((Ferris::CanNotMonitorDirWithFAM *) x));
}
static void *_p_Ferris__FerrisCreateSubContextNotSupportedTo_p_Ferris__FerrisNotSupportedInThisContext(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisNotSupportedInThisContext *)  ((Ferris::FerrisCreateSubContextNotSupported *) x));
}
static void *_p_Ferris__FerrisCreateAttributeNotSupportedTo_p_Ferris__FerrisNotSupportedInThisContext(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisNotSupportedInThisContext *)  ((Ferris::FerrisCreateAttributeNotSupported *) x));
}
static void *_p_Ferris__QuotaStorageFullTo_p_Ferris__StorageFull(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::StorageFull *)  ((Ferris::QuotaStorageFull *) x));
}
static void *_p_Ferris__AttributeCollectionTo_p_Ferris__Versioned(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::Versioned *)  ((Ferris::AttributeCollection *) x));
}
static void *_p_Ferris__EA_Atom_ReadOnly_PassedInStreamTo_p_Ferris__EA_Atom_ReadOnly(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::EA_Atom_ReadOnly *)  ((Ferris::EA_Atom_ReadOnly_PassedInStream *) x));
}
static void *_p_Ferris__NoSuchUserTo_p_Ferris__NoSuchObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::NoSuchObject *)  ((Ferris::NoSuchUser *) x));
}
static void *_p_Ferris__NoSuchGroupTo_p_Ferris__NoSuchObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::NoSuchObject *)  ((Ferris::NoSuchGroup *) x));
}
static void *_p_Ferris__EA_Atom_ReadWrite_OpenModeCachedTo_p_Ferris__EA_Atom_ReadWrite(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::EA_Atom_ReadWrite *)  ((Ferris::EA_Atom_ReadWrite_OpenModeCached *) x));
}
static void *_p_Ferris__EA_Atom_ReadWrite_ContentsTo_p_Ferris__EA_Atom_ReadWrite(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::EA_Atom_ReadWrite *) (Ferris::EA_Atom_ReadWrite_OpenModeCached *) ((Ferris::EA_Atom_ReadWrite_Contents *) x));
}
static void *_p_Ferris__BackupNameWouldBeTooLongTo_p_Ferris__BackupException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::BackupException *)  ((Ferris::BackupNameWouldBeTooLong *) x));
}
static void *_p_Ferris__UnknownBackupModeTo_p_Ferris__BackupException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::BackupException *)  ((Ferris::UnknownBackupMode *) x));
}
static void *_p_Ferris__FerrisStatExceptionTo_p_Ferris__FerrisGLibCException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisGLibCException *)  ((Ferris::FerrisStatException *) x));
}
static void *_p_Ferris__FerrisSetCWDExceptionTo_p_Ferris__FerrisGLibCException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisGLibCException *)  ((Ferris::FerrisSetCWDException *) x));
}
static void *_p_Ferris__UnspoortedBlockSizeTo_p_Ferris__FerrisStreamException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisStreamException *)  ((Ferris::UnspoortedBlockSize *) x));
}
static void *_p_Ferris__CreateFIFOTo_p_Ferris__FerrisStreamException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisStreamException *)  ((Ferris::CreateFIFO *) x));
}
static void *_p_Ferris__MalformedURLTo_p_Ferris__FerrisStreamException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisStreamException *)  ((Ferris::MalformedURL *) x));
}
static void *_p_Ferris__Db4KeyNotFoundTo_p_Ferris__Db4Exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::Db4Exception *)  ((Ferris::Db4KeyNotFound *) x));
}
static void *_p_Ferris__eetKeyNotFoundTo_p_Ferris__Db4Exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::Db4Exception *)  ((Ferris::eetKeyNotFound *) x));
}
static void *_p_Ferris__CompressionAlgoNotFoundExceptionTo_p_Ferris__CompressionException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::CompressionException *)  ((Ferris::CompressionAlgoNotFoundException *) x));
}
static void *_p_Ferris__FullTextIndexExceptionTo_p_Ferris__IndexException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::IndexException *)  ((Ferris::FullTextIndexException *) x));
}
static void *_p_Ferris__EAIndexExceptionTo_p_Ferris__IndexException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::IndexException *)  ((Ferris::EAIndexException *) x));
}
static void *_p_Ferris__SchemaNotFoundExceptionTo_p_Ferris__SchemaException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::SchemaException *)  ((Ferris::SchemaNotFoundException *) x));
}
static void *_p_Ferris__EmblemNotFoundExceptionTo_p_Ferris__EmblemException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::EmblemException *)  ((Ferris::EmblemNotFoundException *) x));
}
static void *_p_Ferris__CanNotAddEmblemExceptionTo_p_Ferris__EmblemException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::EmblemException *)  ((Ferris::CanNotAddEmblemException *) x));
}
static void *_p_Ferris__AgentAlreadyExistsExceptionTo_p_Ferris__AgentException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::AgentException *)  ((Ferris::AgentAlreadyExistsException *) x));
}
static void *_p_Ferris__NoSuchAgentExceptionTo_p_Ferris__AgentException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::AgentException *)  ((Ferris::NoSuchAgentException *) x));
}
static void *_p_Ferris__AgentOnlyHandlesOneEmblemExceptionTo_p_Ferris__AgentException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::AgentException *)  ((Ferris::AgentOnlyHandlesOneEmblemException *) x));
}
static void *_p_Ferris__DBusConnectionExceptionTo_p_Ferris__DBusException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::DBusException *)  ((Ferris::DBusConnectionException *) x));
}
static void *_p_Ferris__XMLBaseTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::XMLBase *) x));
}
static void *_p_Ferris__RenameFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::RenameFailed *) x));
}
static void *_p_Ferris__getIOStreamCloseUpdateFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::getIOStreamCloseUpdateFailed *) x));
}
static void *_p_Ferris__CurlPerformFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::CurlPerformFailed *) x));
}
static void *_p_Ferris__FerrisImageSaveFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisImageSaveFailed *) x));
}
static void *_p_Ferris__CopyFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::CopyFailed *) x));
}
static void *_p_Ferris__RemoveFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::RemoveFailed *) x));
}
static void *_p_Ferris__FerrisCreateAttributeFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisCreateAttributeFailed *) x));
}
static void *_p_Ferris__CanNotReadContextPcctsParseFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::CanNotReadContext *) ((Ferris::CanNotReadContextPcctsParseFailed *) x));
}
static void *_p_Ferris__SubContextAlreadyInUseTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::SubContextAlreadyInUse *) x));
}
static void *_p_Ferris__AttributeAlreadyInUseTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::AttributeAlreadyInUse *) x));
}
static void *_p_Ferris__AttributeNotWritableTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::AttributeNotWritable *) x));
}
static void *_p_Ferris__BadSignatureTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::CryptoBase *) ((Ferris::BadSignature *) x));
}
static void *_p_Ferris__GPhoto2To_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::GPhoto2 *) x));
}
static void *_p_Ferris__XMLFatalErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::XMLBase *) ((Ferris::XMLFatalError *) x));
}
static void *_p_Ferris__FerrisInternalErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisInternalError *) x));
}
static void *_p_Ferris__BadParamTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::BadParam *) x));
}
static void *_p_Ferris__FerrisVFSExceptionBaseTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *) ((Ferris::FerrisVFSExceptionBase *) x));
}
static void *_p_Ferris__FerrisExceptionBaseTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *)  ((Ferris::FerrisExceptionBase *) x));
}
static void *_p_Ferris__CryptoBaseTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::CryptoBase *) x));
}
static void *_p_Ferris__FerrisWaitTimedOutTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisWaitTimedOut *) x));
}
static void *_p_Ferris__AccessDeniedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::AccessDenied *) x));
}
static void *_p_Ferris__CanNotDeleteTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::CanNotDelete *) x));
}
static void *_p_Ferris__BackupNameWouldBeTooLongTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::BackupException *) ((Ferris::BackupNameWouldBeTooLong *) x));
}
static void *_p_Ferris__CanNotMonitorDirWithFAMTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::CanNotReadContext *) ((Ferris::CanNotMonitorDirWithFAM *) x));
}
static void *_p_Ferris__CurlStateErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::CurlStateError *) x));
}
static void *_p_Ferris__NoSuchGroupTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::NoSuchObject *) ((Ferris::NoSuchGroup *) x));
}
static void *_p_Ferris__UnknownBackupModeTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::BackupException *) ((Ferris::UnknownBackupMode *) x));
}
static void *_p_Ferris__NoSuchContextClassTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::NoSuchContextClass *) x));
}
static void *_p_Ferris__FerrisParentNotSetErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::FerrisInternalError *) ((Ferris::FerrisParentNotSetError *) x));
}
static void *_p_Ferris__GenericErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::GenericError *) x));
}
static void *_p_Ferris__FileClipboardTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::FileClipboard *) x));
}
static void *_p_Ferris__FerrisCurlServerNameNotFoundTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisCurlServerNameNotFound *) x));
}
static void *_p_Ferris__FerrisSqlServerNameNotFoundTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisSqlServerNameNotFound *) x));
}
static void *_p_Ferris__ObjectExistsTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::ObjectExists *) x));
}
static void *_p_Ferris__ContextExistsTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::ObjectExists *) ((Ferris::ContextExists *) x));
}
static void *_p_Ferris__Db4KeyNotFoundTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::Db4Exception *) ((Ferris::Db4KeyNotFound *) x));
}
static void *_p_Ferris__eetKeyNotFoundTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::Db4Exception *) ((Ferris::eetKeyNotFound *) x));
}
static void *_p_Ferris__DesktopFileKeyNotFoundTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::DesktopFileKeyNotFound *) x));
}
static void *_p_Ferris__CursorExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::CursorException *) x));
}
static void *_p_Ferris__DVDReadExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::DVDReadException *) x));
}
static void *_p_Ferris__BackupExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::BackupException *) x));
}
static void *_p_Ferris__SocketOptionsExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::SocketOptionsException *) x));
}
static void *_p_Ferris__FerrisSetCWDExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::FerrisGLibCException *) ((Ferris::FerrisSetCWDException *) x));
}
static void *_p_Ferris__FerrisStatExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::FerrisGLibCException *) ((Ferris::FerrisStatException *) x));
}
static void *_p_Ferris__FerrisGLibCExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisGLibCException *) x));
}
static void *_p_Ferris__FerrisStreamExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *) ((Ferris::FerrisStreamException *) x));
}
static void *_p_Ferris__UnknownConfigLocationTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::UnknownConfigLocation *) x));
}
static void *_p_Ferris__Db4ExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::Db4Exception *) x));
}
static void *_p_Ferris__eetExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::eetException *) x));
}
static void *_p_Ferris__GdbmExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::GdbmException *) x));
}
static void *_p_Ferris__tdbExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::tdbException *) x));
}
static void *_p_Ferris__InvalidSortSpecificationTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::InvalidSortSpecification *) x));
}
static void *_p_Ferris__LDAPExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::LDAPException *) x));
}
static void *_p_Ferris__CompressionExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::CompressionException *) x));
}
static void *_p_Ferris__CompressionAlgoNotFoundExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::CompressionException *) ((Ferris::CompressionAlgoNotFoundException *) x));
}
static void *_p_Ferris__IndexExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::IndexException *) x));
}
static void *_p_Ferris__FullTextIndexExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::IndexException *) ((Ferris::FullTextIndexException *) x));
}
static void *_p_Ferris__EAIndexExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::IndexException *) ((Ferris::EAIndexException *) x));
}
static void *_p_Ferris__SchemaExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::SchemaException *) x));
}
static void *_p_Ferris__SchemaNotFoundExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::SchemaException *) ((Ferris::SchemaNotFoundException *) x));
}
static void *_p_Ferris__MedallionExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::MedallionException *) x));
}
static void *_p_Ferris__EtagereExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::EtagereException *) x));
}
static void *_p_Ferris__EmblemExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::EmblemException *) x));
}
static void *_p_Ferris__EmblemNotFoundExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::EmblemException *) ((Ferris::EmblemNotFoundException *) x));
}
static void *_p_Ferris__CanNotAddEmblemExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::EmblemException *) ((Ferris::CanNotAddEmblemException *) x));
}
static void *_p_Ferris__NoSuchPersonalityExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::NoSuchPersonalityException *) x));
}
static void *_p_Ferris__NoSuchBeliefExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::NoSuchBeliefException *) x));
}
static void *_p_Ferris__AgentExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::AgentException *) x));
}
static void *_p_Ferris__AgentAlreadyExistsExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::AgentException *) ((Ferris::AgentAlreadyExistsException *) x));
}
static void *_p_Ferris__NoSuchAgentExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::AgentException *) ((Ferris::NoSuchAgentException *) x));
}
static void *_p_Ferris__AgentOnlyHandlesOneEmblemExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::AgentException *) ((Ferris::AgentOnlyHandlesOneEmblemException *) x));
}
static void *_p_Ferris__dbXMLExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::XMLBase *) ((Ferris::dbXMLException *) x));
}
static void *_p_Ferris__KeylistExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::CryptoBase *) ((Ferris::KeylistException *) x));
}
static void *_p_Ferris__DBusExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::DBusException *) x));
}
static void *_p_Ferris__DBusConnectionExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::DBusException *) ((Ferris::DBusConnectionException *) x));
}
static void *_p_Ferris__WebPhotoExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::WebPhotoException *) x));
}
static void *_p_Ferris__SQLiteExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::SQLiteException *) x));
}
static void *_p_Ferris__FerrisHALExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisHALException *) x));
}
static void *_p_Ferris__DTDCreationFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::DTDCreationFailed *) x));
}
static void *_p_Ferris__CurlEasyInitFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::CurlEasyInitFailed *) x));
}
static void *_p_Ferris__CurlStaticInitFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::CurlStaticInitFailed *) x));
}
static void *_p_Ferris__FerrisStreamLoadFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisStreamLoadFailed *) x));
}
static void *_p_Ferris__GModuleOpenFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::GModuleOpenFailed *) x));
}
static void *_p_Ferris__FerrisImlib2ImageLoadFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::FerrisImageLoadFailed *) ((Ferris::FerrisImlib2ImageLoadFailed *) x));
}
static void *_p_Ferris__FerrisGIMPImageLoadFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::FerrisImageLoadFailed *) ((Ferris::FerrisGIMPImageLoadFailed *) x));
}
static void *_p_Ferris__FerrisJPEGImageLoadFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::FerrisImageLoadFailed *) ((Ferris::FerrisJPEGImageLoadFailed *) x));
}
static void *_p_Ferris__FerrisPNGImageLoadFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::FerrisImageLoadFailed *) ((Ferris::FerrisPNGImageLoadFailed *) x));
}
static void *_p_Ferris__FerrisImageLoadFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisImageLoadFailed *) x));
}
static void *_p_Ferris__RootContextCreationFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::RootContextCreationFailed *) x));
}
static void *_p_Ferris__FerrisCreateSubContextFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisCreateSubContextFailed *) x));
}
static void *_p_Ferris__GPGMEInitFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::CryptoBase *) ((Ferris::GPGMEInitFailed *) x));
}
static void *_p_Ferris__XMPPacketScanFailedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::XMPBase *) ((Ferris::XMPPacketScanFailed *) x));
}
static void *_p_Ferris__RelativeTimeParsingTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::RelativeTimeParsing *) x));
}
static void *_p_Ferris__BadlyFormedTimeStringTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::BadlyFormedTime *) ((Ferris::BadlyFormedTimeString *) x));
}
static void *_p_Ferris__NoSuchUserTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::NoSuchObject *) ((Ferris::NoSuchUser *) x));
}
static void *_p_Ferris__InvalidModeStringTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::InvalidModeString *) x));
}
static void *_p_Ferris__XMPBaseTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::XMPBase *) x));
}
static void *_p_Ferris__FerrisNotReadableAsContextTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisNotReadableAsContext *) x));
}
static void *_p_Ferris__FerrisNotSupportedInThisContextTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::NotSupported *) ((Ferris::FerrisNotSupportedInThisContext *) x));
}
static void *_p_Ferris__NoSuchSubContextTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::NoSuchSubContext *) x));
}
static void *_p_Ferris__CanNotReadContextTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::CanNotReadContext *) x));
}
static void *_p_Ferris__NoOpenWithContextTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::NoOpenWithContext *) x));
}
static void *_p_Ferris__getIOStreamCloseUpdatePermissionDeniedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::getIOStreamCloseUpdateFailed *) ((Ferris::getIOStreamCloseUpdatePermissionDenied *) x));
}
static void *_p_Ferris__QuotaStorageFullTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::StorageFull *) ((Ferris::QuotaStorageFull *) x));
}
static void *_p_Ferris__StorageFullTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::StorageFull *) x));
}
static void *_p_Ferris__ParseErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::ParseError *) x));
}
static void *_p_Ferris__XMLParseErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::XMLBase *) ((Ferris::XMLParseError *) x));
}
static void *_p_Ferris__FerrisCanNotGetScriptNameErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::FerrisInternalError *) ((Ferris::FerrisCanNotGetScriptNameError *) x));
}
static void *_p_Ferris__CanNotDereferenceDanglingSoftLinkTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::CanNotDereferenceDanglingSoftLink *) x));
}
static void *_p_Ferris__ProgramSpawnTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::ProgramSpawn *) x));
}
static void *_p_Ferris__FerrisCanNotCreateLeafOfLeafTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisCanNotCreateLeafOfLeaf *) x));
}
static void *_p_Ferris__NoSuchObjectTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::NoSuchObject *) x));
}
static void *_p_Ferris__CanNotGetStreamTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::CanNotGetStream *) x));
}
static void *_p_Ferris__ContentNotModifiedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::ContentNotModified *) x));
}
static void *_p_Ferris__BranchFileSystemTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::BranchFileSystem *) x));
}
static void *_p_Ferris__NotSupportedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::NotSupported *) x));
}
static void *_p_Ferris__FerrisCreateSubContextNotSupportedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::NotSupported *)(Ferris::FerrisNotSupportedInThisContext *) ((Ferris::FerrisCreateSubContextNotSupported *) x));
}
static void *_p_Ferris__FerrisCreateAttributeNotSupportedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::NotSupported *)(Ferris::FerrisNotSupportedInThisContext *) ((Ferris::FerrisCreateAttributeNotSupported *) x));
}
static void *_p_Ferris__SyntaxErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::SyntaxError *) x));
}
static void *_p_Ferris__FFilterSyntaxErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::SyntaxError *) ((Ferris::FFilterSyntaxError *) x));
}
static void *_p_Ferris__FulltextQuerySyntaxErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::SyntaxError *) ((Ferris::FulltextQuerySyntaxError *) x));
}
static void *_p_Ferris__URLDecodeSyntaxErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *)(Ferris::SyntaxError *) ((Ferris::URLDecodeSyntaxError *) x));
}
static void *_p_Ferris__OpenActionIsNotDefinedTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::OpenActionIsNotDefined *) x));
}
static void *_p_Ferris__FerrisOutOfMemoryTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisOutOfMemory *) x));
}
static void *_p_Ferris__CreateFIFOTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisStreamException *) ((Ferris::CreateFIFO *) x));
}
static void *_p_Ferris__ChildNotRunningTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::ChildNotRunning *) x));
}
static void *_p_Ferris__UnspoortedBlockSizeTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisStreamException *) ((Ferris::UnspoortedBlockSize *) x));
}
static void *_p_Ferris__CanNotAddExternalAttributeTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::CanNotAddExternalAttribute *) x));
}
static void *_p_Ferris__NoSuchAttributeTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::NoSuchAttribute *) x));
}
static void *_p_Ferris__MalformedURLTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisStreamException *) ((Ferris::MalformedURL *) x));
}
static void *_p_Ferris__BadlyFormedTimeTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (Ferris::FerrisExceptionBase *)(Ferris::FerrisVFSExceptionBase *) ((Ferris::BadlyFormedTime *) x));
}
static void *_p_Ferris__XMLBaseTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::XMLBase *) x));
}
static void *_p_Ferris__RenameFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::RenameFailed *) x));
}
static void *_p_Ferris__getIOStreamCloseUpdateFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::getIOStreamCloseUpdateFailed *) x));
}
static void *_p_Ferris__CurlPerformFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::CurlPerformFailed *) x));
}
static void *_p_Ferris__CopyFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::CopyFailed *) x));
}
static void *_p_Ferris__RemoveFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::RemoveFailed *) x));
}
static void *_p_Ferris__FerrisCreateAttributeFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::FerrisCreateAttributeFailed *) x));
}
static void *_p_Ferris__CanNotReadContextPcctsParseFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::CanNotReadContext *) ((Ferris::CanNotReadContextPcctsParseFailed *) x));
}
static void *_p_Ferris__FerrisImageSaveFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::FerrisImageSaveFailed *) x));
}
static void *_p_Ferris__SubContextAlreadyInUseTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::SubContextAlreadyInUse *) x));
}
static void *_p_Ferris__AttributeAlreadyInUseTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::AttributeAlreadyInUse *) x));
}
static void *_p_Ferris__AttributeNotWritableTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::AttributeNotWritable *) x));
}
static void *_p_Ferris__BadSignatureTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::CryptoBase *) ((Ferris::BadSignature *) x));
}
static void *_p_Ferris__GPhoto2To_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::GPhoto2 *) x));
}
static void *_p_Ferris__XMLFatalErrorTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::XMLBase *) ((Ferris::XMLFatalError *) x));
}
static void *_p_Ferris__FerrisInternalErrorTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::FerrisInternalError *) x));
}
static void *_p_Ferris__BadParamTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::BadParam *) x));
}
static void *_p_Ferris__CryptoBaseTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::CryptoBase *) x));
}
static void *_p_Ferris__FerrisWaitTimedOutTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::FerrisWaitTimedOut *) x));
}
static void *_p_Ferris__AccessDeniedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::AccessDenied *) x));
}
static void *_p_Ferris__CanNotDeleteTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::CanNotDelete *) x));
}
static void *_p_Ferris__BackupNameWouldBeTooLongTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::BackupException *) ((Ferris::BackupNameWouldBeTooLong *) x));
}
static void *_p_Ferris__CanNotMonitorDirWithFAMTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::CanNotReadContext *) ((Ferris::CanNotMonitorDirWithFAM *) x));
}
static void *_p_Ferris__CurlStateErrorTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::CurlStateError *) x));
}
static void *_p_Ferris__NoSuchGroupTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::NoSuchObject *) ((Ferris::NoSuchGroup *) x));
}
static void *_p_Ferris__UnknownBackupModeTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::BackupException *) ((Ferris::UnknownBackupMode *) x));
}
static void *_p_Ferris__NoSuchContextClassTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::NoSuchContextClass *) x));
}
static void *_p_Ferris__FerrisParentNotSetErrorTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::FerrisInternalError *) ((Ferris::FerrisParentNotSetError *) x));
}
static void *_p_Ferris__GenericErrorTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::GenericError *) x));
}
static void *_p_Ferris__FileClipboardTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::FileClipboard *) x));
}
static void *_p_Ferris__eetKeyNotFoundTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::Db4Exception *) ((Ferris::eetKeyNotFound *) x));
}
static void *_p_Ferris__Db4KeyNotFoundTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::Db4Exception *) ((Ferris::Db4KeyNotFound *) x));
}
static void *_p_Ferris__FerrisCurlServerNameNotFoundTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::FerrisCurlServerNameNotFound *) x));
}
static void *_p_Ferris__FerrisSqlServerNameNotFoundTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::FerrisSqlServerNameNotFound *) x));
}
static void *_p_Ferris__ContextExistsTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::ObjectExists *) ((Ferris::ContextExists *) x));
}
static void *_p_Ferris__ObjectExistsTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::ObjectExists *) x));
}
static void *_p_Ferris__DesktopFileKeyNotFoundTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::DesktopFileKeyNotFound *) x));
}
static void *_p_Ferris__tdbExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::tdbException *) x));
}
static void *_p_Ferris__GdbmExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::GdbmException *) x));
}
static void *_p_Ferris__eetExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::eetException *) x));
}
static void *_p_Ferris__Db4ExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::Db4Exception *) x));
}
static void *_p_Ferris__CursorExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::CursorException *) x));
}
static void *_p_Ferris__DVDReadExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::DVDReadException *) x));
}
static void *_p_Ferris__BackupExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::BackupException *) x));
}
static void *_p_Ferris__SocketOptionsExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::SocketOptionsException *) x));
}
static void *_p_Ferris__FerrisSetCWDExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::FerrisGLibCException *) ((Ferris::FerrisSetCWDException *) x));
}
static void *_p_Ferris__FerrisStatExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::FerrisGLibCException *) ((Ferris::FerrisStatException *) x));
}
static void *_p_Ferris__FerrisGLibCExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::FerrisGLibCException *) x));
}
static void *_p_Ferris__UnknownConfigLocationTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::UnknownConfigLocation *) x));
}
static void *_p_Ferris__InvalidSortSpecificationTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::InvalidSortSpecification *) x));
}
static void *_p_Ferris__LDAPExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::LDAPException *) x));
}
static void *_p_Ferris__CompressionExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::CompressionException *) x));
}
static void *_p_Ferris__CompressionAlgoNotFoundExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::CompressionException *) ((Ferris::CompressionAlgoNotFoundException *) x));
}
static void *_p_Ferris__IndexExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::IndexException *) x));
}
static void *_p_Ferris__FullTextIndexExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::IndexException *) ((Ferris::FullTextIndexException *) x));
}
static void *_p_Ferris__EAIndexExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::IndexException *) ((Ferris::EAIndexException *) x));
}
static void *_p_Ferris__SchemaExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::SchemaException *) x));
}
static void *_p_Ferris__SchemaNotFoundExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::SchemaException *) ((Ferris::SchemaNotFoundException *) x));
}
static void *_p_Ferris__MedallionExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::MedallionException *) x));
}
static void *_p_Ferris__EtagereExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::EtagereException *) x));
}
static void *_p_Ferris__EmblemExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::EmblemException *) x));
}
static void *_p_Ferris__EmblemNotFoundExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::EmblemException *) ((Ferris::EmblemNotFoundException *) x));
}
static void *_p_Ferris__CanNotAddEmblemExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::EmblemException *) ((Ferris::CanNotAddEmblemException *) x));
}
static void *_p_Ferris__NoSuchPersonalityExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::NoSuchPersonalityException *) x));
}
static void *_p_Ferris__NoSuchBeliefExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::NoSuchBeliefException *) x));
}
static void *_p_Ferris__AgentExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::AgentException *) x));
}
static void *_p_Ferris__AgentAlreadyExistsExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::AgentException *) ((Ferris::AgentAlreadyExistsException *) x));
}
static void *_p_Ferris__NoSuchAgentExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::AgentException *) ((Ferris::NoSuchAgentException *) x));
}
static void *_p_Ferris__AgentOnlyHandlesOneEmblemExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::AgentException *) ((Ferris::AgentOnlyHandlesOneEmblemException *) x));
}
static void *_p_Ferris__dbXMLExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::XMLBase *) ((Ferris::dbXMLException *) x));
}
static void *_p_Ferris__KeylistExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::CryptoBase *) ((Ferris::KeylistException *) x));
}
static void *_p_Ferris__DBusExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::DBusException *) x));
}
static void *_p_Ferris__DBusConnectionExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::DBusException *) ((Ferris::DBusConnectionException *) x));
}
static void *_p_Ferris__WebPhotoExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::WebPhotoException *) x));
}
static void *_p_Ferris__SQLiteExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::SQLiteException *) x));
}
static void *_p_Ferris__FerrisHALExceptionTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::FerrisHALException *) x));
}
static void *_p_Ferris__DTDCreationFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::DTDCreationFailed *) x));
}
static void *_p_Ferris__CurlEasyInitFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::CurlEasyInitFailed *) x));
}
static void *_p_Ferris__CurlStaticInitFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::CurlStaticInitFailed *) x));
}
static void *_p_Ferris__FerrisStreamLoadFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::FerrisStreamLoadFailed *) x));
}
static void *_p_Ferris__GModuleOpenFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::GModuleOpenFailed *) x));
}
static void *_p_Ferris__FerrisImlib2ImageLoadFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::FerrisImageLoadFailed *) ((Ferris::FerrisImlib2ImageLoadFailed *) x));
}
static void *_p_Ferris__FerrisGIMPImageLoadFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::FerrisImageLoadFailed *) ((Ferris::FerrisGIMPImageLoadFailed *) x));
}
static void *_p_Ferris__RootContextCreationFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::RootContextCreationFailed *) x));
}
static void *_p_Ferris__FerrisCreateSubContextFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::FerrisCreateSubContextFailed *) x));
}
static void *_p_Ferris__FerrisImageLoadFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::FerrisImageLoadFailed *) x));
}
static void *_p_Ferris__FerrisPNGImageLoadFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::FerrisImageLoadFailed *) ((Ferris::FerrisPNGImageLoadFailed *) x));
}
static void *_p_Ferris__FerrisJPEGImageLoadFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::FerrisImageLoadFailed *) ((Ferris::FerrisJPEGImageLoadFailed *) x));
}
static void *_p_Ferris__GPGMEInitFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::CryptoBase *) ((Ferris::GPGMEInitFailed *) x));
}
static void *_p_Ferris__XMPPacketScanFailedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::XMPBase *) ((Ferris::XMPPacketScanFailed *) x));
}
static void *_p_Ferris__RelativeTimeParsingTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::RelativeTimeParsing *) x));
}
static void *_p_Ferris__BadlyFormedTimeStringTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::BadlyFormedTime *) ((Ferris::BadlyFormedTimeString *) x));
}
static void *_p_Ferris__NoSuchUserTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::NoSuchObject *) ((Ferris::NoSuchUser *) x));
}
static void *_p_Ferris__InvalidModeStringTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::InvalidModeString *) x));
}
static void *_p_Ferris__XMPBaseTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::XMPBase *) x));
}
static void *_p_Ferris__FerrisNotSupportedInThisContextTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::NotSupported *) ((Ferris::FerrisNotSupportedInThisContext *) x));
}
static void *_p_Ferris__NoSuchSubContextTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::NoSuchSubContext *) x));
}
static void *_p_Ferris__CanNotReadContextTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::CanNotReadContext *) x));
}
static void *_p_Ferris__FerrisNotReadableAsContextTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::FerrisNotReadableAsContext *) x));
}
static void *_p_Ferris__NoOpenWithContextTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::NoOpenWithContext *) x));
}
static void *_p_Ferris__getIOStreamCloseUpdatePermissionDeniedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::getIOStreamCloseUpdateFailed *) ((Ferris::getIOStreamCloseUpdatePermissionDenied *) x));
}
static void *_p_Ferris__QuotaStorageFullTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::StorageFull *) ((Ferris::QuotaStorageFull *) x));
}
static void *_p_Ferris__StorageFullTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::StorageFull *) x));
}
static void *_p_Ferris__ParseErrorTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::ParseError *) x));
}
static void *_p_Ferris__XMLParseErrorTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::XMLBase *) ((Ferris::XMLParseError *) x));
}
static void *_p_Ferris__FerrisCanNotGetScriptNameErrorTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::FerrisInternalError *) ((Ferris::FerrisCanNotGetScriptNameError *) x));
}
static void *_p_Ferris__CanNotDereferenceDanglingSoftLinkTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::CanNotDereferenceDanglingSoftLink *) x));
}
static void *_p_Ferris__ProgramSpawnTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::ProgramSpawn *) x));
}
static void *_p_Ferris__FerrisCanNotCreateLeafOfLeafTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::FerrisCanNotCreateLeafOfLeaf *) x));
}
static void *_p_Ferris__NoSuchObjectTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::NoSuchObject *) x));
}
static void *_p_Ferris__CanNotGetStreamTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::CanNotGetStream *) x));
}
static void *_p_Ferris__ContentNotModifiedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::ContentNotModified *) x));
}
static void *_p_Ferris__BranchFileSystemTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::BranchFileSystem *) x));
}
static void *_p_Ferris__NotSupportedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::NotSupported *) x));
}
static void *_p_Ferris__FerrisCreateSubContextNotSupportedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::NotSupported *)(Ferris::FerrisNotSupportedInThisContext *) ((Ferris::FerrisCreateSubContextNotSupported *) x));
}
static void *_p_Ferris__FerrisCreateAttributeNotSupportedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::NotSupported *)(Ferris::FerrisNotSupportedInThisContext *) ((Ferris::FerrisCreateAttributeNotSupported *) x));
}
static void *_p_Ferris__SyntaxErrorTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::SyntaxError *) x));
}
static void *_p_Ferris__FFilterSyntaxErrorTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::SyntaxError *) ((Ferris::FFilterSyntaxError *) x));
}
static void *_p_Ferris__FulltextQuerySyntaxErrorTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::SyntaxError *) ((Ferris::FulltextQuerySyntaxError *) x));
}
static void *_p_Ferris__URLDecodeSyntaxErrorTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *) (Ferris::SyntaxError *) ((Ferris::URLDecodeSyntaxError *) x));
}
static void *_p_Ferris__OpenActionIsNotDefinedTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::OpenActionIsNotDefined *) x));
}
static void *_p_Ferris__FerrisOutOfMemoryTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::FerrisOutOfMemory *) x));
}
static void *_p_Ferris__ChildNotRunningTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::ChildNotRunning *) x));
}
static void *_p_Ferris__CanNotAddExternalAttributeTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::CanNotAddExternalAttribute *) x));
}
static void *_p_Ferris__NoSuchAttributeTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::NoSuchAttribute *) x));
}
static void *_p_Ferris__BadlyFormedTimeTo_p_Ferris__FerrisVFSExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisVFSExceptionBase *)  ((Ferris::BadlyFormedTime *) x));
}
static void *_p_Ferris__XMLBaseTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::XMLBase *) x));
}
static void *_p_Ferris__RenameFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::RenameFailed *) x));
}
static void *_p_Ferris__getIOStreamCloseUpdateFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::getIOStreamCloseUpdateFailed *) x));
}
static void *_p_Ferris__CurlPerformFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::CurlPerformFailed *) x));
}
static void *_p_Ferris__FerrisImageSaveFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisImageSaveFailed *) x));
}
static void *_p_Ferris__CopyFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::CopyFailed *) x));
}
static void *_p_Ferris__RemoveFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::RemoveFailed *) x));
}
static void *_p_Ferris__FerrisCreateAttributeFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisCreateAttributeFailed *) x));
}
static void *_p_Ferris__CanNotReadContextPcctsParseFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::CanNotReadContext *) ((Ferris::CanNotReadContextPcctsParseFailed *) x));
}
static void *_p_Ferris__SubContextAlreadyInUseTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::SubContextAlreadyInUse *) x));
}
static void *_p_Ferris__AttributeAlreadyInUseTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::AttributeAlreadyInUse *) x));
}
static void *_p_Ferris__AttributeNotWritableTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::AttributeNotWritable *) x));
}
static void *_p_Ferris__BadSignatureTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::CryptoBase *) ((Ferris::BadSignature *) x));
}
static void *_p_Ferris__GPhoto2To_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::GPhoto2 *) x));
}
static void *_p_Ferris__XMLFatalErrorTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::XMLBase *) ((Ferris::XMLFatalError *) x));
}
static void *_p_Ferris__FerrisInternalErrorTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisInternalError *) x));
}
static void *_p_Ferris__BadParamTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::BadParam *) x));
}
static void *_p_Ferris__FerrisVFSExceptionBaseTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *)  ((Ferris::FerrisVFSExceptionBase *) x));
}
static void *_p_Ferris__CryptoBaseTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::CryptoBase *) x));
}
static void *_p_Ferris__FerrisWaitTimedOutTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisWaitTimedOut *) x));
}
static void *_p_Ferris__AccessDeniedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::AccessDenied *) x));
}
static void *_p_Ferris__CanNotDeleteTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::CanNotDelete *) x));
}
static void *_p_Ferris__BackupNameWouldBeTooLongTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::BackupException *) ((Ferris::BackupNameWouldBeTooLong *) x));
}
static void *_p_Ferris__CanNotMonitorDirWithFAMTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::CanNotReadContext *) ((Ferris::CanNotMonitorDirWithFAM *) x));
}
static void *_p_Ferris__CurlStateErrorTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::CurlStateError *) x));
}
static void *_p_Ferris__NoSuchGroupTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::NoSuchObject *) ((Ferris::NoSuchGroup *) x));
}
static void *_p_Ferris__UnknownBackupModeTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::BackupException *) ((Ferris::UnknownBackupMode *) x));
}
static void *_p_Ferris__NoSuchContextClassTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::NoSuchContextClass *) x));
}
static void *_p_Ferris__FerrisParentNotSetErrorTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::FerrisInternalError *) ((Ferris::FerrisParentNotSetError *) x));
}
static void *_p_Ferris__GenericErrorTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::GenericError *) x));
}
static void *_p_Ferris__FileClipboardTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::FileClipboard *) x));
}
static void *_p_Ferris__FerrisCurlServerNameNotFoundTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisCurlServerNameNotFound *) x));
}
static void *_p_Ferris__FerrisSqlServerNameNotFoundTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisSqlServerNameNotFound *) x));
}
static void *_p_Ferris__ObjectExistsTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::ObjectExists *) x));
}
static void *_p_Ferris__ContextExistsTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::ObjectExists *) ((Ferris::ContextExists *) x));
}
static void *_p_Ferris__Db4KeyNotFoundTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::Db4Exception *) ((Ferris::Db4KeyNotFound *) x));
}
static void *_p_Ferris__eetKeyNotFoundTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::Db4Exception *) ((Ferris::eetKeyNotFound *) x));
}
static void *_p_Ferris__DesktopFileKeyNotFoundTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::DesktopFileKeyNotFound *) x));
}
static void *_p_Ferris__Db4ExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::Db4Exception *) x));
}
static void *_p_Ferris__CursorExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::CursorException *) x));
}
static void *_p_Ferris__DVDReadExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::DVDReadException *) x));
}
static void *_p_Ferris__BackupExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::BackupException *) x));
}
static void *_p_Ferris__SocketOptionsExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::SocketOptionsException *) x));
}
static void *_p_Ferris__FerrisSetCWDExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::FerrisGLibCException *) ((Ferris::FerrisSetCWDException *) x));
}
static void *_p_Ferris__FerrisStatExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::FerrisGLibCException *) ((Ferris::FerrisStatException *) x));
}
static void *_p_Ferris__FerrisGLibCExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisGLibCException *) x));
}
static void *_p_Ferris__FerrisStreamExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *)  ((Ferris::FerrisStreamException *) x));
}
static void *_p_Ferris__UnknownConfigLocationTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::UnknownConfigLocation *) x));
}
static void *_p_Ferris__eetExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::eetException *) x));
}
static void *_p_Ferris__GdbmExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::GdbmException *) x));
}
static void *_p_Ferris__tdbExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::tdbException *) x));
}
static void *_p_Ferris__InvalidSortSpecificationTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::InvalidSortSpecification *) x));
}
static void *_p_Ferris__LDAPExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::LDAPException *) x));
}
static void *_p_Ferris__CompressionExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::CompressionException *) x));
}
static void *_p_Ferris__CompressionAlgoNotFoundExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::CompressionException *) ((Ferris::CompressionAlgoNotFoundException *) x));
}
static void *_p_Ferris__IndexExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::IndexException *) x));
}
static void *_p_Ferris__FullTextIndexExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::IndexException *) ((Ferris::FullTextIndexException *) x));
}
static void *_p_Ferris__EAIndexExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::IndexException *) ((Ferris::EAIndexException *) x));
}
static void *_p_Ferris__SchemaExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::SchemaException *) x));
}
static void *_p_Ferris__SchemaNotFoundExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::SchemaException *) ((Ferris::SchemaNotFoundException *) x));
}
static void *_p_Ferris__MedallionExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::MedallionException *) x));
}
static void *_p_Ferris__EtagereExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::EtagereException *) x));
}
static void *_p_Ferris__EmblemExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::EmblemException *) x));
}
static void *_p_Ferris__EmblemNotFoundExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::EmblemException *) ((Ferris::EmblemNotFoundException *) x));
}
static void *_p_Ferris__CanNotAddEmblemExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::EmblemException *) ((Ferris::CanNotAddEmblemException *) x));
}
static void *_p_Ferris__NoSuchPersonalityExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::NoSuchPersonalityException *) x));
}
static void *_p_Ferris__NoSuchBeliefExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::NoSuchBeliefException *) x));
}
static void *_p_Ferris__AgentExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::AgentException *) x));
}
static void *_p_Ferris__AgentAlreadyExistsExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::AgentException *) ((Ferris::AgentAlreadyExistsException *) x));
}
static void *_p_Ferris__NoSuchAgentExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::AgentException *) ((Ferris::NoSuchAgentException *) x));
}
static void *_p_Ferris__AgentOnlyHandlesOneEmblemExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::AgentException *) ((Ferris::AgentOnlyHandlesOneEmblemException *) x));
}
static void *_p_Ferris__dbXMLExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::XMLBase *) ((Ferris::dbXMLException *) x));
}
static void *_p_Ferris__KeylistExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::CryptoBase *) ((Ferris::KeylistException *) x));
}
static void *_p_Ferris__DBusExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::DBusException *) x));
}
static void *_p_Ferris__DBusConnectionExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::DBusException *) ((Ferris::DBusConnectionException *) x));
}
static void *_p_Ferris__WebPhotoExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::WebPhotoException *) x));
}
static void *_p_Ferris__SQLiteExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::SQLiteException *) x));
}
static void *_p_Ferris__FerrisHALExceptionTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisHALException *) x));
}
static void *_p_Ferris__DTDCreationFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::DTDCreationFailed *) x));
}
static void *_p_Ferris__CurlEasyInitFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::CurlEasyInitFailed *) x));
}
static void *_p_Ferris__CurlStaticInitFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::CurlStaticInitFailed *) x));
}
static void *_p_Ferris__FerrisStreamLoadFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisStreamLoadFailed *) x));
}
static void *_p_Ferris__GModuleOpenFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::GModuleOpenFailed *) x));
}
static void *_p_Ferris__FerrisImlib2ImageLoadFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::FerrisImageLoadFailed *) ((Ferris::FerrisImlib2ImageLoadFailed *) x));
}
static void *_p_Ferris__FerrisGIMPImageLoadFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::FerrisImageLoadFailed *) ((Ferris::FerrisGIMPImageLoadFailed *) x));
}
static void *_p_Ferris__FerrisJPEGImageLoadFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::FerrisImageLoadFailed *) ((Ferris::FerrisJPEGImageLoadFailed *) x));
}
static void *_p_Ferris__FerrisPNGImageLoadFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::FerrisImageLoadFailed *) ((Ferris::FerrisPNGImageLoadFailed *) x));
}
static void *_p_Ferris__FerrisImageLoadFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisImageLoadFailed *) x));
}
static void *_p_Ferris__RootContextCreationFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::RootContextCreationFailed *) x));
}
static void *_p_Ferris__FerrisCreateSubContextFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisCreateSubContextFailed *) x));
}
static void *_p_Ferris__GPGMEInitFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::CryptoBase *) ((Ferris::GPGMEInitFailed *) x));
}
static void *_p_Ferris__XMPPacketScanFailedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::XMPBase *) ((Ferris::XMPPacketScanFailed *) x));
}
static void *_p_Ferris__RelativeTimeParsingTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::RelativeTimeParsing *) x));
}
static void *_p_Ferris__BadlyFormedTimeStringTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::BadlyFormedTime *) ((Ferris::BadlyFormedTimeString *) x));
}
static void *_p_Ferris__NoSuchUserTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::NoSuchObject *) ((Ferris::NoSuchUser *) x));
}
static void *_p_Ferris__InvalidModeStringTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::InvalidModeString *) x));
}
static void *_p_Ferris__XMPBaseTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::XMPBase *) x));
}
static void *_p_Ferris__FerrisNotReadableAsContextTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisNotReadableAsContext *) x));
}
static void *_p_Ferris__FerrisNotSupportedInThisContextTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::NotSupported *) ((Ferris::FerrisNotSupportedInThisContext *) x));
}
static void *_p_Ferris__NoSuchSubContextTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::NoSuchSubContext *) x));
}
static void *_p_Ferris__CanNotReadContextTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::CanNotReadContext *) x));
}
static void *_p_Ferris__NoOpenWithContextTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::NoOpenWithContext *) x));
}
static void *_p_Ferris__getIOStreamCloseUpdatePermissionDeniedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::getIOStreamCloseUpdateFailed *) ((Ferris::getIOStreamCloseUpdatePermissionDenied *) x));
}
static void *_p_Ferris__QuotaStorageFullTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::StorageFull *) ((Ferris::QuotaStorageFull *) x));
}
static void *_p_Ferris__StorageFullTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::StorageFull *) x));
}
static void *_p_Ferris__ParseErrorTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::ParseError *) x));
}
static void *_p_Ferris__XMLParseErrorTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::XMLBase *) ((Ferris::XMLParseError *) x));
}
static void *_p_Ferris__FerrisCanNotGetScriptNameErrorTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::FerrisInternalError *) ((Ferris::FerrisCanNotGetScriptNameError *) x));
}
static void *_p_Ferris__CanNotDereferenceDanglingSoftLinkTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::CanNotDereferenceDanglingSoftLink *) x));
}
static void *_p_Ferris__ProgramSpawnTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::ProgramSpawn *) x));
}
static void *_p_Ferris__FerrisCanNotCreateLeafOfLeafTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisCanNotCreateLeafOfLeaf *) x));
}
static void *_p_Ferris__NoSuchObjectTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::NoSuchObject *) x));
}
static void *_p_Ferris__CanNotGetStreamTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::CanNotGetStream *) x));
}
static void *_p_Ferris__ContentNotModifiedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::ContentNotModified *) x));
}
static void *_p_Ferris__BranchFileSystemTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::BranchFileSystem *) x));
}
static void *_p_Ferris__NotSupportedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::NotSupported *) x));
}
static void *_p_Ferris__FerrisCreateSubContextNotSupportedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::NotSupported *)(Ferris::FerrisNotSupportedInThisContext *) ((Ferris::FerrisCreateSubContextNotSupported *) x));
}
static void *_p_Ferris__FerrisCreateAttributeNotSupportedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::NotSupported *)(Ferris::FerrisNotSupportedInThisContext *) ((Ferris::FerrisCreateAttributeNotSupported *) x));
}
static void *_p_Ferris__SyntaxErrorTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::SyntaxError *) x));
}
static void *_p_Ferris__FFilterSyntaxErrorTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::SyntaxError *) ((Ferris::FFilterSyntaxError *) x));
}
static void *_p_Ferris__FulltextQuerySyntaxErrorTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::SyntaxError *) ((Ferris::FulltextQuerySyntaxError *) x));
}
static void *_p_Ferris__URLDecodeSyntaxErrorTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *)(Ferris::SyntaxError *) ((Ferris::URLDecodeSyntaxError *) x));
}
static void *_p_Ferris__OpenActionIsNotDefinedTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::OpenActionIsNotDefined *) x));
}
static void *_p_Ferris__FerrisOutOfMemoryTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::FerrisOutOfMemory *) x));
}
static void *_p_Ferris__CreateFIFOTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisStreamException *) ((Ferris::CreateFIFO *) x));
}
static void *_p_Ferris__ChildNotRunningTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::ChildNotRunning *) x));
}
static void *_p_Ferris__UnspoortedBlockSizeTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisStreamException *) ((Ferris::UnspoortedBlockSize *) x));
}
static void *_p_Ferris__CanNotAddExternalAttributeTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::CanNotAddExternalAttribute *) x));
}
static void *_p_Ferris__NoSuchAttributeTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::NoSuchAttribute *) x));
}
static void *_p_Ferris__MalformedURLTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisStreamException *) ((Ferris::MalformedURL *) x));
}
static void *_p_Ferris__BadlyFormedTimeTo_p_Ferris__FerrisExceptionBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisExceptionBase *) (Ferris::FerrisVFSExceptionBase *) ((Ferris::BadlyFormedTime *) x));
}
static void *_p_Ferris__BadlyFormedTimeStringTo_p_Ferris__BadlyFormedTime(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::BadlyFormedTime *)  ((Ferris::BadlyFormedTimeString *) x));
}
static void *_p_Ferris__AttributeProxyTo_p_Ferris__Attribute(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::Attribute *)  ((Ferris::AttributeProxy *) x));
}
static void *_p_Ferris__ContextTo_p_Ferris__Attribute(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::Attribute *)  ((Ferris::Context *) x));
}
static void *_p_Ferris__XMPPacketScanFailedTo_p_Ferris__XMPBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::XMPBase *)  ((Ferris::XMPPacketScanFailed *) x));
}
static void *_p_Ferris__FerrisCreateSubContextNotSupportedTo_p_Ferris__NotSupported(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::NotSupported *) (Ferris::FerrisNotSupportedInThisContext *) ((Ferris::FerrisCreateSubContextNotSupported *) x));
}
static void *_p_Ferris__FerrisCreateAttributeNotSupportedTo_p_Ferris__NotSupported(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::NotSupported *) (Ferris::FerrisNotSupportedInThisContext *) ((Ferris::FerrisCreateAttributeNotSupported *) x));
}
static void *_p_Ferris__FerrisNotSupportedInThisContextTo_p_Ferris__NotSupported(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::NotSupported *)  ((Ferris::FerrisNotSupportedInThisContext *) x));
}
static void *_p_Ferris__EA_Atom_StaticTo_p_Ferris__EA_Atom(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::EA_Atom *)  ((Ferris::EA_Atom_Static *) x));
}
static void *_p_Ferris__EA_Atom_ReadOnlyTo_p_Ferris__EA_Atom(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::EA_Atom *)  ((Ferris::EA_Atom_ReadOnly *) x));
}
static void *_p_Ferris__EA_Atom_RDFCacheAttributeTo_p_Ferris__EA_Atom(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::EA_Atom *)  ((Ferris::EA_Atom_RDFCacheAttribute *) x));
}
static void *_p_Ferris__EA_Atom_ReadOnly_PassedInStreamTo_p_Ferris__EA_Atom(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::EA_Atom *) (Ferris::EA_Atom_ReadOnly *) ((Ferris::EA_Atom_ReadOnly_PassedInStream *) x));
}
static void *_p_Ferris__FFilterSyntaxErrorTo_p_Ferris__SyntaxError(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::SyntaxError *)  ((Ferris::FFilterSyntaxError *) x));
}
static void *_p_Ferris__FulltextQuerySyntaxErrorTo_p_Ferris__SyntaxError(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::SyntaxError *)  ((Ferris::FulltextQuerySyntaxError *) x));
}
static void *_p_Ferris__URLDecodeSyntaxErrorTo_p_Ferris__SyntaxError(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::SyntaxError *)  ((Ferris::URLDecodeSyntaxError *) x));
}
static void *_p_Ferris__ContextTo_p_Ferris__ContextCollection(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::ContextCollection *)  ((Ferris::Context *) x));
}
static void *_p_Ferris__FerrisCanNotGetScriptNameErrorTo_p_Ferris__FerrisInternalError(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisInternalError *)  ((Ferris::FerrisCanNotGetScriptNameError *) x));
}
static void *_p_Ferris__FerrisParentNotSetErrorTo_p_Ferris__FerrisInternalError(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisInternalError *)  ((Ferris::FerrisParentNotSetError *) x));
}
static void *_p_Ferris__ContextTo_p_Ferris__MutableCollectionEvents(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::MutableCollectionEvents *)  ((Ferris::Context *) x));
}
static void *_p_Ferris__GPGMEInitFailedTo_p_Ferris__CryptoBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::CryptoBase *)  ((Ferris::GPGMEInitFailed *) x));
}
static void *_p_Ferris__BadSignatureTo_p_Ferris__CryptoBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::CryptoBase *)  ((Ferris::BadSignature *) x));
}
static void *_p_Ferris__KeylistExceptionTo_p_Ferris__CryptoBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::CryptoBase *)  ((Ferris::KeylistException *) x));
}
static void *_p_Ferris__dbXMLExceptionTo_p_Ferris__XMLBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::XMLBase *)  ((Ferris::dbXMLException *) x));
}
static void *_p_Ferris__XMLParseErrorTo_p_Ferris__XMLBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::XMLBase *)  ((Ferris::XMLParseError *) x));
}
static void *_p_Ferris__XMLFatalErrorTo_p_Ferris__XMLBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::XMLBase *)  ((Ferris::XMLFatalError *) x));
}
static void *_p_Ferris__PersonalityTo_p_Ferris__CacheHandlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::CacheHandlable *)  ((Ferris::Personality *) x));
}
static void *_p_Ferris__MedallionTo_p_Ferris__CacheHandlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::CacheHandlable *)  ((Ferris::Medallion *) x));
}
static void *_p_Ferris__TimesTo_p_FerrisLoki__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((FerrisLoki::Handlable *) (Ferris::Handlable *) ((Ferris::Times *) x));
}
static void *_p_Ferris__ColdEmblemTo_p_FerrisLoki__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((FerrisLoki::Handlable *) (Ferris::Handlable *)(Ferris::Emblem *) ((Ferris::ColdEmblem *) x));
}
static void *_p_Ferris__EmblemTo_p_FerrisLoki__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((FerrisLoki::Handlable *) (Ferris::Handlable *) ((Ferris::Emblem *) x));
}
static void *_p_Ferris__AttributeCollectionTo_p_FerrisLoki__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((FerrisLoki::Handlable *) (Ferris::Handlable *)(Ferris::Versioned *) ((Ferris::AttributeCollection *) x));
}
static void *_p_Ferris__AttributeProxyTo_p_FerrisLoki__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((FerrisLoki::Handlable *) (Ferris::Handlable *) ((Ferris::AttributeProxy *) x));
}
static void *_p_Ferris__AI__AgentTo_p_FerrisLoki__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((FerrisLoki::Handlable *) (Ferris::Handlable *) ((Ferris::AI::Agent *) x));
}
static void *_p_Ferris__RunnerTo_p_FerrisLoki__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((FerrisLoki::Handlable *) (Ferris::Handlable *) ((Ferris::Runner *) x));
}
static void *_p_Ferris__PersonalityTo_p_FerrisLoki__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((FerrisLoki::Handlable *) (Ferris::Handlable *)(Ferris::CacheHandlable *) ((Ferris::Personality *) x));
}
static void *_p_Ferris__MedallionBeliefTo_p_FerrisLoki__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((FerrisLoki::Handlable *) (Ferris::Handlable *) ((Ferris::MedallionBelief *) x));
}
static void *_p_Ferris__Time__BenchmarkTo_p_FerrisLoki__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((FerrisLoki::Handlable *) (Ferris::Handlable *) ((Ferris::Time::Benchmark *) x));
}
static void *_p_Ferris__VersionedTo_p_FerrisLoki__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((FerrisLoki::Handlable *) (Ferris::Handlable *) ((Ferris::Versioned *) x));
}
static void *_p_Ferris__EtagereTo_p_FerrisLoki__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((FerrisLoki::Handlable *) (Ferris::Handlable *) ((Ferris::Etagere *) x));
}
static void *_p_Ferris__CacheHandlableTo_p_FerrisLoki__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((FerrisLoki::Handlable *) (Ferris::Handlable *) ((Ferris::CacheHandlable *) x));
}
static void *_p_Ferris__HandlableTo_p_FerrisLoki__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((FerrisLoki::Handlable *)  ((Ferris::Handlable *) x));
}
static void *_p_Ferris__MedallionTo_p_FerrisLoki__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((FerrisLoki::Handlable *) (Ferris::Handlable *)(Ferris::CacheHandlable *) ((Ferris::Medallion *) x));
}
static void *_p_Ferris__ContextIteratorTo_p_FerrisLoki__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((FerrisLoki::Handlable *) (Ferris::Handlable *) ((Ferris::ContextIterator *) x));
}
static void *_p_Ferris__TimesTo_p_Ferris__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::Handlable *)  ((Ferris::Times *) x));
}
static void *_p_Ferris__ColdEmblemTo_p_Ferris__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::Handlable *) (Ferris::Emblem *) ((Ferris::ColdEmblem *) x));
}
static void *_p_Ferris__EmblemTo_p_Ferris__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::Handlable *)  ((Ferris::Emblem *) x));
}
static void *_p_Ferris__AttributeCollectionTo_p_Ferris__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::Handlable *) (Ferris::Versioned *) ((Ferris::AttributeCollection *) x));
}
static void *_p_Ferris__AttributeProxyTo_p_Ferris__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::Handlable *)  ((Ferris::AttributeProxy *) x));
}
static void *_p_Ferris__AI__AgentTo_p_Ferris__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::Handlable *)  ((Ferris::AI::Agent *) x));
}
static void *_p_Ferris__RunnerTo_p_Ferris__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::Handlable *)  ((Ferris::Runner *) x));
}
static void *_p_Ferris__PersonalityTo_p_Ferris__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::Handlable *) (Ferris::CacheHandlable *) ((Ferris::Personality *) x));
}
static void *_p_Ferris__MedallionBeliefTo_p_Ferris__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::Handlable *)  ((Ferris::MedallionBelief *) x));
}
static void *_p_Ferris__Time__BenchmarkTo_p_Ferris__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::Handlable *)  ((Ferris::Time::Benchmark *) x));
}
static void *_p_Ferris__VersionedTo_p_Ferris__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::Handlable *)  ((Ferris::Versioned *) x));
}
static void *_p_Ferris__EtagereTo_p_Ferris__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::Handlable *)  ((Ferris::Etagere *) x));
}
static void *_p_Ferris__CacheHandlableTo_p_Ferris__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::Handlable *)  ((Ferris::CacheHandlable *) x));
}
static void *_p_Ferris__MedallionTo_p_Ferris__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::Handlable *) (Ferris::CacheHandlable *) ((Ferris::Medallion *) x));
}
static void *_p_Ferris__ContextIteratorTo_p_Ferris__Handlable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::Handlable *)  ((Ferris::ContextIterator *) x));
}
static void *_p_Ferris__EA_Atom_ReadWrite_ContentsTo_p_Ferris__EA_Atom_ReadWrite_OpenModeCached(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::EA_Atom_ReadWrite_OpenModeCached *)  ((Ferris::EA_Atom_ReadWrite_Contents *) x));
}
static void *_p_Ferris__ColdEmblemTo_p_Ferris__Emblem(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::Emblem *)  ((Ferris::ColdEmblem *) x));
}
static void *_p_Ferris__FerrisPNGImageLoadFailedTo_p_Ferris__FerrisImageLoadFailed(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisImageLoadFailed *)  ((Ferris::FerrisPNGImageLoadFailed *) x));
}
static void *_p_Ferris__FerrisJPEGImageLoadFailedTo_p_Ferris__FerrisImageLoadFailed(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisImageLoadFailed *)  ((Ferris::FerrisJPEGImageLoadFailed *) x));
}
static void *_p_Ferris__FerrisGIMPImageLoadFailedTo_p_Ferris__FerrisImageLoadFailed(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisImageLoadFailed *)  ((Ferris::FerrisGIMPImageLoadFailed *) x));
}
static void *_p_Ferris__FerrisImlib2ImageLoadFailedTo_p_Ferris__FerrisImageLoadFailed(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::FerrisImageLoadFailed *)  ((Ferris::FerrisImlib2ImageLoadFailed *) x));
}
static void *_p_Ferris__getIOStreamCloseUpdatePermissionDeniedTo_p_Ferris__getIOStreamCloseUpdateFailed(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::getIOStreamCloseUpdateFailed *)  ((Ferris::getIOStreamCloseUpdatePermissionDenied *) x));
}
static void *_p_Ferris__ContextExistsTo_p_Ferris__ObjectExists(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Ferris::ObjectExists *)  ((Ferris::ContextExists *) x));
}
static swig_type_info _swigt__p_CompositeTrimmerT_TrimmerT_PrefixTrimmerOps_t_TrimmerT_PostfixTrimmerOps_t_t = {"_p_CompositeTrimmerT_TrimmerT_PrefixTrimmerOps_t_TrimmerT_PostfixTrimmerOps_t_t", "CompositeTrimmer< Trimmer< PrefixTrimmerOps >,Trimmer< PostfixTrimmerOps > > *|PrePostTrimmer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContextEvent_Headers_Received_Sig_t = {"_p_ContextEvent_Headers_Received_Sig_t", "ContextEvent_Headers_Received_Sig_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Fampp__FamppDirMonitorInitFailedException = {"_p_Fampp__FamppDirMonitorInitFailedException", "Fampp::FamppDirMonitorInitFailedException *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FerrisLoki__FerrisSmallObjAllocator = {"_p_FerrisLoki__FerrisSmallObjAllocator", "FerrisLoki::FerrisSmallObjAllocator *", 0, 0, (void*)"libferrisperl::FerrisSmallObjAllocator", 0};
static swig_type_info _swigt__p_FerrisLoki__Handlable = {"_p_FerrisLoki__Handlable", "FerrisLoki::Handlable *", 0, 0, (void*)"libferrisperl::Handlable", 0};
static swig_type_info _swigt__p_Ferris__AI__Agent = {"_p_Ferris__AI__Agent", "Ferris::AI::Agent *", 0, 0, (void*)"libferrisperl::Agent", 0};
static swig_type_info _swigt__p_Ferris__AccessDenied = {"_p_Ferris__AccessDenied", "Ferris::AccessDenied *", 0, 0, (void*)"libferrisperl::AccessDenied", 0};
static swig_type_info _swigt__p_Ferris__AgentAlreadyExistsException = {"_p_Ferris__AgentAlreadyExistsException", "Ferris::AgentAlreadyExistsException *", 0, 0, (void*)"libferrisperl::AgentAlreadyExistsException", 0};
static swig_type_info _swigt__p_Ferris__AgentException = {"_p_Ferris__AgentException", "Ferris::AgentException *", 0, 0, (void*)"libferrisperl::AgentException", 0};
static swig_type_info _swigt__p_Ferris__AgentOnlyHandlesOneEmblemException = {"_p_Ferris__AgentOnlyHandlesOneEmblemException", "Ferris::AgentOnlyHandlesOneEmblemException *", 0, 0, (void*)"libferrisperl::AgentOnlyHandlesOneEmblemException", 0};
static swig_type_info _swigt__p_Ferris__Attribute = {"_p_Ferris__Attribute", "Ferris::Attribute *", 0, 0, (void*)"libferrisperl::Attribute", 0};
static swig_type_info _swigt__p_Ferris__AttributeAlreadyInUse = {"_p_Ferris__AttributeAlreadyInUse", "Ferris::AttributeAlreadyInUse *", 0, 0, (void*)"libferrisperl::AttributeAlreadyInUse", 0};
static swig_type_info _swigt__p_Ferris__AttributeCollection = {"_p_Ferris__AttributeCollection", "Ferris::AttributeCollection *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__AttributeNotWritable = {"_p_Ferris__AttributeNotWritable", "Ferris::AttributeNotWritable *", 0, 0, (void*)"libferrisperl::AttributeNotWritable", 0};
static swig_type_info _swigt__p_Ferris__AttributeProxy = {"_p_Ferris__AttributeProxy", "Ferris::AttributeProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__BackupException = {"_p_Ferris__BackupException", "Ferris::BackupException *", 0, 0, (void*)"libferrisperl::BackupException", 0};
static swig_type_info _swigt__p_Ferris__BackupNameWouldBeTooLong = {"_p_Ferris__BackupNameWouldBeTooLong", "Ferris::BackupNameWouldBeTooLong *", 0, 0, (void*)"libferrisperl::BackupNameWouldBeTooLong", 0};
static swig_type_info _swigt__p_Ferris__BadParam = {"_p_Ferris__BadParam", "Ferris::BadParam *", 0, 0, (void*)"libferrisperl::BadParam", 0};
static swig_type_info _swigt__p_Ferris__BadSignature = {"_p_Ferris__BadSignature", "Ferris::BadSignature *", 0, 0, (void*)"libferrisperl::BadSignature", 0};
static swig_type_info _swigt__p_Ferris__BadlyFormedTime = {"_p_Ferris__BadlyFormedTime", "Ferris::BadlyFormedTime *", 0, 0, (void*)"libferrisperl::BadlyFormedTime", 0};
static swig_type_info _swigt__p_Ferris__BadlyFormedTimeString = {"_p_Ferris__BadlyFormedTimeString", "Ferris::BadlyFormedTimeString *", 0, 0, (void*)"libferrisperl::BadlyFormedTimeString", 0};
static swig_type_info _swigt__p_Ferris__BranchFileSystem = {"_p_Ferris__BranchFileSystem", "Ferris::BranchFileSystem *", 0, 0, (void*)"libferrisperl::BranchFileSystem", 0};
static swig_type_info _swigt__p_Ferris__CacheHandlable = {"_p_Ferris__CacheHandlable", "Ferris::CacheHandlable *", 0, 0, (void*)"libferrisperl::CacheHandlable", 0};
static swig_type_info _swigt__p_Ferris__CacheManager = {"_p_Ferris__CacheManager", "Ferris::CacheManager *", 0, 0, (void*)"libferrisperl::CacheManager", 0};
static swig_type_info _swigt__p_Ferris__CanNotAddEmblemException = {"_p_Ferris__CanNotAddEmblemException", "Ferris::CanNotAddEmblemException *", 0, 0, (void*)"libferrisperl::CanNotAddEmblemException", 0};
static swig_type_info _swigt__p_Ferris__CanNotAddExternalAttribute = {"_p_Ferris__CanNotAddExternalAttribute", "Ferris::CanNotAddExternalAttribute *", 0, 0, (void*)"libferrisperl::CanNotAddExternalAttribute", 0};
static swig_type_info _swigt__p_Ferris__CanNotDelete = {"_p_Ferris__CanNotDelete", "Ferris::CanNotDelete *", 0, 0, (void*)"libferrisperl::CanNotDelete", 0};
static swig_type_info _swigt__p_Ferris__CanNotDereferenceDanglingSoftLink = {"_p_Ferris__CanNotDereferenceDanglingSoftLink", "Ferris::CanNotDereferenceDanglingSoftLink *", 0, 0, (void*)"libferrisperl::CanNotDereferenceDanglingSoftLink", 0};
static swig_type_info _swigt__p_Ferris__CanNotGetStream = {"_p_Ferris__CanNotGetStream", "Ferris::CanNotGetStream *", 0, 0, (void*)"libferrisperl::CanNotGetStream", 0};
static swig_type_info _swigt__p_Ferris__CanNotMonitorDirWithFAM = {"_p_Ferris__CanNotMonitorDirWithFAM", "Ferris::CanNotMonitorDirWithFAM *", 0, 0, (void*)"libferrisperl::CanNotMonitorDirWithFAM", 0};
static swig_type_info _swigt__p_Ferris__CanNotReadContext = {"_p_Ferris__CanNotReadContext", "Ferris::CanNotReadContext *", 0, 0, (void*)"libferrisperl::CanNotReadContext", 0};
static swig_type_info _swigt__p_Ferris__CanNotReadContextPcctsParseFailed = {"_p_Ferris__CanNotReadContextPcctsParseFailed", "Ferris::CanNotReadContextPcctsParseFailed *", 0, 0, (void*)"libferrisperl::CanNotReadContextPcctsParseFailed", 0};
static swig_type_info _swigt__p_Ferris__ChildNotRunning = {"_p_Ferris__ChildNotRunning", "Ferris::ChildNotRunning *", 0, 0, (void*)"libferrisperl::ChildNotRunning", 0};
static swig_type_info _swigt__p_Ferris__ColdEmblem = {"_p_Ferris__ColdEmblem", "Ferris::ColdEmblem *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__CompressionAlgoNotFoundException = {"_p_Ferris__CompressionAlgoNotFoundException", "Ferris::CompressionAlgoNotFoundException *", 0, 0, (void*)"libferrisperl::CompressionAlgoNotFoundException", 0};
static swig_type_info _swigt__p_Ferris__CompressionException = {"_p_Ferris__CompressionException", "Ferris::CompressionException *", 0, 0, (void*)"libferrisperl::CompressionException", 0};
static swig_type_info _swigt__p_Ferris__ContentNotModified = {"_p_Ferris__ContentNotModified", "Ferris::ContentNotModified *", 0, 0, (void*)"libferrisperl::ContentNotModified", 0};
static swig_type_info _swigt__p_Ferris__Context = {"_p_Ferris__Context", "Ferris::Context *|Ferris::Attribute::Parent_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__ContextCollection = {"_p_Ferris__ContextCollection", "Ferris::ContextCollection *", 0, 0, (void*)"libferrisperl::ContextCollection", 0};
static swig_type_info _swigt__p_Ferris__ContextExists = {"_p_Ferris__ContextExists", "Ferris::ContextExists *", 0, 0, (void*)"libferrisperl::ContextExists", 0};
static swig_type_info _swigt__p_Ferris__ContextIterator = {"_p_Ferris__ContextIterator", "Ferris::ContextIterator::_Self *|Ferris::ContextIterator *|Ferris::Context::iterator *", 0, 0, (void*)"libferrisperl::ContextIterator", 0};
static swig_type_info _swigt__p_Ferris__ContextSetCompare = {"_p_Ferris__ContextSetCompare", "Ferris::ContextSetCompare *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__CopyFailed = {"_p_Ferris__CopyFailed", "Ferris::CopyFailed *", 0, 0, (void*)"libferrisperl::CopyFailed", 0};
static swig_type_info _swigt__p_Ferris__CreateFIFO = {"_p_Ferris__CreateFIFO", "Ferris::CreateFIFO *", 0, 0, (void*)"libferrisperl::CreateFIFO", 0};
static swig_type_info _swigt__p_Ferris__CreateMetaDataContext = {"_p_Ferris__CreateMetaDataContext", "Ferris::CreateMetaDataContext *|Ferris::f_mdcontext *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__CryptoBase = {"_p_Ferris__CryptoBase", "Ferris::CryptoBase *", 0, 0, (void*)"libferrisperl::CryptoBase", 0};
static swig_type_info _swigt__p_Ferris__CurlEasyInitFailed = {"_p_Ferris__CurlEasyInitFailed", "Ferris::CurlEasyInitFailed *", 0, 0, (void*)"libferrisperl::CurlEasyInitFailed", 0};
static swig_type_info _swigt__p_Ferris__CurlPerformFailed = {"_p_Ferris__CurlPerformFailed", "Ferris::CurlPerformFailed *", 0, 0, (void*)"libferrisperl::CurlPerformFailed", 0};
static swig_type_info _swigt__p_Ferris__CurlStateError = {"_p_Ferris__CurlStateError", "Ferris::CurlStateError *", 0, 0, (void*)"libferrisperl::CurlStateError", 0};
static swig_type_info _swigt__p_Ferris__CurlStaticInitFailed = {"_p_Ferris__CurlStaticInitFailed", "Ferris::CurlStaticInitFailed *", 0, 0, (void*)"libferrisperl::CurlStaticInitFailed", 0};
static swig_type_info _swigt__p_Ferris__CursorException = {"_p_Ferris__CursorException", "Ferris::CursorException *", 0, 0, (void*)"libferrisperl::CursorException", 0};
static swig_type_info _swigt__p_Ferris__DBusConnectionException = {"_p_Ferris__DBusConnectionException", "Ferris::DBusConnectionException *", 0, 0, (void*)"libferrisperl::DBusConnectionException", 0};
static swig_type_info _swigt__p_Ferris__DBusException = {"_p_Ferris__DBusException", "Ferris::DBusException *", 0, 0, (void*)"libferrisperl::DBusException", 0};
static swig_type_info _swigt__p_Ferris__DTDCreationFailed = {"_p_Ferris__DTDCreationFailed", "Ferris::DTDCreationFailed *", 0, 0, (void*)"libferrisperl::DTDCreationFailed", 0};
static swig_type_info _swigt__p_Ferris__DVDReadException = {"_p_Ferris__DVDReadException", "Ferris::DVDReadException *", 0, 0, (void*)"libferrisperl::DVDReadException", 0};
static swig_type_info _swigt__p_Ferris__Db4Exception = {"_p_Ferris__Db4Exception", "Ferris::Db4Exception *", 0, 0, (void*)"libferrisperl::Db4Exception", 0};
static swig_type_info _swigt__p_Ferris__Db4KeyNotFound = {"_p_Ferris__Db4KeyNotFound", "Ferris::Db4KeyNotFound *", 0, 0, (void*)"libferrisperl::Db4KeyNotFound", 0};
static swig_type_info _swigt__p_Ferris__DesktopFileKeyNotFound = {"_p_Ferris__DesktopFileKeyNotFound", "Ferris::DesktopFileKeyNotFound *", 0, 0, (void*)"libferrisperl::DesktopFileKeyNotFound", 0};
static swig_type_info _swigt__p_Ferris__EAIndexException = {"_p_Ferris__EAIndexException", "Ferris::EAIndexException *", 0, 0, (void*)"libferrisperl::EAIndexException", 0};
static swig_type_info _swigt__p_Ferris__EA_Atom = {"_p_Ferris__EA_Atom", "Ferris::EA_Atom *", 0, 0, (void*)"libferrisperl::EA_Atom", 0};
static swig_type_info _swigt__p_Ferris__EA_Atom_RDFCacheAttribute = {"_p_Ferris__EA_Atom_RDFCacheAttribute", "Ferris::EA_Atom_RDFCacheAttribute *", 0, 0, (void*)"libferrisperl::EA_Atom_RDFCacheAttribute", 0};
static swig_type_info _swigt__p_Ferris__EA_Atom_ReadOnly = {"_p_Ferris__EA_Atom_ReadOnly", "Ferris::EA_Atom_ReadOnly *", 0, 0, (void*)"libferrisperl::EA_Atom_ReadOnly", 0};
static swig_type_info _swigt__p_Ferris__EA_Atom_ReadOnly_PassedInStream = {"_p_Ferris__EA_Atom_ReadOnly_PassedInStream", "Ferris::EA_Atom_ReadOnly_PassedInStream *", 0, 0, (void*)"libferrisperl::EA_Atom_ReadOnly_PassedInStream", 0};
static swig_type_info _swigt__p_Ferris__EA_Atom_ReadWrite = {"_p_Ferris__EA_Atom_ReadWrite", "Ferris::EA_Atom_ReadWrite *", 0, 0, (void*)"libferrisperl::EA_Atom_ReadWrite", 0};
static swig_type_info _swigt__p_Ferris__EA_Atom_ReadWrite_BaseT_Ferris__EA_Atom_ReadOnly_PassedInStream_t__GetIStream_PassedInStream_Func_t = {"_p_Ferris__EA_Atom_ReadWrite_BaseT_Ferris__EA_Atom_ReadOnly_PassedInStream_t__GetIStream_PassedInStream_Func_t", "Ferris::EA_Atom_ReadWrite_PassedInStream::GetIStream_PassedInStream_Func_t *|Ferris::EA_Atom_ReadWrite_Base< Ferris::EA_Atom_ReadOnly_PassedInStream >::GetIStream_PassedInStream_Func_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__EA_Atom_ReadWrite_Contents = {"_p_Ferris__EA_Atom_ReadWrite_Contents", "Ferris::EA_Atom_ReadWrite_Contents *", 0, 0, (void*)"libferrisperl::EA_Atom_ReadWrite_Contents", 0};
static swig_type_info _swigt__p_Ferris__EA_Atom_ReadWrite_OpenModeCached = {"_p_Ferris__EA_Atom_ReadWrite_OpenModeCached", "Ferris::EA_Atom_ReadWrite_OpenModeCached *", 0, 0, (void*)"libferrisperl::EA_Atom_ReadWrite_OpenModeCached", 0};
static swig_type_info _swigt__p_Ferris__EA_Atom_ReadWrite_PassedInStream = {"_p_Ferris__EA_Atom_ReadWrite_PassedInStream", "Ferris::EA_Atom_ReadWrite_PassedInStream *", 0, 0, (void*)"libferrisperl::EA_Atom_ReadWrite_PassedInStream", 0};
static swig_type_info _swigt__p_Ferris__EA_Atom_ReadWrite__RWBase_t__GetIStream_Func_t = {"_p_Ferris__EA_Atom_ReadWrite__RWBase_t__GetIStream_Func_t", "Ferris::EA_Atom_ReadWrite::RWBase_t::GetIStream_Func_t *|Ferris::EA_Atom_ReadWrite::GetIStream_Func_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__EA_Atom_ReadWrite__RWBase_t__IOStreamClosed_Func_t = {"_p_Ferris__EA_Atom_ReadWrite__RWBase_t__IOStreamClosed_Func_t", "Ferris::EA_Atom_ReadWrite::RWBase_t::IOStreamClosed_Func_t *|Ferris::EA_Atom_ReadWrite::IOStreamClosed_Func_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__EA_Atom_Static = {"_p_Ferris__EA_Atom_Static", "Ferris::EA_Atom_Static *", 0, 0, (void*)"libferrisperl::EA_Atom_Static", 0};
static swig_type_info _swigt__p_Ferris__Emblem = {"_p_Ferris__Emblem", "Ferris::Emblem *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__EmblemException = {"_p_Ferris__EmblemException", "Ferris::EmblemException *", 0, 0, (void*)"libferrisperl::EmblemException", 0};
static swig_type_info _swigt__p_Ferris__EmblemNotFoundException = {"_p_Ferris__EmblemNotFoundException", "Ferris::EmblemNotFoundException *", 0, 0, (void*)"libferrisperl::EmblemNotFoundException", 0};
static swig_type_info _swigt__p_Ferris__Etagere = {"_p_Ferris__Etagere", "Ferris::Etagere *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__EtagereException = {"_p_Ferris__EtagereException", "Ferris::EtagereException *", 0, 0, (void*)"libferrisperl::EtagereException", 0};
static swig_type_info _swigt__p_Ferris__FCA__ConceptLattice = {"_p_Ferris__FCA__ConceptLattice", "Ferris::FCA::ConceptLattice *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__FCA__fh_conceptLattice = {"_p_Ferris__FCA__fh_conceptLattice", "Ferris::FCA::fh_conceptLattice *", 0, 0, (void*)"libferrisperl::ConceptLattice", 0};
static swig_type_info _swigt__p_Ferris__FFilterSyntaxError = {"_p_Ferris__FFilterSyntaxError", "Ferris::FFilterSyntaxError *", 0, 0, (void*)"libferrisperl::FFilterSyntaxError", 0};
static swig_type_info _swigt__p_Ferris__FerrisCanNotCreateLeafOfLeaf = {"_p_Ferris__FerrisCanNotCreateLeafOfLeaf", "Ferris::FerrisCanNotCreateLeafOfLeaf *", 0, 0, (void*)"libferrisperl::FerrisCanNotCreateLeafOfLeaf", 0};
static swig_type_info _swigt__p_Ferris__FerrisCanNotGetScriptNameError = {"_p_Ferris__FerrisCanNotGetScriptNameError", "Ferris::FerrisCanNotGetScriptNameError *", 0, 0, (void*)"libferrisperl::FerrisCanNotGetScriptNameError", 0};
static swig_type_info _swigt__p_Ferris__FerrisCreateAttributeFailed = {"_p_Ferris__FerrisCreateAttributeFailed", "Ferris::FerrisCreateAttributeFailed *", 0, 0, (void*)"libferrisperl::FerrisCreateAttributeFailed", 0};
static swig_type_info _swigt__p_Ferris__FerrisCreateAttributeNotSupported = {"_p_Ferris__FerrisCreateAttributeNotSupported", "Ferris::FerrisCreateAttributeNotSupported *", 0, 0, (void*)"libferrisperl::FerrisCreateAttributeNotSupported", 0};
static swig_type_info _swigt__p_Ferris__FerrisCreateSubContextFailed = {"_p_Ferris__FerrisCreateSubContextFailed", "Ferris::FerrisCreateSubContextFailed *", 0, 0, (void*)"libferrisperl::FerrisCreateSubContextFailed", 0};
static swig_type_info _swigt__p_Ferris__FerrisCreateSubContextNotSupported = {"_p_Ferris__FerrisCreateSubContextNotSupported", "Ferris::FerrisCreateSubContextNotSupported *", 0, 0, (void*)"libferrisperl::FerrisCreateSubContextNotSupported", 0};
static swig_type_info _swigt__p_Ferris__FerrisCurlServerNameNotFound = {"_p_Ferris__FerrisCurlServerNameNotFound", "Ferris::FerrisCurlServerNameNotFound *", 0, 0, (void*)"libferrisperl::FerrisCurlServerNameNotFound", 0};
static swig_type_info _swigt__p_Ferris__FerrisExceptionBase = {"_p_Ferris__FerrisExceptionBase", "Ferris::FerrisExceptionBase *", 0, 0, (void*)"libferrisperl::FerrisExceptionBase", 0};
static swig_type_info _swigt__p_Ferris__FerrisException_CodeState = {"_p_Ferris__FerrisException_CodeState", "Ferris::FerrisException_CodeState *", 0, 0, (void*)"libferrisperl::FerrisException_CodeState", 0};
static swig_type_info _swigt__p_Ferris__FerrisGIMPImageLoadFailed = {"_p_Ferris__FerrisGIMPImageLoadFailed", "Ferris::FerrisGIMPImageLoadFailed *", 0, 0, (void*)"libferrisperl::FerrisGIMPImageLoadFailed", 0};
static swig_type_info _swigt__p_Ferris__FerrisGLibCException = {"_p_Ferris__FerrisGLibCException", "Ferris::FerrisGLibCException *", 0, 0, (void*)"libferrisperl::FerrisGLibCException", 0};
static swig_type_info _swigt__p_Ferris__FerrisHALException = {"_p_Ferris__FerrisHALException", "Ferris::FerrisHALException *", 0, 0, (void*)"libferrisperl::FerrisHALException", 0};
static swig_type_info _swigt__p_Ferris__FerrisImageLoadFailed = {"_p_Ferris__FerrisImageLoadFailed", "Ferris::FerrisImageLoadFailed *", 0, 0, (void*)"libferrisperl::FerrisImageLoadFailed", 0};
static swig_type_info _swigt__p_Ferris__FerrisImageSaveFailed = {"_p_Ferris__FerrisImageSaveFailed", "Ferris::FerrisImageSaveFailed *", 0, 0, (void*)"libferrisperl::FerrisImageSaveFailed", 0};
static swig_type_info _swigt__p_Ferris__FerrisImlib2ImageLoadFailed = {"_p_Ferris__FerrisImlib2ImageLoadFailed", "Ferris::FerrisImlib2ImageLoadFailed *", 0, 0, (void*)"libferrisperl::FerrisImlib2ImageLoadFailed", 0};
static swig_type_info _swigt__p_Ferris__FerrisInternalError = {"_p_Ferris__FerrisInternalError", "Ferris::FerrisInternalError *", 0, 0, (void*)"libferrisperl::FerrisInternalError", 0};
static swig_type_info _swigt__p_Ferris__FerrisJPEGImageLoadFailed = {"_p_Ferris__FerrisJPEGImageLoadFailed", "Ferris::FerrisJPEGImageLoadFailed *", 0, 0, (void*)"libferrisperl::FerrisJPEGImageLoadFailed", 0};
static swig_type_info _swigt__p_Ferris__FerrisNotReadableAsContext = {"_p_Ferris__FerrisNotReadableAsContext", "Ferris::FerrisNotReadableAsContext *", 0, 0, (void*)"libferrisperl::FerrisNotReadableAsContext", 0};
static swig_type_info _swigt__p_Ferris__FerrisNotSupportedInThisContext = {"_p_Ferris__FerrisNotSupportedInThisContext", "Ferris::FerrisNotSupportedInThisContext *", 0, 0, (void*)"libferrisperl::FerrisNotSupportedInThisContext", 0};
static swig_type_info _swigt__p_Ferris__FerrisOutOfMemory = {"_p_Ferris__FerrisOutOfMemory", "Ferris::FerrisOutOfMemory *", 0, 0, (void*)"libferrisperl::FerrisOutOfMemory", 0};
static swig_type_info _swigt__p_Ferris__FerrisPNGImageLoadFailed = {"_p_Ferris__FerrisPNGImageLoadFailed", "Ferris::FerrisPNGImageLoadFailed *", 0, 0, (void*)"libferrisperl::FerrisPNGImageLoadFailed", 0};
static swig_type_info _swigt__p_Ferris__FerrisParentNotSetError = {"_p_Ferris__FerrisParentNotSetError", "Ferris::FerrisParentNotSetError *", 0, 0, (void*)"libferrisperl::FerrisParentNotSetError", 0};
static swig_type_info _swigt__p_Ferris__FerrisSetCWDException = {"_p_Ferris__FerrisSetCWDException", "Ferris::FerrisSetCWDException *", 0, 0, (void*)"libferrisperl::FerrisSetCWDException", 0};
static swig_type_info _swigt__p_Ferris__FerrisSqlServerNameNotFound = {"_p_Ferris__FerrisSqlServerNameNotFound", "Ferris::FerrisSqlServerNameNotFound *", 0, 0, (void*)"libferrisperl::FerrisSqlServerNameNotFound", 0};
static swig_type_info _swigt__p_Ferris__FerrisStatException = {"_p_Ferris__FerrisStatException", "Ferris::FerrisStatException *", 0, 0, (void*)"libferrisperl::FerrisStatException", 0};
static swig_type_info _swigt__p_Ferris__FerrisStreamException = {"_p_Ferris__FerrisStreamException", "Ferris::FerrisStreamException *", 0, 0, (void*)"libferrisperl::FerrisStreamException", 0};
static swig_type_info _swigt__p_Ferris__FerrisStreamLoadFailed = {"_p_Ferris__FerrisStreamLoadFailed", "Ferris::FerrisStreamLoadFailed *", 0, 0, (void*)"libferrisperl::FerrisStreamLoadFailed", 0};
static swig_type_info _swigt__p_Ferris__FerrisVFSExceptionBase = {"_p_Ferris__FerrisVFSExceptionBase", "Ferris::FerrisVFSExceptionBase *", 0, 0, (void*)"libferrisperl::FerrisVFSExceptionBase", 0};
static swig_type_info _swigt__p_Ferris__FerrisWaitTimedOut = {"_p_Ferris__FerrisWaitTimedOut", "Ferris::FerrisWaitTimedOut *", 0, 0, (void*)"libferrisperl::FerrisWaitTimedOut", 0};
static swig_type_info _swigt__p_Ferris__Ferris_Logging_ostreamT_char_std__char_traitsT_char_t_t = {"_p_Ferris__Ferris_Logging_ostreamT_char_std__char_traitsT_char_t_t", "Ferris::Ferris_Logging_ostream< char,std::char_traits< char > > *|Ferris::fhl_ostream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__Ferris_fstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t = {"_p_Ferris__Ferris_fstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t", "Ferris::Ferris_fstream< char,std::char_traits< char >,std::allocator< char > > *|Ferris::f_fstream *|Ferris::fh_fstream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__Ferris_ififostreamT_char_std__char_traitsT_char_t_t = {"_p_Ferris__Ferris_ififostreamT_char_std__char_traitsT_char_t_t", "Ferris::Ferris_ififostream< char,std::char_traits< char > > *|Ferris::f_ififostream *|Ferris::fh_ififostream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__Ferris_ifstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t = {"_p_Ferris__Ferris_ifstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t", "Ferris::f_ifstream *|Ferris::fh_ifstream *|Ferris::Ferris_ifstream< char,std::char_traits< char >,std::allocator< char > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t = {"_p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t", "Ferris::f_iostream *|Ferris::fh_iostream *|Ferris::Ferris_iostream< char,std::char_traits< char > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t = {"_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t", "Ferris::Ferris_istream< char,std::char_traits< char > > *|Ferris::f_istream *|Ferris::fh_istream *|Ferris::closeSignalStream_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__Ferris_istringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t = {"_p_Ferris__Ferris_istringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t", "Ferris::f_istringstream *|Ferris::fh_istringstream *|Ferris::Ferris_istringstream< char,std::char_traits< char >,std::allocator< char > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__Ferris_ofstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t = {"_p_Ferris__Ferris_ofstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t", "Ferris::f_ofstream *|Ferris::fh_ofstream *|Ferris::Ferris_ofstream< char,std::char_traits< char >,std::allocator< char > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t = {"_p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t", "Ferris::Ferris_ostream< char,std::char_traits< char > > *|Ferris::f_ostream *|Ferris::fh_ostream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__Ferris_ostringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t = {"_p_Ferris__Ferris_ostringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t", "Ferris::f_ostringstream *|Ferris::fh_ostringstream *|Ferris::Ferris_ostringstream< char,std::char_traits< char >,std::allocator< char > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__Ferris_stringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t = {"_p_Ferris__Ferris_stringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t", "Ferris::f_stringstream *|Ferris::fh_stringstream *|Ferris::Ferris_stringstream< char,std::char_traits< char >,std::allocator< char > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__FileClipboard = {"_p_Ferris__FileClipboard", "Ferris::FileClipboard *", 0, 0, (void*)"libferrisperl::FileClipboard", 0};
static swig_type_info _swigt__p_Ferris__FullTextIndexException = {"_p_Ferris__FullTextIndexException", "Ferris::FullTextIndexException *", 0, 0, (void*)"libferrisperl::FullTextIndexException", 0};
static swig_type_info _swigt__p_Ferris__FulltextQuerySyntaxError = {"_p_Ferris__FulltextQuerySyntaxError", "Ferris::FulltextQuerySyntaxError *", 0, 0, (void*)"libferrisperl::FulltextQuerySyntaxError", 0};
static swig_type_info _swigt__p_Ferris__GModuleOpenFailed = {"_p_Ferris__GModuleOpenFailed", "Ferris::GModuleOpenFailed *", 0, 0, (void*)"libferrisperl::GModuleOpenFailed", 0};
static swig_type_info _swigt__p_Ferris__GPGMEInitFailed = {"_p_Ferris__GPGMEInitFailed", "Ferris::GPGMEInitFailed *", 0, 0, (void*)"libferrisperl::GPGMEInitFailed", 0};
static swig_type_info _swigt__p_Ferris__GPhoto2 = {"_p_Ferris__GPhoto2", "Ferris::GPhoto2 *", 0, 0, (void*)"libferrisperl::GPhoto2", 0};
static swig_type_info _swigt__p_Ferris__GdbmException = {"_p_Ferris__GdbmException", "Ferris::GdbmException *", 0, 0, (void*)"libferrisperl::GdbmException", 0};
static swig_type_info _swigt__p_Ferris__GenericError = {"_p_Ferris__GenericError", "Ferris::GenericError *", 0, 0, (void*)"libferrisperl::GenericError", 0};
static swig_type_info _swigt__p_Ferris__Handlable = {"_p_Ferris__Handlable", "Ferris::Handlable *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__ImplicitIteratorUpdateLock = {"_p_Ferris__ImplicitIteratorUpdateLock", "Ferris::ImplicitIteratorUpdateLock *", 0, 0, (void*)"libferrisperl::ImplicitIteratorUpdateLock", 0};
static swig_type_info _swigt__p_Ferris__IndexException = {"_p_Ferris__IndexException", "Ferris::IndexException *", 0, 0, (void*)"libferrisperl::IndexException", 0};
static swig_type_info _swigt__p_Ferris__InvalidModeString = {"_p_Ferris__InvalidModeString", "Ferris::InvalidModeString *", 0, 0, (void*)"libferrisperl::InvalidModeString", 0};
static swig_type_info _swigt__p_Ferris__InvalidSortSpecification = {"_p_Ferris__InvalidSortSpecification", "Ferris::InvalidSortSpecification *", 0, 0, (void*)"libferrisperl::InvalidSortSpecification", 0};
static swig_type_info _swigt__p_Ferris__KeylistException = {"_p_Ferris__KeylistException", "Ferris::KeylistException *", 0, 0, (void*)"libferrisperl::KeylistException", 0};
static swig_type_info _swigt__p_Ferris__LDAPException = {"_p_Ferris__LDAPException", "Ferris::LDAPException *", 0, 0, (void*)"libferrisperl::LDAPException", 0};
static swig_type_info _swigt__p_Ferris__MalformedURL = {"_p_Ferris__MalformedURL", "Ferris::MalformedURL *", 0, 0, (void*)"libferrisperl::MalformedURL", 0};
static swig_type_info _swigt__p_Ferris__Medallion = {"_p_Ferris__Medallion", "Ferris::Medallion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__MedallionBelief = {"_p_Ferris__MedallionBelief", "Ferris::MedallionBelief *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__MedallionException = {"_p_Ferris__MedallionException", "Ferris::MedallionException *", 0, 0, (void*)"libferrisperl::MedallionException", 0};
static swig_type_info _swigt__p_Ferris__MutableCollectionEvents = {"_p_Ferris__MutableCollectionEvents", "Ferris::MutableCollectionEvents *", 0, 0, (void*)"libferrisperl::MutableCollectionEvents", 0};
static swig_type_info _swigt__p_Ferris__NoOpenWithContext = {"_p_Ferris__NoOpenWithContext", "Ferris::NoOpenWithContext *", 0, 0, (void*)"libferrisperl::NoOpenWithContext", 0};
static swig_type_info _swigt__p_Ferris__NoSuchAgentException = {"_p_Ferris__NoSuchAgentException", "Ferris::NoSuchAgentException *", 0, 0, (void*)"libferrisperl::NoSuchAgentException", 0};
static swig_type_info _swigt__p_Ferris__NoSuchAttribute = {"_p_Ferris__NoSuchAttribute", "Ferris::NoSuchAttribute *", 0, 0, (void*)"libferrisperl::NoSuchAttribute", 0};
static swig_type_info _swigt__p_Ferris__NoSuchBeliefException = {"_p_Ferris__NoSuchBeliefException", "Ferris::NoSuchBeliefException *", 0, 0, (void*)"libferrisperl::NoSuchBeliefException", 0};
static swig_type_info _swigt__p_Ferris__NoSuchContextClass = {"_p_Ferris__NoSuchContextClass", "Ferris::NoSuchContextClass *", 0, 0, (void*)"libferrisperl::NoSuchContextClass", 0};
static swig_type_info _swigt__p_Ferris__NoSuchGroup = {"_p_Ferris__NoSuchGroup", "Ferris::NoSuchGroup *", 0, 0, (void*)"libferrisperl::NoSuchGroup", 0};
static swig_type_info _swigt__p_Ferris__NoSuchObject = {"_p_Ferris__NoSuchObject", "Ferris::NoSuchObject *", 0, 0, (void*)"libferrisperl::NoSuchObject", 0};
static swig_type_info _swigt__p_Ferris__NoSuchPersonalityException = {"_p_Ferris__NoSuchPersonalityException", "Ferris::NoSuchPersonalityException *", 0, 0, (void*)"libferrisperl::NoSuchPersonalityException", 0};
static swig_type_info _swigt__p_Ferris__NoSuchSubContext = {"_p_Ferris__NoSuchSubContext", "Ferris::NoSuchSubContext *", 0, 0, (void*)"libferrisperl::NoSuchSubContext", 0};
static swig_type_info _swigt__p_Ferris__NoSuchUser = {"_p_Ferris__NoSuchUser", "Ferris::NoSuchUser *", 0, 0, (void*)"libferrisperl::NoSuchUser", 0};
static swig_type_info _swigt__p_Ferris__NotSupported = {"_p_Ferris__NotSupported", "Ferris::NotSupported *", 0, 0, (void*)"libferrisperl::NotSupported", 0};
static swig_type_info _swigt__p_Ferris__ObjectExists = {"_p_Ferris__ObjectExists", "Ferris::ObjectExists *", 0, 0, (void*)"libferrisperl::ObjectExists", 0};
static swig_type_info _swigt__p_Ferris__OpenActionIsNotDefined = {"_p_Ferris__OpenActionIsNotDefined", "Ferris::OpenActionIsNotDefined *", 0, 0, (void*)"libferrisperl::OpenActionIsNotDefined", 0};
static swig_type_info _swigt__p_Ferris__ParseError = {"_p_Ferris__ParseError", "Ferris::ParseError *", 0, 0, (void*)"libferrisperl::ParseError", 0};
static swig_type_info _swigt__p_Ferris__Personality = {"_p_Ferris__Personality", "Ferris::Personality *", 0, 0, (void*)"libferrisperl::Personality", 0};
static swig_type_info _swigt__p_Ferris__PreprocessedSortString = {"_p_Ferris__PreprocessedSortString", "Ferris::PreprocessedSortString *|Ferris::f_sorter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__ProgramSpawn = {"_p_Ferris__ProgramSpawn", "Ferris::ProgramSpawn *", 0, 0, (void*)"libferrisperl::ProgramSpawn", 0};
static swig_type_info _swigt__p_Ferris__QuotaStorageFull = {"_p_Ferris__QuotaStorageFull", "Ferris::QuotaStorageFull *", 0, 0, (void*)"libferrisperl::QuotaStorageFull", 0};
static swig_type_info _swigt__p_Ferris__RegexCollection = {"_p_Ferris__RegexCollection", "Ferris::RegexCollection *", 0, 0, (void*)"libferrisperl::RegexCollection", 0};
static swig_type_info _swigt__p_Ferris__RelativeTimeParsing = {"_p_Ferris__RelativeTimeParsing", "Ferris::RelativeTimeParsing *", 0, 0, (void*)"libferrisperl::RelativeTimeParsing", 0};
static swig_type_info _swigt__p_Ferris__RemoveFailed = {"_p_Ferris__RemoveFailed", "Ferris::RemoveFailed *", 0, 0, (void*)"libferrisperl::RemoveFailed", 0};
static swig_type_info _swigt__p_Ferris__RenameFailed = {"_p_Ferris__RenameFailed", "Ferris::RenameFailed *", 0, 0, (void*)"libferrisperl::RenameFailed", 0};
static swig_type_info _swigt__p_Ferris__RootContextCreationFailed = {"_p_Ferris__RootContextCreationFailed", "Ferris::RootContextCreationFailed *", 0, 0, (void*)"libferrisperl::RootContextCreationFailed", 0};
static swig_type_info _swigt__p_Ferris__RootContextFactory = {"_p_Ferris__RootContextFactory", "Ferris::RootContextFactory *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__Runner = {"_p_Ferris__Runner", "Ferris::Runner *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__SQLiteException = {"_p_Ferris__SQLiteException", "Ferris::SQLiteException *", 0, 0, (void*)"libferrisperl::SQLiteException", 0};
static swig_type_info _swigt__p_Ferris__SchemaException = {"_p_Ferris__SchemaException", "Ferris::SchemaException *", 0, 0, (void*)"libferrisperl::SchemaException", 0};
static swig_type_info _swigt__p_Ferris__SchemaNotFoundException = {"_p_Ferris__SchemaNotFoundException", "Ferris::SchemaNotFoundException *", 0, 0, (void*)"libferrisperl::SchemaNotFoundException", 0};
static swig_type_info _swigt__p_Ferris__SocketOptionsException = {"_p_Ferris__SocketOptionsException", "Ferris::SocketOptionsException *", 0, 0, (void*)"libferrisperl::SocketOptionsException", 0};
static swig_type_info _swigt__p_Ferris__StorageFull = {"_p_Ferris__StorageFull", "Ferris::StorageFull *", 0, 0, (void*)"libferrisperl::StorageFull", 0};
static swig_type_info _swigt__p_Ferris__SubContextAlreadyInUse = {"_p_Ferris__SubContextAlreadyInUse", "Ferris::SubContextAlreadyInUse *", 0, 0, (void*)"libferrisperl::SubContextAlreadyInUse", 0};
static swig_type_info _swigt__p_Ferris__SyntaxError = {"_p_Ferris__SyntaxError", "Ferris::SyntaxError *", 0, 0, (void*)"libferrisperl::SyntaxError", 0};
static swig_type_info _swigt__p_Ferris__Time__Benchmark = {"_p_Ferris__Time__Benchmark", "Ferris::Time::Benchmark *", 0, 0, (void*)"libferrisperl::Benchmark", 0};
static swig_type_info _swigt__p_Ferris__Times = {"_p_Ferris__Times", "Ferris::Times *", 0, 0, (void*)"libferrisperl::Times", 0};
static swig_type_info _swigt__p_Ferris__URLDecodeSyntaxError = {"_p_Ferris__URLDecodeSyntaxError", "Ferris::URLDecodeSyntaxError *", 0, 0, (void*)"libferrisperl::URLDecodeSyntaxError", 0};
static swig_type_info _swigt__p_Ferris__UnknownBackupMode = {"_p_Ferris__UnknownBackupMode", "Ferris::UnknownBackupMode *", 0, 0, (void*)"libferrisperl::UnknownBackupMode", 0};
static swig_type_info _swigt__p_Ferris__UnknownConfigLocation = {"_p_Ferris__UnknownConfigLocation", "Ferris::UnknownConfigLocation *", 0, 0, (void*)"libferrisperl::UnknownConfigLocation", 0};
static swig_type_info _swigt__p_Ferris__UnspoortedBlockSize = {"_p_Ferris__UnspoortedBlockSize", "Ferris::UnspoortedBlockSize *", 0, 0, (void*)"libferrisperl::UnspoortedBlockSize", 0};
static swig_type_info _swigt__p_Ferris__Util__SingleShot = {"_p_Ferris__Util__SingleShot", "Ferris::Util::SingleShot *", 0, 0, (void*)"libferrisperl::SingleShot", 0};
static swig_type_info _swigt__p_Ferris__Versioned = {"_p_Ferris__Versioned", "Ferris::Versioned *", 0, 0, (void*)"libferrisperl::Versioned", 0};
static swig_type_info _swigt__p_Ferris__WebPhotoException = {"_p_Ferris__WebPhotoException", "Ferris::WebPhotoException *", 0, 0, (void*)"libferrisperl::WebPhotoException", 0};
static swig_type_info _swigt__p_Ferris__XMLBase = {"_p_Ferris__XMLBase", "Ferris::XMLBase *", 0, 0, (void*)"libferrisperl::XMLBase", 0};
static swig_type_info _swigt__p_Ferris__XMLFatalError = {"_p_Ferris__XMLFatalError", "Ferris::XMLFatalError *", 0, 0, (void*)"libferrisperl::XMLFatalError", 0};
static swig_type_info _swigt__p_Ferris__XMLParseError = {"_p_Ferris__XMLParseError", "Ferris::XMLParseError *", 0, 0, (void*)"libferrisperl::XMLParseError", 0};
static swig_type_info _swigt__p_Ferris__XMPBase = {"_p_Ferris__XMPBase", "Ferris::XMPBase *", 0, 0, (void*)"libferrisperl::XMPBase", 0};
static swig_type_info _swigt__p_Ferris__XMPPacketScanFailed = {"_p_Ferris__XMPPacketScanFailed", "Ferris::XMPPacketScanFailed *", 0, 0, (void*)"libferrisperl::XMPPacketScanFailed", 0};
static swig_type_info _swigt__p_Ferris__dbXMLException = {"_p_Ferris__dbXMLException", "Ferris::dbXMLException *", 0, 0, (void*)"libferrisperl::dbXMLException", 0};
static swig_type_info _swigt__p_Ferris__eetException = {"_p_Ferris__eetException", "Ferris::eetException *", 0, 0, (void*)"libferrisperl::eetException", 0};
static swig_type_info _swigt__p_Ferris__eetKeyNotFound = {"_p_Ferris__eetKeyNotFound", "Ferris::eetKeyNotFound *", 0, 0, (void*)"libferrisperl::eetKeyNotFound", 0};
static swig_type_info _swigt__p_Ferris__ferris_basic_streambuf_fourk = {"_p_Ferris__ferris_basic_streambuf_fourk", "Ferris::ferris_basic_streambuf_fourk *", 0, 0, (void*)"libferrisperl::ferris_basic_streambuf_fourk", 0};
static swig_type_info _swigt__p_Ferris__ferris_basic_streambuf_onemeg = {"_p_Ferris__ferris_basic_streambuf_onemeg", "Ferris::ferris_basic_streambuf_onemeg *", 0, 0, (void*)"libferrisperl::ferris_basic_streambuf_onemeg", 0};
static swig_type_info _swigt__p_Ferris__ferris_basic_streambuf_quartk = {"_p_Ferris__ferris_basic_streambuf_quartk", "Ferris::ferris_basic_streambuf_quartk *", 0, 0, (void*)"libferrisperl::ferris_basic_streambuf_quartk", 0};
static swig_type_info _swigt__p_Ferris__ferris_basic_streambuf_sixteenbytes = {"_p_Ferris__ferris_basic_streambuf_sixteenbytes", "Ferris::ferris_basic_streambuf_sixteenbytes *", 0, 0, (void*)"libferrisperl::ferris_basic_streambuf_sixteenbytes", 0};
static swig_type_info _swigt__p_Ferris__ferris_basic_streambuf_sixteenk = {"_p_Ferris__ferris_basic_streambuf_sixteenk", "Ferris::ferris_basic_streambuf_sixteenk *", 0, 0, (void*)"libferrisperl::ferris_basic_streambuf_sixteenk", 0};
static swig_type_info _swigt__p_Ferris__ferris_basic_streambuf_virtual = {"_p_Ferris__ferris_basic_streambuf_virtual", "Ferris::ferris_basic_streambuf_virtual *", 0, 0, (void*)"libferrisperl::ferris_basic_streambuf_virtual", 0};
static swig_type_info _swigt__p_Ferris__ferris_ios = {"_p_Ferris__ferris_ios", "Ferris::ferris_ios *", 0, 0, (void*)"libferrisperl::ferris_ios", 0};
static swig_type_info _swigt__p_Ferris__ferris_streambufT_char_std__char_traitsT_char_t_t = {"_p_Ferris__ferris_streambufT_char_std__char_traitsT_char_t_t", "Ferris::ferris_streambuf< char,std::char_traits< char > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ferris__fh_attrcol = {"_p_Ferris__fh_attrcol", "Ferris::fh_attrcol *", 0, 0, (void*)"libferrisperl::AttributeCollection", 0};
static swig_type_info _swigt__p_Ferris__fh_attribute = {"_p_Ferris__fh_attribute", "Ferris::fh_attribute *", 0, 0, (void*)"libferrisperl::AttributeProxy", 0};
static swig_type_info _swigt__p_Ferris__fh_cemblem = {"_p_Ferris__fh_cemblem", "Ferris::fh_cemblem *", 0, 0, (void*)"libferrisperl::ColdEmblem", 0};
static swig_type_info _swigt__p_Ferris__fh_context = {"_p_Ferris__fh_context", "Ferris::fh_context *|Ferris::ContextIterator::pointer *|Ferris::ContextIterator::reference *", 0, 0, (void*)"libferrisperl::Context", 0};
static swig_type_info _swigt__p_Ferris__fh_emblem = {"_p_Ferris__fh_emblem", "Ferris::fh_emblem *", 0, 0, (void*)"libferrisperl::Emblem", 0};
static swig_type_info _swigt__p_Ferris__fh_emblem_less = {"_p_Ferris__fh_emblem_less", "Ferris::fh_emblem_less *", 0, 0, (void*)"libferrisperl::fh_emblem_less", 0};
static swig_type_info _swigt__p_Ferris__fh_etagere = {"_p_Ferris__fh_etagere", "Ferris::fh_etagere *", 0, 0, (void*)"libferrisperl::Etagere", 0};
static swig_type_info _swigt__p_Ferris__fh_medallion = {"_p_Ferris__fh_medallion", "Ferris::fh_medallion *", 0, 0, (void*)"libferrisperl::Medallion", 0};
static swig_type_info _swigt__p_Ferris__fh_medallionBelief = {"_p_Ferris__fh_medallionBelief", "Ferris::fh_medallionBelief *", 0, 0, (void*)"libferrisperl::MedallionBelief", 0};
static swig_type_info _swigt__p_Ferris__fh_runner = {"_p_Ferris__fh_runner", "Ferris::fh_runner *", 0, 0, (void*)"libferrisperl::Runner", 0};
static swig_type_info _swigt__p_Ferris__fh_sorter = {"_p_Ferris__fh_sorter", "Ferris::fh_sorter *", 0, 0, (void*)"libferrisperl::PreprocessedSortString", 0};
static swig_type_info _swigt__p_Ferris__getIOStreamCloseUpdateFailed = {"_p_Ferris__getIOStreamCloseUpdateFailed", "Ferris::getIOStreamCloseUpdateFailed *", 0, 0, (void*)"libferrisperl::getIOStreamCloseUpdateFailed", 0};
static swig_type_info _swigt__p_Ferris__getIOStreamCloseUpdatePermissionDenied = {"_p_Ferris__getIOStreamCloseUpdatePermissionDenied", "Ferris::getIOStreamCloseUpdatePermissionDenied *", 0, 0, (void*)"libferrisperl::getIOStreamCloseUpdatePermissionDenied", 0};
static swig_type_info _swigt__p_Ferris__giStreamPosRAII = {"_p_Ferris__giStreamPosRAII", "Ferris::giStreamPosRAII *", 0, 0, (void*)"libferrisperl::giStreamPosRAII", 0};
static swig_type_info _swigt__p_Ferris__tdbException = {"_p_Ferris__tdbException", "Ferris::tdbException *", 0, 0, (void*)"libferrisperl::tdbException", 0};
static swig_type_info _swigt__p_GSpawnFlags = {"_p_GSpawnFlags", "GSpawnFlags *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GenericCloseSignal_t = {"_p_GenericCloseSignal_t", "GenericCloseSignal_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GetIOStream_Func_t = {"_p_GetIOStream_Func_t", "GetIOStream_Func_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GetIStream_Func_t = {"_p_GetIStream_Func_t", "GetIStream_Func_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GetIStream_PassedInStream_Func_t = {"_p_GetIStream_PassedInStream_Func_t", "GetIStream_PassedInStream_Func_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IOStreamClosed_Func_t = {"_p_IOStreamClosed_Func_t", "IOStreamClosed_Func_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__AllowConversion = {"_p_Loki__AllowConversion", "Loki::AllowConversion *", 0, 0, (void*)"libferrisperl::AllowConversion", 0};
static swig_type_info _swigt__p_Loki__AssocVectorT_void_p_sigc__connection_t = {"_p_Loki__AssocVectorT_void_p_sigc__connection_t", "Ferris::Priv::conmap_t *|Loki::AssocVector< void *,sigc::connection > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__AssocVectorT_void_p_void_p_t = {"_p_Loki__AssocVectorT_void_p_void_p_t", "Loki::AssocVector< void *,void * > *|Ferris::Priv::m_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__DisallowConversion = {"_p_Loki__DisallowConversion", "Loki::DisallowConversion *", 0, 0, (void*)"libferrisperl::DisallowConversion", 0};
static swig_type_info _swigt__p_Loki__FunctorT_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t = {"_p_Loki__FunctorT_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t", "Ferris::EA_Atom_ReadWrite::GetIOStream_Func_t *|Loki::Functor< Ferris::Ferris_iostream< char,std::char_traits< char > >,LOKI_TYPELIST_3 (Ferris::Context *,std::string const &,Ferris::EA_Atom *) > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__FunctorT_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t = {"_p_Loki__FunctorT_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t", "Loki::Functor< Ferris::Ferris_istream< char,std::char_traits< char > >,LOKI_TYPELIST_3 (Ferris::Context *,std::string const &,Ferris::EA_Atom *) > *|Ferris::EA_Atom_ReadOnly::GetIStream_Func_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__FunctorT_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t = {"_p_Loki__FunctorT_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t", "Ferris::Context::f_imageEAGenerator *|Loki::Functor< Loki::SmartPtr< Ferris::Image,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage >,LOKI_TYPELIST_1 (Ferris::fh_context const &) > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__FunctorT_bool_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t = {"_p_Loki__FunctorT_bool_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t", "Loki::Functor< bool,LOKI_TYPELIST_1 (Ferris::fh_context const &) > *|Ferris::fh_matcher *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__FunctorT_void_LOKI_TYPELIST_1_fFerris__fh_emblem_const_RF_t = {"_p_Loki__FunctorT_void_LOKI_TYPELIST_1_fFerris__fh_emblem_const_RF_t", "Loki::Functor< void,LOKI_TYPELIST_1 (Ferris::fh_emblem const &) > *|Ferris::Etagere::f_emblemVisitor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__FunctorT_void_LOKI_TYPELIST_1_fFerris__fh_runnerF_t = {"_p_Loki__FunctorT_void_LOKI_TYPELIST_1_fFerris__fh_runnerF_t", "Ferris::Runner::ChildSetupFunctor_t *|Loki::Functor< void,LOKI_TYPELIST_1 (Ferris::fh_runner) > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__FunctorT_void_LOKI_TYPELIST_4_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_tF_t = {"_p_Loki__FunctorT_void_LOKI_TYPELIST_4_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_tF_t", "Ferris::EA_Atom_ReadWrite_PassedInStream::IOStreamClosed_Func_t *|Loki::Functor< void,LOKI_TYPELIST_4 (Ferris::Context *,std::string const &,Ferris::EA_Atom *,Ferris::Ferris_istream< char,std::char_traits< char > >) > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__NullPointerException = {"_p_Loki__NullPointerException", "Loki::NullPointerException *", 0, 0, (void*)"libferrisperl::NullPointerException", 0};
static swig_type_info _swigt__p_Loki__Private__RefLinkedBase = {"_p_Loki__Private__RefLinkedBase", "Loki::Private::RefLinkedBase *", 0, 0, (void*)"libferrisperl::RefLinkedBase", 0};
static swig_type_info _swigt__p_Loki__SmartPtrT_Ferris__AI__Agent_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t = {"_p_Loki__SmartPtrT_Ferris__AI__Agent_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t", "Loki::SmartPtr< Ferris::AI::Agent,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > *|Ferris::AI::fh_agent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__SmartPtrT_Ferris__AsyncIOHandler_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t = {"_p_Loki__SmartPtrT_Ferris__AsyncIOHandler_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t", "Ferris::fh_aiohandler *|Loki::SmartPtr< Ferris::AsyncIOHandler,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__SmartPtrT_Ferris__CreateMetaDataContext___Ferris__FerrisExRefCountedContext_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t = {"_p_Loki__SmartPtrT_Ferris__CreateMetaDataContext___Ferris__FerrisExRefCountedContext_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t", "Ferris::fh_mdcontext *|Loki::SmartPtr< Ferris::CreateMetaDataContext,::Ferris::FerrisExRefCountedContext,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__SmartPtrT_Ferris__EAIndex__EAIndexManagerDB4Tree_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t = {"_p_Loki__SmartPtrT_Ferris__EAIndex__EAIndexManagerDB4Tree_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t", "Ferris::EAIndex::fh_db4treeidx *|Loki::SmartPtr< Ferris::EAIndex::EAIndexManagerDB4Tree,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__SmartPtrT_Ferris__EAIndex__EAIndexManagerDB4_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t = {"_p_Loki__SmartPtrT_Ferris__EAIndex__EAIndexManagerDB4_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t", "Loki::SmartPtr< Ferris::EAIndex::EAIndexManagerDB4,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > *|Ferris::EAIndex::fh_db4idx *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__SmartPtrT_Ferris__EAIndex__EAQuery_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t = {"_p_Loki__SmartPtrT_Ferris__EAIndex__EAQuery_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t", "Loki::SmartPtr< Ferris::EAIndex::EAQuery,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > *|Ferris::EAIndex::fh_eaquery *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__SmartPtrT_Ferris__EAIndex__ForwardEAIndexInterface_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t = {"_p_Loki__SmartPtrT_Ferris__EAIndex__ForwardEAIndexInterface_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t", "Ferris::EAIndex::fh_fwdeaidx *|Loki::SmartPtr< Ferris::EAIndex::ForwardEAIndexInterface,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__SmartPtrT_Ferris__FerrisSlaveProcess_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t = {"_p_Loki__SmartPtrT_Ferris__FerrisSlaveProcess_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t", "Ferris::fh_FerrisSlaveProcess *|Loki::SmartPtr< Ferris::FerrisSlaveProcess,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__SmartPtrT_Ferris__Ferrisls_aggregate_data_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t = {"_p_Loki__SmartPtrT_Ferris__Ferrisls_aggregate_data_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t", "Ferris::fh_display_aggdata *|Loki::SmartPtr< Ferris::Ferrisls_aggregate_data,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t = {"_p_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t", "Ferris::fh_image *|Loki::SmartPtr< Ferris::Image,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t = {"_p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t", "Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > *|Ferris::fh_personality *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__SmartPtrT_Ferris__Regex_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t = {"_p_Loki__SmartPtrT_Ferris__Regex_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t", "Ferris::fh_regex *|Loki::SmartPtr< Ferris::Regex,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__SmartPtrT_Ferris__Semantic__SmushSet_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t = {"_p_Loki__SmartPtrT_Ferris__Semantic__SmushSet_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t", "Loki::SmartPtr< Ferris::Semantic::SmushSet,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > *|Ferris::Semantic::fh_SmushSet *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__SmartPtrT_Ferris__Semantic__TreeSmushing_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t = {"_p_Loki__SmartPtrT_Ferris__Semantic__TreeSmushing_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t", "Loki::SmartPtr< Ferris::Semantic::TreeSmushing,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > *|Ferris::Semantic::fh_TreeSmushing *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__SmartPtrT_Ferris__Time__Benchmark_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t = {"_p_Loki__SmartPtrT_Ferris__Time__Benchmark_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t", "Loki::SmartPtr< Ferris::Time::Benchmark,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > *|Ferris::Time::fh_benchmark *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__SmartPtrT_Ferris__Times_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t = {"_p_Loki__SmartPtrT_Ferris__Times_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t", "Ferris::fh_times *|Loki::SmartPtr< Ferris::Times,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__SmartPtrT_Ferris__XMLMsgStreamCollector_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t = {"_p_Loki__SmartPtrT_Ferris__XMLMsgStreamCollector_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t", "Ferris::fh_xstreamcol *|Loki::SmartPtr< Ferris::XMLMsgStreamCollector,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__SmartPtrT_Ferris__redlandea__SmushSet_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t = {"_p_Loki__SmartPtrT_Ferris__redlandea__SmushSet_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t", "Ferris::redlandea::fh_SmushSet *|Loki::SmartPtr< Ferris::redlandea::SmushSet,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__SmartPtrT_Ferris__redlandea__TreeSmushing_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t = {"_p_Loki__SmartPtrT_Ferris__redlandea__TreeSmushing_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t", "Loki::SmartPtr< Ferris::redlandea::TreeSmushing,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > *|Ferris::redlandea::fh_TreeSmushing *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__SmartPtrT_boost__regex_Loki__RefLinked_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_Loki__DefaultSPStorage_t = {"_p_Loki__SmartPtrT_boost__regex_Loki__RefLinked_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_Loki__DefaultSPStorage_t", "Ferris::fh_rex *|Loki::SmartPtr< ::boost::regex,Loki::RefLinked,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,Loki::DefaultSPStorage > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Loki__SmartPtrT_char_Loki__DestructiveCopy_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_Loki__DefaultSPStorage_t = {"_p_Loki__SmartPtrT_char_Loki__DestructiveCopy_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_Loki__DefaultSPStorage_t", "Loki::SmartPtr< char,Loki::DestructiveCopy,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,Loki::DefaultSPStorage > *|Ferris::fh_char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NamingEvent_Changed = {"_p_NamingEvent_Changed", "NamingEvent_Changed *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NamingEvent_Changed_Sig_t = {"_p_NamingEvent_Changed_Sig_t", "NamingEvent_Changed_Sig_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NamingEvent_Created = {"_p_NamingEvent_Created", "NamingEvent_Created *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NamingEvent_Created_Sig_t = {"_p_NamingEvent_Created_Sig_t", "NamingEvent_Created_Sig_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NamingEvent_Deleted = {"_p_NamingEvent_Deleted", "NamingEvent_Deleted *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NamingEvent_Deleted_Sig_t = {"_p_NamingEvent_Deleted_Sig_t", "NamingEvent_Deleted_Sig_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NamingEvent_Exists = {"_p_NamingEvent_Exists", "NamingEvent_Exists *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NamingEvent_Exists_Sig_t = {"_p_NamingEvent_Exists_Sig_t", "NamingEvent_Exists_Sig_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NamingEvent_MedallionUpdated_Sig_t = {"_p_NamingEvent_MedallionUpdated_Sig_t", "NamingEvent_MedallionUpdated_Sig_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NamingEvent_Moved = {"_p_NamingEvent_Moved", "NamingEvent_Moved *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NamingEvent_Moved_Sig_t = {"_p_NamingEvent_Moved_Sig_t", "NamingEvent_Moved_Sig_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NamingEvent_Start_Execute = {"_p_NamingEvent_Start_Execute", "NamingEvent_Start_Execute *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NamingEvent_Start_Execute_Sig_t = {"_p_NamingEvent_Start_Execute_Sig_t", "NamingEvent_Start_Execute_Sig_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NamingEvent_Start_Reading_Context = {"_p_NamingEvent_Start_Reading_Context", "NamingEvent_Start_Reading_Context *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NamingEvent_Start_Reading_Context_Sig_t = {"_p_NamingEvent_Start_Reading_Context_Sig_t", "NamingEvent_Start_Reading_Context_Sig_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NamingEvent_Stop_Execute = {"_p_NamingEvent_Stop_Execute", "NamingEvent_Stop_Execute *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NamingEvent_Stop_Execute_Sig_t = {"_p_NamingEvent_Stop_Execute_Sig_t", "NamingEvent_Stop_Execute_Sig_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NamingEvent_Stop_Reading_Context = {"_p_NamingEvent_Stop_Reading_Context", "NamingEvent_Stop_Reading_Context *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NamingEvent_Stop_Reading_Context_Sig_t = {"_p_NamingEvent_Stop_Reading_Context_Sig_t", "NamingEvent_Stop_Reading_Context_Sig_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OnlyInCacheSignal_t = {"_p_OnlyInCacheSignal_t", "OnlyInCacheSignal_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PostfixTrimmerOps = {"_p_PostfixTrimmerOps", "PostfixTrimmerOps *", 0, 0, (void*)"libferrisperl::PostfixTrimmerOps", 0};
static swig_type_info _swigt__p_PrefixTrimmerOps = {"_p_PrefixTrimmerOps", "PrefixTrimmerOps *", 0, 0, (void*)"libferrisperl::PrefixTrimmerOps", 0};
static swig_type_info _swigt__p_RWBase_t = {"_p_RWBase_t", "RWBase_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Runner_AsyncIOFunctor_t = {"_p_Runner_AsyncIOFunctor_t", "Runner_AsyncIOFunctor_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SubContextNames_t = {"_p_SubContextNames_t", "SubContextNames_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TrimmerBase = {"_p_TrimmerBase", "TrimmerBase *", 0, 0, (void*)"libferrisperl::TrimmerBase", 0};
static swig_type_info _swigt__p_TrimmerT_PostfixTrimmerOps_t = {"_p_TrimmerT_PostfixTrimmerOps_t", "PostfixTrimmer *|Trimmer< PostfixTrimmerOps > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TrimmerT_PrefixTrimmerOps_t = {"_p_TrimmerT_PrefixTrimmerOps_t", "PrefixTrimmer *|Trimmer< PrefixTrimmerOps > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Version_t = {"_p_Version_t", "Version_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XSDBasic_t = {"_p_XSDBasic_t", "XSDBasic_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__Base = {"_p__Base", "_Base *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__Self = {"_p__Self", "_Self *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p___gnu_cxx__stdio_filebufT_char_std__char_traitsT_char_t_t = {"_p___gnu_cxx__stdio_filebufT_char_std__char_traitsT_char_t_t", "__gnu_cxx::stdio_filebuf< char,std::char_traits< char > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_difference_type = {"_p_difference_type", "difference_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fh_insideResolve = {"_p_fh_insideResolve", "fh_insideResolve *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fh_ostream = {"_p_fh_ostream", "fh_ostream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_freelist_t = {"_p_freelist_t", "freelist_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gboolean = {"_p_gboolean", "gboolean *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gint = {"_p_gint", "gint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_guint32 = {"_p_guint32", "guint32 *|Ferris::Versioned::Version_t *|Ferris::emblemID_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_guint64 = {"_p_guint64", "guint64 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iterator_category = {"_p_iterator_category", "iterator_category *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_openmode = {"_p_openmode", "openmode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_char = {"_p_p_char", "char **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_std__istringstream = {"_p_p_std__istringstream", "std::istringstream **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_std__ostringstream = {"_p_p_std__ostringstream", "std::ostringstream **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_std__stringstream = {"_p_p_std__stringstream", "std::stringstream **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pid_t = {"_p_pid_t", "pid_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pointer = {"_p_pointer", "pointer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_poptContext = {"_p_poptContext", "poptContext *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_poptOption = {"_p_poptOption", "::poptOption *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ref_count_t = {"_p_ref_count_t", "ref_count_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_reference = {"_p_reference", "reference *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sigc__signal1T_void_FerrisLoki__Handlable_p_t = {"_p_sigc__signal1T_void_FerrisLoki__Handlable_p_t", "FerrisLoki::Handlable::GenericCloseSignal_t *|sigc::signal1< void,FerrisLoki::Handlable * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sigc__signal1T_void_Ferris__CacheHandlable_p_t = {"_p_sigc__signal1T_void_Ferris__CacheHandlable_p_t", "Ferris::CacheHandlable::OnlyInCacheSignal_t *|sigc::signal1< void,Ferris::CacheHandlable * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sigc__signal1T_void_Ferris__fh_context_t = {"_p_sigc__signal1T_void_Ferris__fh_context_t", "sigc::signal1< void,Ferris::fh_context > *|Ferris::MutableCollectionEvents::NamingEvent_MedallionUpdated_Sig_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sigc__signal1T_void_NamingEvent_Start_Reading_Context_p_t = {"_p_sigc__signal1T_void_NamingEvent_Start_Reading_Context_p_t", "sigc::signal1< void,NamingEvent_Start_Reading_Context * > *|Ferris::MutableCollectionEvents::NamingEvent_Start_Reading_Context_Sig_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sigc__signal1T_void_NamingEvent_Stop_Reading_Context_p_t = {"_p_sigc__signal1T_void_NamingEvent_Stop_Reading_Context_p_t", "sigc::signal1< void,NamingEvent_Stop_Reading_Context * > *|Ferris::MutableCollectionEvents::NamingEvent_Stop_Reading_Context_Sig_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sigc__signal2T_void_Ferris__closeSignalStream_t_R_std__streamsize_t = {"_p_sigc__signal2T_void_Ferris__closeSignalStream_t_R_std__streamsize_t", "Ferris::closeSignal_t *|sigc::signal2< void,Ferris::closeSignalStream_t &,std::streamsize > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sigc__signal2T_void_Ferris__fh_context_Ferris__stringset_t_const_R_t = {"_p_sigc__signal2T_void_Ferris__fh_context_Ferris__stringset_t_const_R_t", "Ferris::MutableCollectionEvents::ContextEvent_Headers_Received_Sig_t *|sigc::signal2< void,Ferris::fh_context,Ferris::stringset_t const & > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sigc__signal2T_void_Ferris__fh_emblem_Ferris__fh_emblem_t = {"_p_sigc__signal2T_void_Ferris__fh_emblem_Ferris__fh_emblem_t", "Ferris::Emblem::AddedParent_Sig_t *|Ferris::Emblem::AddedChild_Sig_t *|Ferris::Emblem::RemovedParent_Sig_t *|Ferris::Emblem::RemovedChild_Sig_t *|sigc::signal2< void,Ferris::fh_emblem,Ferris::fh_emblem > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sigc__signal2T_void_Ferris__fh_etagere_Ferris__fh_emblem_t = {"_p_sigc__signal2T_void_Ferris__fh_etagere_Ferris__fh_emblem_t", "sigc::signal2< void,Ferris::fh_etagere,Ferris::fh_emblem > *|Ferris::Etagere::EmblemCreated_Sig_t *|Ferris::Etagere::AddedChild_Sig_t *|Ferris::Etagere::RemovedChild_Sig_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sigc__signal3T_void_Ferris__fh_emblem_std__string_std__string_t = {"_p_sigc__signal3T_void_Ferris__fh_emblem_std__string_std__string_t", "sigc::signal3< void,Ferris::fh_emblem,std::string,std::string > *|Ferris::Emblem::IconName_Changed_Sig_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sigc__signal3T_void_NamingEvent_Changed_p_std__string_std__string_t = {"_p_sigc__signal3T_void_NamingEvent_Changed_p_std__string_std__string_t", "sigc::signal3< void,NamingEvent_Changed *,std::string,std::string > *|Ferris::MutableCollectionEvents::NamingEvent_Changed_Sig_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sigc__signal3T_void_NamingEvent_Deleted_p_std__string_std__string_t = {"_p_sigc__signal3T_void_NamingEvent_Deleted_p_std__string_std__string_t", "sigc::signal3< void,NamingEvent_Deleted *,std::string,std::string > *|Ferris::MutableCollectionEvents::NamingEvent_Deleted_Sig_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sigc__signal3T_void_NamingEvent_Moved_p_std__string_std__string_t = {"_p_sigc__signal3T_void_NamingEvent_Moved_p_std__string_std__string_t", "sigc::signal3< void,NamingEvent_Moved *,std::string,std::string > *|Ferris::MutableCollectionEvents::NamingEvent_Moved_Sig_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sigc__signal3T_void_NamingEvent_Start_Execute_p_std__string_std__string_t = {"_p_sigc__signal3T_void_NamingEvent_Start_Execute_p_std__string_std__string_t", "Ferris::MutableCollectionEvents::NamingEvent_Start_Execute_Sig_t *|sigc::signal3< void,NamingEvent_Start_Execute *,std::string,std::string > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sigc__signal3T_void_NamingEvent_Stop_Execute_p_std__string_std__string_t = {"_p_sigc__signal3T_void_NamingEvent_Stop_Execute_p_std__string_std__string_t", "Ferris::MutableCollectionEvents::NamingEvent_Stop_Execute_Sig_t *|sigc::signal3< void,NamingEvent_Stop_Execute *,std::string,std::string > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sigc__signal4T_void_Ferris__fh_context_Ferris__fh_context_int_int_t = {"_p_sigc__signal4T_void_Ferris__fh_context_Ferris__fh_context_int_int_t", "sigc::signal4< void,Ferris::fh_context,Ferris::fh_context,int,int > *|Ferris::Factory::ConvertToCompressedChunkContextProgress_Sig_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sigc__signal4T_void_NamingEvent_Created_p_Ferris__fh_context_const_R_std__string_std__string_t = {"_p_sigc__signal4T_void_NamingEvent_Created_p_Ferris__fh_context_const_R_std__string_std__string_t", "Ferris::MutableCollectionEvents::NamingEvent_Created_Sig_t *|sigc::signal4< void,NamingEvent_Created *,Ferris::fh_context const &,std::string,std::string > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sigc__signal4T_void_NamingEvent_Exists_p_Ferris__fh_context_const_R_std__string_std__string_t = {"_p_sigc__signal4T_void_NamingEvent_Exists_p_Ferris__fh_context_const_R_std__string_std__string_t", "sigc::signal4< void,NamingEvent_Exists *,Ferris::fh_context const &,std::string,std::string > *|Ferris::MutableCollectionEvents::NamingEvent_Exists_Sig_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_sigc__trackable = {"_p_sigc__trackable", "sigc::trackable *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__basic_ostreamT_wchar_t_std__char_traitsT_wchar_t_t_t = {"_p_std__basic_ostreamT_wchar_t_std__char_traitsT_wchar_t_t_t", "std::basic_ostream< wchar_t,std::char_traits< wchar_t > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__basic_streambufT_char_std__char_traitsT_char_t_t = {"_p_std__basic_streambufT_char_std__char_traitsT_char_t_t", "std::basic_streambuf< char,std::char_traits< char > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__exception = {"_p_std__exception", "std::exception *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__ios__openmode = {"_p_std__ios__openmode", "std::ios::openmode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__iostream = {"_p_std__iostream", "std::iostream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__istream = {"_p_std__istream", "std::istream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__istringstream = {"_p_std__istringstream", "std::istringstream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT_Ferris__fh_context_t = {"_p_std__listT_Ferris__fh_context_t", "std::list< Ferris::fh_context > *|Ferris::ctxlist_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT_Ferris__fh_emblem_t = {"_p_std__listT_Ferris__fh_emblem_t", "std::list< Ferris::fh_emblem > *|Ferris::emblems_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT_Ferris__fh_sorter_t = {"_p_std__listT_Ferris__fh_sorter_t", "Ferris::fh_sorters *|std::list< Ferris::fh_sorter > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT_Loki__FunctorT_bool_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t_t = {"_p_std__listT_Loki__FunctorT_bool_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t_t", "std::list< Loki::Functor< bool,LOKI_TYPELIST_1 (Ferris::fh_context const &) > > *|Ferris::fh_matchers *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_t = {"_p_std__listT_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_t", "std::list< Loki::SmartPtr< Ferris::Personality,FerrisLoki::FerrisExRefCounted,Loki::DisallowConversion,FerrisLoki::FerrisExSmartPointerChecker,FerrisLoki::FerrisExSmartPtrStorage > > *|std::list< Ferris::fh_personality > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT_std__pairT_std__string_std__string_t_t = {"_p_std__listT_std__pairT_std__string_std__string_t_t", "std::list< std::pair< std::string,std::string > > *|Ferris::Factory::EndingList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT_std__string_t = {"_p_std__listT_std__string_t", "Ferris::Context::SplitPath_t *|Ferris::ContextCollection::SubContextNames_t *|Ferris::AttributeCollection::AttributeNames_t *|std::list< std::string > *|Ferris::stringlist_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_Ferris__XSDBasic_t_Ferris__fh_context_t = {"_p_std__mapT_Ferris__XSDBasic_t_Ferris__fh_context_t", "Ferris::Factory::xsdtypemap_t *|std::map< enum Ferris::XSDBasic_t,Ferris::fh_context > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_int_int_t = {"_p_std__mapT_int_int_t", "Ferris::intmap_t *|std::map< int,int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_std__string_std__string_t = {"_p_std__mapT_std__string_std__string_t", "Ferris::stringmap_t *|Ferris::StringMap_t *|std::map< std::string,std::string > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__ostringstream = {"_p_std__ostringstream", "std::ostringstream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__out_of_range = {"_p_std__out_of_range", "std::out_of_range *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__pairT_std__string_std__string_t = {"_p_std__pairT_std__string_std__string_t", "Ferris::userpass_t *|std::pair< std::string,std::string > *|Ferris::stringpair_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__reverse_iteratorT_Ferris__ContextIterator_t = {"_p_std__reverse_iteratorT_Ferris__ContextIterator_t", "std::reverse_iterator< Ferris::ContextIterator > *|Ferris::Context::reverse_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t = {"_p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t", "std::set< Ferris::fh_emblem,Ferris::fh_emblem_less > *|Ferris::emblemset_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__setT_guint32_t = {"_p_std__setT_guint32_t", "std::set< guint32 > *|std::set< Ferris::emblemID_t > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__setT_std__string_t = {"_p_std__setT_std__string_t", "std::set< std::string > *|Ferris::stringset_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__streampos = {"_p_std__streampos", "std::streampos *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__streamsize = {"_p_std__streamsize", "std::streamsize *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__string = {"_p_std__string", "std::string *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__stringstream = {"_p_std__stringstream", "std::stringstream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_int_t = {"_p_std__vectorT_int_t", "std::vector< int > *", 0, 0, (void*)"libferrisperl::IntVector", 0};
static swig_type_info _swigt__p_std__vectorT_std__string_t = {"_p_std__vectorT_std__string_t", "Ferris::stringvec_t *|std::vector< std::string > *|Ferris::Runner::ArgArray_t *", 0, 0, (void*)"libferrisperl::StringVector", 0};
static swig_type_info _swigt__p_std__wstring = {"_p_std__wstring", "std::wstring *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_time_t = {"_p_time_t", "time_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_tm = {"_p_tm", "tm *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint32_t = {"_p_uint32_t", "uint32_t *|FerrisLoki::Handlable::ref_count_t *|::Ferris::Handlable::ref_count_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_value_type = {"_p_value_type", "value_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "void *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_CompositeTrimmerT_TrimmerT_PrefixTrimmerOps_t_TrimmerT_PostfixTrimmerOps_t_t,
  &_swigt__p_ContextEvent_Headers_Received_Sig_t,
  &_swigt__p_Fampp__FamppDirMonitorInitFailedException,
  &_swigt__p_FerrisLoki__FerrisSmallObjAllocator,
  &_swigt__p_FerrisLoki__Handlable,
  &_swigt__p_Ferris__AI__Agent,
  &_swigt__p_Ferris__AccessDenied,
  &_swigt__p_Ferris__AgentAlreadyExistsException,
  &_swigt__p_Ferris__AgentException,
  &_swigt__p_Ferris__AgentOnlyHandlesOneEmblemException,
  &_swigt__p_Ferris__Attribute,
  &_swigt__p_Ferris__AttributeAlreadyInUse,
  &_swigt__p_Ferris__AttributeCollection,
  &_swigt__p_Ferris__AttributeNotWritable,
  &_swigt__p_Ferris__AttributeProxy,
  &_swigt__p_Ferris__BackupException,
  &_swigt__p_Ferris__BackupNameWouldBeTooLong,
  &_swigt__p_Ferris__BadParam,
  &_swigt__p_Ferris__BadSignature,
  &_swigt__p_Ferris__BadlyFormedTime,
  &_swigt__p_Ferris__BadlyFormedTimeString,
  &_swigt__p_Ferris__BranchFileSystem,
  &_swigt__p_Ferris__CacheHandlable,
  &_swigt__p_Ferris__CacheManager,
  &_swigt__p_Ferris__CanNotAddEmblemException,
  &_swigt__p_Ferris__CanNotAddExternalAttribute,
  &_swigt__p_Ferris__CanNotDelete,
  &_swigt__p_Ferris__CanNotDereferenceDanglingSoftLink,
  &_swigt__p_Ferris__CanNotGetStream,
  &_swigt__p_Ferris__CanNotMonitorDirWithFAM,
  &_swigt__p_Ferris__CanNotReadContext,
  &_swigt__p_Ferris__CanNotReadContextPcctsParseFailed,
  &_swigt__p_Ferris__ChildNotRunning,
  &_swigt__p_Ferris__ColdEmblem,
  &_swigt__p_Ferris__CompressionAlgoNotFoundException,
  &_swigt__p_Ferris__CompressionException,
  &_swigt__p_Ferris__ContentNotModified,
  &_swigt__p_Ferris__Context,
  &_swigt__p_Ferris__ContextCollection,
  &_swigt__p_Ferris__ContextExists,
  &_swigt__p_Ferris__ContextIterator,
  &_swigt__p_Ferris__ContextSetCompare,
  &_swigt__p_Ferris__CopyFailed,
  &_swigt__p_Ferris__CreateFIFO,
  &_swigt__p_Ferris__CreateMetaDataContext,
  &_swigt__p_Ferris__CryptoBase,
  &_swigt__p_Ferris__CurlEasyInitFailed,
  &_swigt__p_Ferris__CurlPerformFailed,
  &_swigt__p_Ferris__CurlStateError,
  &_swigt__p_Ferris__CurlStaticInitFailed,
  &_swigt__p_Ferris__CursorException,
  &_swigt__p_Ferris__DBusConnectionException,
  &_swigt__p_Ferris__DBusException,
  &_swigt__p_Ferris__DTDCreationFailed,
  &_swigt__p_Ferris__DVDReadException,
  &_swigt__p_Ferris__Db4Exception,
  &_swigt__p_Ferris__Db4KeyNotFound,
  &_swigt__p_Ferris__DesktopFileKeyNotFound,
  &_swigt__p_Ferris__EAIndexException,
  &_swigt__p_Ferris__EA_Atom,
  &_swigt__p_Ferris__EA_Atom_RDFCacheAttribute,
  &_swigt__p_Ferris__EA_Atom_ReadOnly,
  &_swigt__p_Ferris__EA_Atom_ReadOnly_PassedInStream,
  &_swigt__p_Ferris__EA_Atom_ReadWrite,
  &_swigt__p_Ferris__EA_Atom_ReadWrite_BaseT_Ferris__EA_Atom_ReadOnly_PassedInStream_t__GetIStream_PassedInStream_Func_t,
  &_swigt__p_Ferris__EA_Atom_ReadWrite_Contents,
  &_swigt__p_Ferris__EA_Atom_ReadWrite_OpenModeCached,
  &_swigt__p_Ferris__EA_Atom_ReadWrite_PassedInStream,
  &_swigt__p_Ferris__EA_Atom_ReadWrite__RWBase_t__GetIStream_Func_t,
  &_swigt__p_Ferris__EA_Atom_ReadWrite__RWBase_t__IOStreamClosed_Func_t,
  &_swigt__p_Ferris__EA_Atom_Static,
  &_swigt__p_Ferris__Emblem,
  &_swigt__p_Ferris__EmblemException,
  &_swigt__p_Ferris__EmblemNotFoundException,
  &_swigt__p_Ferris__Etagere,
  &_swigt__p_Ferris__EtagereException,
  &_swigt__p_Ferris__FCA__ConceptLattice,
  &_swigt__p_Ferris__FCA__fh_conceptLattice,
  &_swigt__p_Ferris__FFilterSyntaxError,
  &_swigt__p_Ferris__FerrisCanNotCreateLeafOfLeaf,
  &_swigt__p_Ferris__FerrisCanNotGetScriptNameError,
  &_swigt__p_Ferris__FerrisCreateAttributeFailed,
  &_swigt__p_Ferris__FerrisCreateAttributeNotSupported,
  &_swigt__p_Ferris__FerrisCreateSubContextFailed,
  &_swigt__p_Ferris__FerrisCreateSubContextNotSupported,
  &_swigt__p_Ferris__FerrisCurlServerNameNotFound,
  &_swigt__p_Ferris__FerrisExceptionBase,
  &_swigt__p_Ferris__FerrisException_CodeState,
  &_swigt__p_Ferris__FerrisGIMPImageLoadFailed,
  &_swigt__p_Ferris__FerrisGLibCException,
  &_swigt__p_Ferris__FerrisHALException,
  &_swigt__p_Ferris__FerrisImageLoadFailed,
  &_swigt__p_Ferris__FerrisImageSaveFailed,
  &_swigt__p_Ferris__FerrisImlib2ImageLoadFailed,
  &_swigt__p_Ferris__FerrisInternalError,
  &_swigt__p_Ferris__FerrisJPEGImageLoadFailed,
  &_swigt__p_Ferris__FerrisNotReadableAsContext,
  &_swigt__p_Ferris__FerrisNotSupportedInThisContext,
  &_swigt__p_Ferris__FerrisOutOfMemory,
  &_swigt__p_Ferris__FerrisPNGImageLoadFailed,
  &_swigt__p_Ferris__FerrisParentNotSetError,
  &_swigt__p_Ferris__FerrisSetCWDException,
  &_swigt__p_Ferris__FerrisSqlServerNameNotFound,
  &_swigt__p_Ferris__FerrisStatException,
  &_swigt__p_Ferris__FerrisStreamException,
  &_swigt__p_Ferris__FerrisStreamLoadFailed,
  &_swigt__p_Ferris__FerrisVFSExceptionBase,
  &_swigt__p_Ferris__FerrisWaitTimedOut,
  &_swigt__p_Ferris__Ferris_Logging_ostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_Ferris__Ferris_fstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t,
  &_swigt__p_Ferris__Ferris_ififostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_Ferris__Ferris_ifstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t,
  &_swigt__p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_Ferris__Ferris_istringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t,
  &_swigt__p_Ferris__Ferris_ofstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t,
  &_swigt__p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_Ferris__Ferris_ostringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t,
  &_swigt__p_Ferris__Ferris_stringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t,
  &_swigt__p_Ferris__FileClipboard,
  &_swigt__p_Ferris__FullTextIndexException,
  &_swigt__p_Ferris__FulltextQuerySyntaxError,
  &_swigt__p_Ferris__GModuleOpenFailed,
  &_swigt__p_Ferris__GPGMEInitFailed,
  &_swigt__p_Ferris__GPhoto2,
  &_swigt__p_Ferris__GdbmException,
  &_swigt__p_Ferris__GenericError,
  &_swigt__p_Ferris__Handlable,
  &_swigt__p_Ferris__ImplicitIteratorUpdateLock,
  &_swigt__p_Ferris__IndexException,
  &_swigt__p_Ferris__InvalidModeString,
  &_swigt__p_Ferris__InvalidSortSpecification,
  &_swigt__p_Ferris__KeylistException,
  &_swigt__p_Ferris__LDAPException,
  &_swigt__p_Ferris__MalformedURL,
  &_swigt__p_Ferris__Medallion,
  &_swigt__p_Ferris__MedallionBelief,
  &_swigt__p_Ferris__MedallionException,
  &_swigt__p_Ferris__MutableCollectionEvents,
  &_swigt__p_Ferris__NoOpenWithContext,
  &_swigt__p_Ferris__NoSuchAgentException,
  &_swigt__p_Ferris__NoSuchAttribute,
  &_swigt__p_Ferris__NoSuchBeliefException,
  &_swigt__p_Ferris__NoSuchContextClass,
  &_swigt__p_Ferris__NoSuchGroup,
  &_swigt__p_Ferris__NoSuchObject,
  &_swigt__p_Ferris__NoSuchPersonalityException,
  &_swigt__p_Ferris__NoSuchSubContext,
  &_swigt__p_Ferris__NoSuchUser,
  &_swigt__p_Ferris__NotSupported,
  &_swigt__p_Ferris__ObjectExists,
  &_swigt__p_Ferris__OpenActionIsNotDefined,
  &_swigt__p_Ferris__ParseError,
  &_swigt__p_Ferris__Personality,
  &_swigt__p_Ferris__PreprocessedSortString,
  &_swigt__p_Ferris__ProgramSpawn,
  &_swigt__p_Ferris__QuotaStorageFull,
  &_swigt__p_Ferris__RegexCollection,
  &_swigt__p_Ferris__RelativeTimeParsing,
  &_swigt__p_Ferris__RemoveFailed,
  &_swigt__p_Ferris__RenameFailed,
  &_swigt__p_Ferris__RootContextCreationFailed,
  &_swigt__p_Ferris__RootContextFactory,
  &_swigt__p_Ferris__Runner,
  &_swigt__p_Ferris__SQLiteException,
  &_swigt__p_Ferris__SchemaException,
  &_swigt__p_Ferris__SchemaNotFoundException,
  &_swigt__p_Ferris__SocketOptionsException,
  &_swigt__p_Ferris__StorageFull,
  &_swigt__p_Ferris__SubContextAlreadyInUse,
  &_swigt__p_Ferris__SyntaxError,
  &_swigt__p_Ferris__Time__Benchmark,
  &_swigt__p_Ferris__Times,
  &_swigt__p_Ferris__URLDecodeSyntaxError,
  &_swigt__p_Ferris__UnknownBackupMode,
  &_swigt__p_Ferris__UnknownConfigLocation,
  &_swigt__p_Ferris__UnspoortedBlockSize,
  &_swigt__p_Ferris__Util__SingleShot,
  &_swigt__p_Ferris__Versioned,
  &_swigt__p_Ferris__WebPhotoException,
  &_swigt__p_Ferris__XMLBase,
  &_swigt__p_Ferris__XMLFatalError,
  &_swigt__p_Ferris__XMLParseError,
  &_swigt__p_Ferris__XMPBase,
  &_swigt__p_Ferris__XMPPacketScanFailed,
  &_swigt__p_Ferris__dbXMLException,
  &_swigt__p_Ferris__eetException,
  &_swigt__p_Ferris__eetKeyNotFound,
  &_swigt__p_Ferris__ferris_basic_streambuf_fourk,
  &_swigt__p_Ferris__ferris_basic_streambuf_onemeg,
  &_swigt__p_Ferris__ferris_basic_streambuf_quartk,
  &_swigt__p_Ferris__ferris_basic_streambuf_sixteenbytes,
  &_swigt__p_Ferris__ferris_basic_streambuf_sixteenk,
  &_swigt__p_Ferris__ferris_basic_streambuf_virtual,
  &_swigt__p_Ferris__ferris_ios,
  &_swigt__p_Ferris__ferris_streambufT_char_std__char_traitsT_char_t_t,
  &_swigt__p_Ferris__fh_attrcol,
  &_swigt__p_Ferris__fh_attribute,
  &_swigt__p_Ferris__fh_cemblem,
  &_swigt__p_Ferris__fh_context,
  &_swigt__p_Ferris__fh_emblem,
  &_swigt__p_Ferris__fh_emblem_less,
  &_swigt__p_Ferris__fh_etagere,
  &_swigt__p_Ferris__fh_medallion,
  &_swigt__p_Ferris__fh_medallionBelief,
  &_swigt__p_Ferris__fh_runner,
  &_swigt__p_Ferris__fh_sorter,
  &_swigt__p_Ferris__getIOStreamCloseUpdateFailed,
  &_swigt__p_Ferris__getIOStreamCloseUpdatePermissionDenied,
  &_swigt__p_Ferris__giStreamPosRAII,
  &_swigt__p_Ferris__tdbException,
  &_swigt__p_GSpawnFlags,
  &_swigt__p_GenericCloseSignal_t,
  &_swigt__p_GetIOStream_Func_t,
  &_swigt__p_GetIStream_Func_t,
  &_swigt__p_GetIStream_PassedInStream_Func_t,
  &_swigt__p_IOStreamClosed_Func_t,
  &_swigt__p_Loki__AllowConversion,
  &_swigt__p_Loki__AssocVectorT_void_p_sigc__connection_t,
  &_swigt__p_Loki__AssocVectorT_void_p_void_p_t,
  &_swigt__p_Loki__DisallowConversion,
  &_swigt__p_Loki__FunctorT_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t,
  &_swigt__p_Loki__FunctorT_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t,
  &_swigt__p_Loki__FunctorT_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t,
  &_swigt__p_Loki__FunctorT_bool_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t,
  &_swigt__p_Loki__FunctorT_void_LOKI_TYPELIST_1_fFerris__fh_emblem_const_RF_t,
  &_swigt__p_Loki__FunctorT_void_LOKI_TYPELIST_1_fFerris__fh_runnerF_t,
  &_swigt__p_Loki__FunctorT_void_LOKI_TYPELIST_4_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_tF_t,
  &_swigt__p_Loki__NullPointerException,
  &_swigt__p_Loki__Private__RefLinkedBase,
  &_swigt__p_Loki__SmartPtrT_Ferris__AI__Agent_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  &_swigt__p_Loki__SmartPtrT_Ferris__AsyncIOHandler_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  &_swigt__p_Loki__SmartPtrT_Ferris__CreateMetaDataContext___Ferris__FerrisExRefCountedContext_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  &_swigt__p_Loki__SmartPtrT_Ferris__EAIndex__EAIndexManagerDB4Tree_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  &_swigt__p_Loki__SmartPtrT_Ferris__EAIndex__EAIndexManagerDB4_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  &_swigt__p_Loki__SmartPtrT_Ferris__EAIndex__EAQuery_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  &_swigt__p_Loki__SmartPtrT_Ferris__EAIndex__ForwardEAIndexInterface_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  &_swigt__p_Loki__SmartPtrT_Ferris__FerrisSlaveProcess_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  &_swigt__p_Loki__SmartPtrT_Ferris__Ferrisls_aggregate_data_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  &_swigt__p_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  &_swigt__p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  &_swigt__p_Loki__SmartPtrT_Ferris__Regex_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  &_swigt__p_Loki__SmartPtrT_Ferris__Semantic__SmushSet_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  &_swigt__p_Loki__SmartPtrT_Ferris__Semantic__TreeSmushing_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  &_swigt__p_Loki__SmartPtrT_Ferris__Time__Benchmark_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  &_swigt__p_Loki__SmartPtrT_Ferris__Times_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  &_swigt__p_Loki__SmartPtrT_Ferris__XMLMsgStreamCollector_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  &_swigt__p_Loki__SmartPtrT_Ferris__redlandea__SmushSet_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  &_swigt__p_Loki__SmartPtrT_Ferris__redlandea__TreeSmushing_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  &_swigt__p_Loki__SmartPtrT_boost__regex_Loki__RefLinked_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_Loki__DefaultSPStorage_t,
  &_swigt__p_Loki__SmartPtrT_char_Loki__DestructiveCopy_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_Loki__DefaultSPStorage_t,
  &_swigt__p_NamingEvent_Changed,
  &_swigt__p_NamingEvent_Changed_Sig_t,
  &_swigt__p_NamingEvent_Created,
  &_swigt__p_NamingEvent_Created_Sig_t,
  &_swigt__p_NamingEvent_Deleted,
  &_swigt__p_NamingEvent_Deleted_Sig_t,
  &_swigt__p_NamingEvent_Exists,
  &_swigt__p_NamingEvent_Exists_Sig_t,
  &_swigt__p_NamingEvent_MedallionUpdated_Sig_t,
  &_swigt__p_NamingEvent_Moved,
  &_swigt__p_NamingEvent_Moved_Sig_t,
  &_swigt__p_NamingEvent_Start_Execute,
  &_swigt__p_NamingEvent_Start_Execute_Sig_t,
  &_swigt__p_NamingEvent_Start_Reading_Context,
  &_swigt__p_NamingEvent_Start_Reading_Context_Sig_t,
  &_swigt__p_NamingEvent_Stop_Execute,
  &_swigt__p_NamingEvent_Stop_Execute_Sig_t,
  &_swigt__p_NamingEvent_Stop_Reading_Context,
  &_swigt__p_NamingEvent_Stop_Reading_Context_Sig_t,
  &_swigt__p_OnlyInCacheSignal_t,
  &_swigt__p_PostfixTrimmerOps,
  &_swigt__p_PrefixTrimmerOps,
  &_swigt__p_RWBase_t,
  &_swigt__p_Runner_AsyncIOFunctor_t,
  &_swigt__p_SubContextNames_t,
  &_swigt__p_TrimmerBase,
  &_swigt__p_TrimmerT_PostfixTrimmerOps_t,
  &_swigt__p_TrimmerT_PrefixTrimmerOps_t,
  &_swigt__p_Version_t,
  &_swigt__p_XSDBasic_t,
  &_swigt__p__Base,
  &_swigt__p__Self,
  &_swigt__p___gnu_cxx__stdio_filebufT_char_std__char_traitsT_char_t_t,
  &_swigt__p_char,
  &_swigt__p_difference_type,
  &_swigt__p_fh_insideResolve,
  &_swigt__p_fh_ostream,
  &_swigt__p_freelist_t,
  &_swigt__p_gboolean,
  &_swigt__p_gint,
  &_swigt__p_guint32,
  &_swigt__p_guint64,
  &_swigt__p_iterator_category,
  &_swigt__p_openmode,
  &_swigt__p_p_char,
  &_swigt__p_p_std__istringstream,
  &_swigt__p_p_std__ostringstream,
  &_swigt__p_p_std__stringstream,
  &_swigt__p_pid_t,
  &_swigt__p_pointer,
  &_swigt__p_poptContext,
  &_swigt__p_poptOption,
  &_swigt__p_ref_count_t,
  &_swigt__p_reference,
  &_swigt__p_sigc__signal1T_void_FerrisLoki__Handlable_p_t,
  &_swigt__p_sigc__signal1T_void_Ferris__CacheHandlable_p_t,
  &_swigt__p_sigc__signal1T_void_Ferris__fh_context_t,
  &_swigt__p_sigc__signal1T_void_NamingEvent_Start_Reading_Context_p_t,
  &_swigt__p_sigc__signal1T_void_NamingEvent_Stop_Reading_Context_p_t,
  &_swigt__p_sigc__signal2T_void_Ferris__closeSignalStream_t_R_std__streamsize_t,
  &_swigt__p_sigc__signal2T_void_Ferris__fh_context_Ferris__stringset_t_const_R_t,
  &_swigt__p_sigc__signal2T_void_Ferris__fh_emblem_Ferris__fh_emblem_t,
  &_swigt__p_sigc__signal2T_void_Ferris__fh_etagere_Ferris__fh_emblem_t,
  &_swigt__p_sigc__signal3T_void_Ferris__fh_emblem_std__string_std__string_t,
  &_swigt__p_sigc__signal3T_void_NamingEvent_Changed_p_std__string_std__string_t,
  &_swigt__p_sigc__signal3T_void_NamingEvent_Deleted_p_std__string_std__string_t,
  &_swigt__p_sigc__signal3T_void_NamingEvent_Moved_p_std__string_std__string_t,
  &_swigt__p_sigc__signal3T_void_NamingEvent_Start_Execute_p_std__string_std__string_t,
  &_swigt__p_sigc__signal3T_void_NamingEvent_Stop_Execute_p_std__string_std__string_t,
  &_swigt__p_sigc__signal4T_void_Ferris__fh_context_Ferris__fh_context_int_int_t,
  &_swigt__p_sigc__signal4T_void_NamingEvent_Created_p_Ferris__fh_context_const_R_std__string_std__string_t,
  &_swigt__p_sigc__signal4T_void_NamingEvent_Exists_p_Ferris__fh_context_const_R_std__string_std__string_t,
  &_swigt__p_sigc__trackable,
  &_swigt__p_std__basic_ostreamT_wchar_t_std__char_traitsT_wchar_t_t_t,
  &_swigt__p_std__basic_streambufT_char_std__char_traitsT_char_t_t,
  &_swigt__p_std__exception,
  &_swigt__p_std__ios__openmode,
  &_swigt__p_std__iostream,
  &_swigt__p_std__istream,
  &_swigt__p_std__istringstream,
  &_swigt__p_std__listT_Ferris__fh_context_t,
  &_swigt__p_std__listT_Ferris__fh_emblem_t,
  &_swigt__p_std__listT_Ferris__fh_sorter_t,
  &_swigt__p_std__listT_Loki__FunctorT_bool_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t_t,
  &_swigt__p_std__listT_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_t,
  &_swigt__p_std__listT_std__pairT_std__string_std__string_t_t,
  &_swigt__p_std__listT_std__string_t,
  &_swigt__p_std__mapT_Ferris__XSDBasic_t_Ferris__fh_context_t,
  &_swigt__p_std__mapT_int_int_t,
  &_swigt__p_std__mapT_std__string_std__string_t,
  &_swigt__p_std__ostringstream,
  &_swigt__p_std__out_of_range,
  &_swigt__p_std__pairT_std__string_std__string_t,
  &_swigt__p_std__reverse_iteratorT_Ferris__ContextIterator_t,
  &_swigt__p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t,
  &_swigt__p_std__setT_guint32_t,
  &_swigt__p_std__setT_std__string_t,
  &_swigt__p_std__streampos,
  &_swigt__p_std__streamsize,
  &_swigt__p_std__string,
  &_swigt__p_std__stringstream,
  &_swigt__p_std__vectorT_int_t,
  &_swigt__p_std__vectorT_std__string_t,
  &_swigt__p_std__wstring,
  &_swigt__p_time_t,
  &_swigt__p_tm,
  &_swigt__p_uint32_t,
  &_swigt__p_value_type,
  &_swigt__p_void,
};

static swig_cast_info _swigc__p_CompositeTrimmerT_TrimmerT_PrefixTrimmerOps_t_TrimmerT_PostfixTrimmerOps_t_t[] = {  {&_swigt__p_CompositeTrimmerT_TrimmerT_PrefixTrimmerOps_t_TrimmerT_PostfixTrimmerOps_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContextEvent_Headers_Received_Sig_t[] = {  {&_swigt__p_ContextEvent_Headers_Received_Sig_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Fampp__FamppDirMonitorInitFailedException[] = {  {&_swigt__p_Fampp__FamppDirMonitorInitFailedException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FerrisLoki__FerrisSmallObjAllocator[] = {  {&_swigt__p_FerrisLoki__FerrisSmallObjAllocator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FerrisLoki__Handlable[] = {  {&_swigt__p_Ferris__ColdEmblem, _p_Ferris__ColdEmblemTo_p_FerrisLoki__Handlable, 0, 0},  {&_swigt__p_Ferris__AttributeCollection, _p_Ferris__AttributeCollectionTo_p_FerrisLoki__Handlable, 0, 0},  {&_swigt__p_Ferris__Times, _p_Ferris__TimesTo_p_FerrisLoki__Handlable, 0, 0},  {&_swigt__p_Ferris__AttributeProxy, _p_Ferris__AttributeProxyTo_p_FerrisLoki__Handlable, 0, 0},  {&_swigt__p_Ferris__AI__Agent, _p_Ferris__AI__AgentTo_p_FerrisLoki__Handlable, 0, 0},  {&_swigt__p_Ferris__Personality, _p_Ferris__PersonalityTo_p_FerrisLoki__Handlable, 0, 0},  {&_swigt__p_Ferris__MedallionBelief, _p_Ferris__MedallionBeliefTo_p_FerrisLoki__Handlable, 0, 0},  {&_swigt__p_Ferris__Time__Benchmark, _p_Ferris__Time__BenchmarkTo_p_FerrisLoki__Handlable, 0, 0},  {&_swigt__p_Ferris__Versioned, _p_Ferris__VersionedTo_p_FerrisLoki__Handlable, 0, 0},  {&_swigt__p_Ferris__Etagere, _p_Ferris__EtagereTo_p_FerrisLoki__Handlable, 0, 0},  {&_swigt__p_Ferris__Handlable, _p_Ferris__HandlableTo_p_FerrisLoki__Handlable, 0, 0},  {&_swigt__p_Ferris__CacheHandlable, _p_Ferris__CacheHandlableTo_p_FerrisLoki__Handlable, 0, 0},  {&_swigt__p_FerrisLoki__Handlable, 0, 0, 0},  {&_swigt__p_Ferris__Emblem, _p_Ferris__EmblemTo_p_FerrisLoki__Handlable, 0, 0},  {&_swigt__p_Ferris__Medallion, _p_Ferris__MedallionTo_p_FerrisLoki__Handlable, 0, 0},  {&_swigt__p_Ferris__Runner, _p_Ferris__RunnerTo_p_FerrisLoki__Handlable, 0, 0},  {&_swigt__p_Ferris__ContextIterator, _p_Ferris__ContextIteratorTo_p_FerrisLoki__Handlable, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__AI__Agent[] = {  {&_swigt__p_Ferris__AI__Agent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__AccessDenied[] = {  {&_swigt__p_Ferris__AccessDenied, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__AgentAlreadyExistsException[] = {  {&_swigt__p_Ferris__AgentAlreadyExistsException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__AgentException[] = {  {&_swigt__p_Ferris__AgentException, 0, 0, 0},  {&_swigt__p_Ferris__AgentAlreadyExistsException, _p_Ferris__AgentAlreadyExistsExceptionTo_p_Ferris__AgentException, 0, 0},  {&_swigt__p_Ferris__NoSuchAgentException, _p_Ferris__NoSuchAgentExceptionTo_p_Ferris__AgentException, 0, 0},  {&_swigt__p_Ferris__AgentOnlyHandlesOneEmblemException, _p_Ferris__AgentOnlyHandlesOneEmblemExceptionTo_p_Ferris__AgentException, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__AgentOnlyHandlesOneEmblemException[] = {  {&_swigt__p_Ferris__AgentOnlyHandlesOneEmblemException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Attribute[] = {  {&_swigt__p_Ferris__AttributeProxy, _p_Ferris__AttributeProxyTo_p_Ferris__Attribute, 0, 0},  {&_swigt__p_Ferris__Attribute, 0, 0, 0},  {&_swigt__p_Ferris__Context, _p_Ferris__ContextTo_p_Ferris__Attribute, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__AttributeAlreadyInUse[] = {  {&_swigt__p_Ferris__AttributeAlreadyInUse, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__AttributeCollection[] = {  {&_swigt__p_Ferris__AttributeCollection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__AttributeNotWritable[] = {  {&_swigt__p_Ferris__AttributeNotWritable, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__AttributeProxy[] = {  {&_swigt__p_Ferris__AttributeProxy, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__BackupException[] = {  {&_swigt__p_Ferris__BackupNameWouldBeTooLong, _p_Ferris__BackupNameWouldBeTooLongTo_p_Ferris__BackupException, 0, 0},  {&_swigt__p_Ferris__BackupException, 0, 0, 0},  {&_swigt__p_Ferris__UnknownBackupMode, _p_Ferris__UnknownBackupModeTo_p_Ferris__BackupException, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__BackupNameWouldBeTooLong[] = {  {&_swigt__p_Ferris__BackupNameWouldBeTooLong, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__BadParam[] = {  {&_swigt__p_Ferris__BadParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__BadSignature[] = {  {&_swigt__p_Ferris__BadSignature, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__BadlyFormedTime[] = {  {&_swigt__p_Ferris__BadlyFormedTime, 0, 0, 0},  {&_swigt__p_Ferris__BadlyFormedTimeString, _p_Ferris__BadlyFormedTimeStringTo_p_Ferris__BadlyFormedTime, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__BadlyFormedTimeString[] = {  {&_swigt__p_Ferris__BadlyFormedTimeString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__BranchFileSystem[] = {  {&_swigt__p_Ferris__BranchFileSystem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__CacheHandlable[] = {  {&_swigt__p_Ferris__CacheHandlable, 0, 0, 0},  {&_swigt__p_Ferris__Personality, _p_Ferris__PersonalityTo_p_Ferris__CacheHandlable, 0, 0},  {&_swigt__p_Ferris__Medallion, _p_Ferris__MedallionTo_p_Ferris__CacheHandlable, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__CacheManager[] = {  {&_swigt__p_Ferris__CacheManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__CanNotAddEmblemException[] = {  {&_swigt__p_Ferris__CanNotAddEmblemException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__CanNotAddExternalAttribute[] = {  {&_swigt__p_Ferris__CanNotAddExternalAttribute, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__CanNotDelete[] = {  {&_swigt__p_Ferris__CanNotDelete, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__CanNotDereferenceDanglingSoftLink[] = {  {&_swigt__p_Ferris__CanNotDereferenceDanglingSoftLink, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__CanNotGetStream[] = {  {&_swigt__p_Ferris__CanNotGetStream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__CanNotMonitorDirWithFAM[] = {  {&_swigt__p_Ferris__CanNotMonitorDirWithFAM, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__CanNotReadContext[] = {  {&_swigt__p_Ferris__CanNotReadContextPcctsParseFailed, _p_Ferris__CanNotReadContextPcctsParseFailedTo_p_Ferris__CanNotReadContext, 0, 0},  {&_swigt__p_Ferris__CanNotReadContext, 0, 0, 0},  {&_swigt__p_Ferris__CanNotMonitorDirWithFAM, _p_Ferris__CanNotMonitorDirWithFAMTo_p_Ferris__CanNotReadContext, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__CanNotReadContextPcctsParseFailed[] = {  {&_swigt__p_Ferris__CanNotReadContextPcctsParseFailed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__ChildNotRunning[] = {  {&_swigt__p_Ferris__ChildNotRunning, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__ColdEmblem[] = {  {&_swigt__p_Ferris__ColdEmblem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__CompressionAlgoNotFoundException[] = {  {&_swigt__p_Ferris__CompressionAlgoNotFoundException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__CompressionException[] = {  {&_swigt__p_Ferris__CompressionException, 0, 0, 0},  {&_swigt__p_Ferris__CompressionAlgoNotFoundException, _p_Ferris__CompressionAlgoNotFoundExceptionTo_p_Ferris__CompressionException, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__ContentNotModified[] = {  {&_swigt__p_Ferris__ContentNotModified, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Context[] = {  {&_swigt__p_Ferris__Context, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__ContextCollection[] = {  {&_swigt__p_Ferris__Context, _p_Ferris__ContextTo_p_Ferris__ContextCollection, 0, 0},  {&_swigt__p_Ferris__ContextCollection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__ContextExists[] = {  {&_swigt__p_Ferris__ContextExists, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__ContextIterator[] = {  {&_swigt__p_Ferris__ContextIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__ContextSetCompare[] = {  {&_swigt__p_Ferris__ContextSetCompare, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__CopyFailed[] = {  {&_swigt__p_Ferris__CopyFailed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__CreateFIFO[] = {  {&_swigt__p_Ferris__CreateFIFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__CreateMetaDataContext[] = {  {&_swigt__p_Ferris__CreateMetaDataContext, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__CryptoBase[] = {  {&_swigt__p_Ferris__GPGMEInitFailed, _p_Ferris__GPGMEInitFailedTo_p_Ferris__CryptoBase, 0, 0},  {&_swigt__p_Ferris__BadSignature, _p_Ferris__BadSignatureTo_p_Ferris__CryptoBase, 0, 0},  {&_swigt__p_Ferris__KeylistException, _p_Ferris__KeylistExceptionTo_p_Ferris__CryptoBase, 0, 0},  {&_swigt__p_Ferris__CryptoBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__CurlEasyInitFailed[] = {  {&_swigt__p_Ferris__CurlEasyInitFailed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__CurlPerformFailed[] = {  {&_swigt__p_Ferris__CurlPerformFailed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__CurlStateError[] = {  {&_swigt__p_Ferris__CurlStateError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__CurlStaticInitFailed[] = {  {&_swigt__p_Ferris__CurlStaticInitFailed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__CursorException[] = {  {&_swigt__p_Ferris__CursorException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__DBusConnectionException[] = {  {&_swigt__p_Ferris__DBusConnectionException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__DBusException[] = {  {&_swigt__p_Ferris__DBusException, 0, 0, 0},  {&_swigt__p_Ferris__DBusConnectionException, _p_Ferris__DBusConnectionExceptionTo_p_Ferris__DBusException, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__DTDCreationFailed[] = {  {&_swigt__p_Ferris__DTDCreationFailed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__DVDReadException[] = {  {&_swigt__p_Ferris__DVDReadException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Db4Exception[] = {  {&_swigt__p_Ferris__Db4Exception, 0, 0, 0},  {&_swigt__p_Ferris__Db4KeyNotFound, _p_Ferris__Db4KeyNotFoundTo_p_Ferris__Db4Exception, 0, 0},  {&_swigt__p_Ferris__eetKeyNotFound, _p_Ferris__eetKeyNotFoundTo_p_Ferris__Db4Exception, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Db4KeyNotFound[] = {  {&_swigt__p_Ferris__Db4KeyNotFound, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__DesktopFileKeyNotFound[] = {  {&_swigt__p_Ferris__DesktopFileKeyNotFound, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__EAIndexException[] = {  {&_swigt__p_Ferris__EAIndexException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__EA_Atom[] = {  {&_swigt__p_Ferris__EA_Atom_Static, _p_Ferris__EA_Atom_StaticTo_p_Ferris__EA_Atom, 0, 0},  {&_swigt__p_Ferris__EA_Atom, 0, 0, 0},  {&_swigt__p_Ferris__EA_Atom_ReadOnly, _p_Ferris__EA_Atom_ReadOnlyTo_p_Ferris__EA_Atom, 0, 0},  {&_swigt__p_Ferris__EA_Atom_RDFCacheAttribute, _p_Ferris__EA_Atom_RDFCacheAttributeTo_p_Ferris__EA_Atom, 0, 0},  {&_swigt__p_Ferris__EA_Atom_ReadOnly_PassedInStream, _p_Ferris__EA_Atom_ReadOnly_PassedInStreamTo_p_Ferris__EA_Atom, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__EA_Atom_RDFCacheAttribute[] = {  {&_swigt__p_Ferris__EA_Atom_RDFCacheAttribute, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__EA_Atom_ReadOnly[] = {  {&_swigt__p_Ferris__EA_Atom_ReadOnly, 0, 0, 0},  {&_swigt__p_Ferris__EA_Atom_ReadOnly_PassedInStream, _p_Ferris__EA_Atom_ReadOnly_PassedInStreamTo_p_Ferris__EA_Atom_ReadOnly, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__EA_Atom_ReadOnly_PassedInStream[] = {  {&_swigt__p_Ferris__EA_Atom_ReadOnly_PassedInStream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__EA_Atom_ReadWrite[] = {  {&_swigt__p_Ferris__EA_Atom_ReadWrite_OpenModeCached, _p_Ferris__EA_Atom_ReadWrite_OpenModeCachedTo_p_Ferris__EA_Atom_ReadWrite, 0, 0},  {&_swigt__p_Ferris__EA_Atom_ReadWrite, 0, 0, 0},  {&_swigt__p_Ferris__EA_Atom_ReadWrite_Contents, _p_Ferris__EA_Atom_ReadWrite_ContentsTo_p_Ferris__EA_Atom_ReadWrite, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__EA_Atom_ReadWrite_BaseT_Ferris__EA_Atom_ReadOnly_PassedInStream_t__GetIStream_PassedInStream_Func_t[] = {  {&_swigt__p_Ferris__EA_Atom_ReadWrite_BaseT_Ferris__EA_Atom_ReadOnly_PassedInStream_t__GetIStream_PassedInStream_Func_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__EA_Atom_ReadWrite_Contents[] = {  {&_swigt__p_Ferris__EA_Atom_ReadWrite_Contents, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__EA_Atom_ReadWrite_OpenModeCached[] = {  {&_swigt__p_Ferris__EA_Atom_ReadWrite_OpenModeCached, 0, 0, 0},  {&_swigt__p_Ferris__EA_Atom_ReadWrite_Contents, _p_Ferris__EA_Atom_ReadWrite_ContentsTo_p_Ferris__EA_Atom_ReadWrite_OpenModeCached, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__EA_Atom_ReadWrite_PassedInStream[] = {  {&_swigt__p_Ferris__EA_Atom_ReadWrite_PassedInStream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__EA_Atom_ReadWrite__RWBase_t__GetIStream_Func_t[] = {  {&_swigt__p_Ferris__EA_Atom_ReadWrite__RWBase_t__GetIStream_Func_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__EA_Atom_ReadWrite__RWBase_t__IOStreamClosed_Func_t[] = {  {&_swigt__p_Ferris__EA_Atom_ReadWrite__RWBase_t__IOStreamClosed_Func_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__EA_Atom_Static[] = {  {&_swigt__p_Ferris__EA_Atom_Static, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Emblem[] = {  {&_swigt__p_Ferris__Emblem, 0, 0, 0},  {&_swigt__p_Ferris__ColdEmblem, _p_Ferris__ColdEmblemTo_p_Ferris__Emblem, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__EmblemException[] = {  {&_swigt__p_Ferris__EmblemException, 0, 0, 0},  {&_swigt__p_Ferris__EmblemNotFoundException, _p_Ferris__EmblemNotFoundExceptionTo_p_Ferris__EmblemException, 0, 0},  {&_swigt__p_Ferris__CanNotAddEmblemException, _p_Ferris__CanNotAddEmblemExceptionTo_p_Ferris__EmblemException, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__EmblemNotFoundException[] = {  {&_swigt__p_Ferris__EmblemNotFoundException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Etagere[] = {  {&_swigt__p_Ferris__Etagere, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__EtagereException[] = {  {&_swigt__p_Ferris__EtagereException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FCA__ConceptLattice[] = {  {&_swigt__p_Ferris__FCA__ConceptLattice, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FCA__fh_conceptLattice[] = {  {&_swigt__p_Ferris__FCA__fh_conceptLattice, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FFilterSyntaxError[] = {  {&_swigt__p_Ferris__FFilterSyntaxError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisCanNotCreateLeafOfLeaf[] = {  {&_swigt__p_Ferris__FerrisCanNotCreateLeafOfLeaf, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisCanNotGetScriptNameError[] = {  {&_swigt__p_Ferris__FerrisCanNotGetScriptNameError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisCreateAttributeFailed[] = {  {&_swigt__p_Ferris__FerrisCreateAttributeFailed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisCreateAttributeNotSupported[] = {  {&_swigt__p_Ferris__FerrisCreateAttributeNotSupported, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisCreateSubContextFailed[] = {  {&_swigt__p_Ferris__FerrisCreateSubContextFailed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisCreateSubContextNotSupported[] = {  {&_swigt__p_Ferris__FerrisCreateSubContextNotSupported, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisCurlServerNameNotFound[] = {  {&_swigt__p_Ferris__FerrisCurlServerNameNotFound, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisExceptionBase[] = {  {&_swigt__p_Ferris__XMLBase, _p_Ferris__XMLBaseTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__RenameFailed, _p_Ferris__RenameFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__getIOStreamCloseUpdateFailed, _p_Ferris__getIOStreamCloseUpdateFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__CurlPerformFailed, _p_Ferris__CurlPerformFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisImageSaveFailed, _p_Ferris__FerrisImageSaveFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__CopyFailed, _p_Ferris__CopyFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__RemoveFailed, _p_Ferris__RemoveFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisCreateAttributeFailed, _p_Ferris__FerrisCreateAttributeFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__CanNotReadContextPcctsParseFailed, _p_Ferris__CanNotReadContextPcctsParseFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__AttributeAlreadyInUse, _p_Ferris__AttributeAlreadyInUseTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__SubContextAlreadyInUse, _p_Ferris__SubContextAlreadyInUseTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__AttributeNotWritable, _p_Ferris__AttributeNotWritableTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__BadSignature, _p_Ferris__BadSignatureTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__GPhoto2, _p_Ferris__GPhoto2To_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__XMLFatalError, _p_Ferris__XMLFatalErrorTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisInternalError, _p_Ferris__FerrisInternalErrorTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__BadParam, _p_Ferris__BadParamTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisExceptionBase, 0, 0, 0},  {&_swigt__p_Ferris__FerrisVFSExceptionBase, _p_Ferris__FerrisVFSExceptionBaseTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__CryptoBase, _p_Ferris__CryptoBaseTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisWaitTimedOut, _p_Ferris__FerrisWaitTimedOutTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__AccessDenied, _p_Ferris__AccessDeniedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__CanNotDelete, _p_Ferris__CanNotDeleteTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__BackupNameWouldBeTooLong, _p_Ferris__BackupNameWouldBeTooLongTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__CanNotMonitorDirWithFAM, _p_Ferris__CanNotMonitorDirWithFAMTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__CurlStateError, _p_Ferris__CurlStateErrorTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__NoSuchGroup, _p_Ferris__NoSuchGroupTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__UnknownBackupMode, _p_Ferris__UnknownBackupModeTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisParentNotSetError, _p_Ferris__FerrisParentNotSetErrorTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__NoSuchContextClass, _p_Ferris__NoSuchContextClassTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__GenericError, _p_Ferris__GenericErrorTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FileClipboard, _p_Ferris__FileClipboardTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisCurlServerNameNotFound, _p_Ferris__FerrisCurlServerNameNotFoundTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__Db4KeyNotFound, _p_Ferris__Db4KeyNotFoundTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__eetKeyNotFound, _p_Ferris__eetKeyNotFoundTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisSqlServerNameNotFound, _p_Ferris__FerrisSqlServerNameNotFoundTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__ContextExists, _p_Ferris__ContextExistsTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__ObjectExists, _p_Ferris__ObjectExistsTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__DesktopFileKeyNotFound, _p_Ferris__DesktopFileKeyNotFoundTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__Db4Exception, _p_Ferris__Db4ExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__CursorException, _p_Ferris__CursorExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__DVDReadException, _p_Ferris__DVDReadExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__BackupException, _p_Ferris__BackupExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__SocketOptionsException, _p_Ferris__SocketOptionsExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisSetCWDException, _p_Ferris__FerrisSetCWDExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisStatException, _p_Ferris__FerrisStatExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisGLibCException, _p_Ferris__FerrisGLibCExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__LDAPException, _p_Ferris__LDAPExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__CompressionException, _p_Ferris__CompressionExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__CompressionAlgoNotFoundException, _p_Ferris__CompressionAlgoNotFoundExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__IndexException, _p_Ferris__IndexExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FullTextIndexException, _p_Ferris__FullTextIndexExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__EAIndexException, _p_Ferris__EAIndexExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__SchemaException, _p_Ferris__SchemaExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__SchemaNotFoundException, _p_Ferris__SchemaNotFoundExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__MedallionException, _p_Ferris__MedallionExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__EtagereException, _p_Ferris__EtagereExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__EmblemException, _p_Ferris__EmblemExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__EmblemNotFoundException, _p_Ferris__EmblemNotFoundExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__CanNotAddEmblemException, _p_Ferris__CanNotAddEmblemExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__NoSuchPersonalityException, _p_Ferris__NoSuchPersonalityExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__NoSuchBeliefException, _p_Ferris__NoSuchBeliefExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__AgentException, _p_Ferris__AgentExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__AgentAlreadyExistsException, _p_Ferris__AgentAlreadyExistsExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__NoSuchAgentException, _p_Ferris__NoSuchAgentExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__AgentOnlyHandlesOneEmblemException, _p_Ferris__AgentOnlyHandlesOneEmblemExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__DBusException, _p_Ferris__DBusExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__DBusConnectionException, _p_Ferris__DBusConnectionExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__dbXMLException, _p_Ferris__dbXMLExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__KeylistException, _p_Ferris__KeylistExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__eetException, _p_Ferris__eetExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__GdbmException, _p_Ferris__GdbmExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__tdbException, _p_Ferris__tdbExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__InvalidSortSpecification, _p_Ferris__InvalidSortSpecificationTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__UnknownConfigLocation, _p_Ferris__UnknownConfigLocationTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__WebPhotoException, _p_Ferris__WebPhotoExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__SQLiteException, _p_Ferris__SQLiteExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisHALException, _p_Ferris__FerrisHALExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisStreamException, _p_Ferris__FerrisStreamExceptionTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__GPGMEInitFailed, _p_Ferris__GPGMEInitFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__DTDCreationFailed, _p_Ferris__DTDCreationFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__CurlEasyInitFailed, _p_Ferris__CurlEasyInitFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__CurlStaticInitFailed, _p_Ferris__CurlStaticInitFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisStreamLoadFailed, _p_Ferris__FerrisStreamLoadFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__GModuleOpenFailed, _p_Ferris__GModuleOpenFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisImlib2ImageLoadFailed, _p_Ferris__FerrisImlib2ImageLoadFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisGIMPImageLoadFailed, _p_Ferris__FerrisGIMPImageLoadFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__RootContextCreationFailed, _p_Ferris__RootContextCreationFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisCreateSubContextFailed, _p_Ferris__FerrisCreateSubContextFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisImageLoadFailed, _p_Ferris__FerrisImageLoadFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisPNGImageLoadFailed, _p_Ferris__FerrisPNGImageLoadFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisJPEGImageLoadFailed, _p_Ferris__FerrisJPEGImageLoadFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__XMPPacketScanFailed, _p_Ferris__XMPPacketScanFailedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__RelativeTimeParsing, _p_Ferris__RelativeTimeParsingTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__BadlyFormedTimeString, _p_Ferris__BadlyFormedTimeStringTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__NoSuchUser, _p_Ferris__NoSuchUserTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__InvalidModeString, _p_Ferris__InvalidModeStringTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__XMPBase, _p_Ferris__XMPBaseTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisNotSupportedInThisContext, _p_Ferris__FerrisNotSupportedInThisContextTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__NoSuchSubContext, _p_Ferris__NoSuchSubContextTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__CanNotReadContext, _p_Ferris__CanNotReadContextTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisNotReadableAsContext, _p_Ferris__FerrisNotReadableAsContextTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__NoOpenWithContext, _p_Ferris__NoOpenWithContextTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__getIOStreamCloseUpdatePermissionDenied, _p_Ferris__getIOStreamCloseUpdatePermissionDeniedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__XMLParseError, _p_Ferris__XMLParseErrorTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisCanNotGetScriptNameError, _p_Ferris__FerrisCanNotGetScriptNameErrorTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__QuotaStorageFull, _p_Ferris__QuotaStorageFullTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__StorageFull, _p_Ferris__StorageFullTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__ParseError, _p_Ferris__ParseErrorTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__CanNotDereferenceDanglingSoftLink, _p_Ferris__CanNotDereferenceDanglingSoftLinkTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__ProgramSpawn, _p_Ferris__ProgramSpawnTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisCanNotCreateLeafOfLeaf, _p_Ferris__FerrisCanNotCreateLeafOfLeafTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__NoSuchObject, _p_Ferris__NoSuchObjectTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__CanNotGetStream, _p_Ferris__CanNotGetStreamTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__ContentNotModified, _p_Ferris__ContentNotModifiedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__BranchFileSystem, _p_Ferris__BranchFileSystemTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisCreateSubContextNotSupported, _p_Ferris__FerrisCreateSubContextNotSupportedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisCreateAttributeNotSupported, _p_Ferris__FerrisCreateAttributeNotSupportedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__NotSupported, _p_Ferris__NotSupportedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__SyntaxError, _p_Ferris__SyntaxErrorTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FFilterSyntaxError, _p_Ferris__FFilterSyntaxErrorTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FulltextQuerySyntaxError, _p_Ferris__FulltextQuerySyntaxErrorTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__URLDecodeSyntaxError, _p_Ferris__URLDecodeSyntaxErrorTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__OpenActionIsNotDefined, _p_Ferris__OpenActionIsNotDefinedTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisOutOfMemory, _p_Ferris__FerrisOutOfMemoryTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__CreateFIFO, _p_Ferris__CreateFIFOTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__ChildNotRunning, _p_Ferris__ChildNotRunningTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__CanNotAddExternalAttribute, _p_Ferris__CanNotAddExternalAttributeTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__NoSuchAttribute, _p_Ferris__NoSuchAttributeTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__UnspoortedBlockSize, _p_Ferris__UnspoortedBlockSizeTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__BadlyFormedTime, _p_Ferris__BadlyFormedTimeTo_p_Ferris__FerrisExceptionBase, 0, 0},  {&_swigt__p_Ferris__MalformedURL, _p_Ferris__MalformedURLTo_p_Ferris__FerrisExceptionBase, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisException_CodeState[] = {  {&_swigt__p_Ferris__FerrisException_CodeState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisGIMPImageLoadFailed[] = {  {&_swigt__p_Ferris__FerrisGIMPImageLoadFailed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisGLibCException[] = {  {&_swigt__p_Ferris__FerrisGLibCException, 0, 0, 0},  {&_swigt__p_Ferris__FerrisStatException, _p_Ferris__FerrisStatExceptionTo_p_Ferris__FerrisGLibCException, 0, 0},  {&_swigt__p_Ferris__FerrisSetCWDException, _p_Ferris__FerrisSetCWDExceptionTo_p_Ferris__FerrisGLibCException, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisHALException[] = {  {&_swigt__p_Ferris__FerrisHALException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisImageLoadFailed[] = {  {&_swigt__p_Ferris__FerrisImageLoadFailed, 0, 0, 0},  {&_swigt__p_Ferris__FerrisPNGImageLoadFailed, _p_Ferris__FerrisPNGImageLoadFailedTo_p_Ferris__FerrisImageLoadFailed, 0, 0},  {&_swigt__p_Ferris__FerrisJPEGImageLoadFailed, _p_Ferris__FerrisJPEGImageLoadFailedTo_p_Ferris__FerrisImageLoadFailed, 0, 0},  {&_swigt__p_Ferris__FerrisGIMPImageLoadFailed, _p_Ferris__FerrisGIMPImageLoadFailedTo_p_Ferris__FerrisImageLoadFailed, 0, 0},  {&_swigt__p_Ferris__FerrisImlib2ImageLoadFailed, _p_Ferris__FerrisImlib2ImageLoadFailedTo_p_Ferris__FerrisImageLoadFailed, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisImageSaveFailed[] = {  {&_swigt__p_Ferris__FerrisImageSaveFailed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisImlib2ImageLoadFailed[] = {  {&_swigt__p_Ferris__FerrisImlib2ImageLoadFailed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisInternalError[] = {  {&_swigt__p_Ferris__FerrisInternalError, 0, 0, 0},  {&_swigt__p_Ferris__FerrisCanNotGetScriptNameError, _p_Ferris__FerrisCanNotGetScriptNameErrorTo_p_Ferris__FerrisInternalError, 0, 0},  {&_swigt__p_Ferris__FerrisParentNotSetError, _p_Ferris__FerrisParentNotSetErrorTo_p_Ferris__FerrisInternalError, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisJPEGImageLoadFailed[] = {  {&_swigt__p_Ferris__FerrisJPEGImageLoadFailed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisNotReadableAsContext[] = {  {&_swigt__p_Ferris__FerrisNotReadableAsContext, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisNotSupportedInThisContext[] = {  {&_swigt__p_Ferris__FerrisCreateSubContextNotSupported, _p_Ferris__FerrisCreateSubContextNotSupportedTo_p_Ferris__FerrisNotSupportedInThisContext, 0, 0},  {&_swigt__p_Ferris__FerrisCreateAttributeNotSupported, _p_Ferris__FerrisCreateAttributeNotSupportedTo_p_Ferris__FerrisNotSupportedInThisContext, 0, 0},  {&_swigt__p_Ferris__FerrisNotSupportedInThisContext, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisOutOfMemory[] = {  {&_swigt__p_Ferris__FerrisOutOfMemory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisPNGImageLoadFailed[] = {  {&_swigt__p_Ferris__FerrisPNGImageLoadFailed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisParentNotSetError[] = {  {&_swigt__p_Ferris__FerrisParentNotSetError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisSetCWDException[] = {  {&_swigt__p_Ferris__FerrisSetCWDException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisSqlServerNameNotFound[] = {  {&_swigt__p_Ferris__FerrisSqlServerNameNotFound, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisStatException[] = {  {&_swigt__p_Ferris__FerrisStatException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisStreamException[] = {  {&_swigt__p_Ferris__UnspoortedBlockSize, _p_Ferris__UnspoortedBlockSizeTo_p_Ferris__FerrisStreamException, 0, 0},  {&_swigt__p_Ferris__FerrisStreamException, 0, 0, 0},  {&_swigt__p_Ferris__CreateFIFO, _p_Ferris__CreateFIFOTo_p_Ferris__FerrisStreamException, 0, 0},  {&_swigt__p_Ferris__MalformedURL, _p_Ferris__MalformedURLTo_p_Ferris__FerrisStreamException, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisStreamLoadFailed[] = {  {&_swigt__p_Ferris__FerrisStreamLoadFailed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisVFSExceptionBase[] = {  {&_swigt__p_Ferris__XMLBase, _p_Ferris__XMLBaseTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__RenameFailed, _p_Ferris__RenameFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__getIOStreamCloseUpdateFailed, _p_Ferris__getIOStreamCloseUpdateFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__CurlPerformFailed, _p_Ferris__CurlPerformFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__CopyFailed, _p_Ferris__CopyFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__RemoveFailed, _p_Ferris__RemoveFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisCreateAttributeFailed, _p_Ferris__FerrisCreateAttributeFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__CanNotReadContextPcctsParseFailed, _p_Ferris__CanNotReadContextPcctsParseFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisImageSaveFailed, _p_Ferris__FerrisImageSaveFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__AttributeAlreadyInUse, _p_Ferris__AttributeAlreadyInUseTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__SubContextAlreadyInUse, _p_Ferris__SubContextAlreadyInUseTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__AttributeNotWritable, _p_Ferris__AttributeNotWritableTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__BadSignature, _p_Ferris__BadSignatureTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__GPhoto2, _p_Ferris__GPhoto2To_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__XMLFatalError, _p_Ferris__XMLFatalErrorTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisInternalError, _p_Ferris__FerrisInternalErrorTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__BadParam, _p_Ferris__BadParamTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisVFSExceptionBase, 0, 0, 0},  {&_swigt__p_Ferris__CryptoBase, _p_Ferris__CryptoBaseTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisWaitTimedOut, _p_Ferris__FerrisWaitTimedOutTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__AccessDenied, _p_Ferris__AccessDeniedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__CanNotDelete, _p_Ferris__CanNotDeleteTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__BackupNameWouldBeTooLong, _p_Ferris__BackupNameWouldBeTooLongTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__CanNotMonitorDirWithFAM, _p_Ferris__CanNotMonitorDirWithFAMTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__CurlStateError, _p_Ferris__CurlStateErrorTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__NoSuchGroup, _p_Ferris__NoSuchGroupTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisParentNotSetError, _p_Ferris__FerrisParentNotSetErrorTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__UnknownBackupMode, _p_Ferris__UnknownBackupModeTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__NoSuchContextClass, _p_Ferris__NoSuchContextClassTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__GenericError, _p_Ferris__GenericErrorTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FileClipboard, _p_Ferris__FileClipboardTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisCurlServerNameNotFound, _p_Ferris__FerrisCurlServerNameNotFoundTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__Db4KeyNotFound, _p_Ferris__Db4KeyNotFoundTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__eetKeyNotFound, _p_Ferris__eetKeyNotFoundTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisSqlServerNameNotFound, _p_Ferris__FerrisSqlServerNameNotFoundTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__ContextExists, _p_Ferris__ContextExistsTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__ObjectExists, _p_Ferris__ObjectExistsTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__DesktopFileKeyNotFound, _p_Ferris__DesktopFileKeyNotFoundTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__eetException, _p_Ferris__eetExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__Db4Exception, _p_Ferris__Db4ExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__CursorException, _p_Ferris__CursorExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__DVDReadException, _p_Ferris__DVDReadExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__BackupException, _p_Ferris__BackupExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__SocketOptionsException, _p_Ferris__SocketOptionsExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisSetCWDException, _p_Ferris__FerrisSetCWDExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisStatException, _p_Ferris__FerrisStatExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisGLibCException, _p_Ferris__FerrisGLibCExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__LDAPException, _p_Ferris__LDAPExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__CompressionException, _p_Ferris__CompressionExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__CompressionAlgoNotFoundException, _p_Ferris__CompressionAlgoNotFoundExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__IndexException, _p_Ferris__IndexExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FullTextIndexException, _p_Ferris__FullTextIndexExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__EAIndexException, _p_Ferris__EAIndexExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__SchemaException, _p_Ferris__SchemaExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__SchemaNotFoundException, _p_Ferris__SchemaNotFoundExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__MedallionException, _p_Ferris__MedallionExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__EtagereException, _p_Ferris__EtagereExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__EmblemException, _p_Ferris__EmblemExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__EmblemNotFoundException, _p_Ferris__EmblemNotFoundExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__CanNotAddEmblemException, _p_Ferris__CanNotAddEmblemExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__NoSuchPersonalityException, _p_Ferris__NoSuchPersonalityExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__NoSuchBeliefException, _p_Ferris__NoSuchBeliefExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__AgentException, _p_Ferris__AgentExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__AgentAlreadyExistsException, _p_Ferris__AgentAlreadyExistsExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__NoSuchAgentException, _p_Ferris__NoSuchAgentExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__AgentOnlyHandlesOneEmblemException, _p_Ferris__AgentOnlyHandlesOneEmblemExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__DBusException, _p_Ferris__DBusExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__DBusConnectionException, _p_Ferris__DBusConnectionExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__dbXMLException, _p_Ferris__dbXMLExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__KeylistException, _p_Ferris__KeylistExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__GdbmException, _p_Ferris__GdbmExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__tdbException, _p_Ferris__tdbExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__InvalidSortSpecification, _p_Ferris__InvalidSortSpecificationTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__UnknownConfigLocation, _p_Ferris__UnknownConfigLocationTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__WebPhotoException, _p_Ferris__WebPhotoExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__SQLiteException, _p_Ferris__SQLiteExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisHALException, _p_Ferris__FerrisHALExceptionTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__GPGMEInitFailed, _p_Ferris__GPGMEInitFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__DTDCreationFailed, _p_Ferris__DTDCreationFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__CurlEasyInitFailed, _p_Ferris__CurlEasyInitFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__CurlStaticInitFailed, _p_Ferris__CurlStaticInitFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisStreamLoadFailed, _p_Ferris__FerrisStreamLoadFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__GModuleOpenFailed, _p_Ferris__GModuleOpenFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisImlib2ImageLoadFailed, _p_Ferris__FerrisImlib2ImageLoadFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisGIMPImageLoadFailed, _p_Ferris__FerrisGIMPImageLoadFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__RootContextCreationFailed, _p_Ferris__RootContextCreationFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisCreateSubContextFailed, _p_Ferris__FerrisCreateSubContextFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisImageLoadFailed, _p_Ferris__FerrisImageLoadFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisPNGImageLoadFailed, _p_Ferris__FerrisPNGImageLoadFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisJPEGImageLoadFailed, _p_Ferris__FerrisJPEGImageLoadFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__XMPPacketScanFailed, _p_Ferris__XMPPacketScanFailedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__RelativeTimeParsing, _p_Ferris__RelativeTimeParsingTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__BadlyFormedTimeString, _p_Ferris__BadlyFormedTimeStringTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__NoSuchUser, _p_Ferris__NoSuchUserTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__InvalidModeString, _p_Ferris__InvalidModeStringTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__XMPBase, _p_Ferris__XMPBaseTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisNotSupportedInThisContext, _p_Ferris__FerrisNotSupportedInThisContextTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__NoSuchSubContext, _p_Ferris__NoSuchSubContextTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__CanNotReadContext, _p_Ferris__CanNotReadContextTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisNotReadableAsContext, _p_Ferris__FerrisNotReadableAsContextTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__NoOpenWithContext, _p_Ferris__NoOpenWithContextTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__getIOStreamCloseUpdatePermissionDenied, _p_Ferris__getIOStreamCloseUpdatePermissionDeniedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__XMLParseError, _p_Ferris__XMLParseErrorTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisCanNotGetScriptNameError, _p_Ferris__FerrisCanNotGetScriptNameErrorTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__QuotaStorageFull, _p_Ferris__QuotaStorageFullTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__StorageFull, _p_Ferris__StorageFullTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__ParseError, _p_Ferris__ParseErrorTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__CanNotDereferenceDanglingSoftLink, _p_Ferris__CanNotDereferenceDanglingSoftLinkTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__ProgramSpawn, _p_Ferris__ProgramSpawnTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisCanNotCreateLeafOfLeaf, _p_Ferris__FerrisCanNotCreateLeafOfLeafTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__NoSuchObject, _p_Ferris__NoSuchObjectTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__CanNotGetStream, _p_Ferris__CanNotGetStreamTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__ContentNotModified, _p_Ferris__ContentNotModifiedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__BranchFileSystem, _p_Ferris__BranchFileSystemTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisCreateSubContextNotSupported, _p_Ferris__FerrisCreateSubContextNotSupportedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisCreateAttributeNotSupported, _p_Ferris__FerrisCreateAttributeNotSupportedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__NotSupported, _p_Ferris__NotSupportedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__SyntaxError, _p_Ferris__SyntaxErrorTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FFilterSyntaxError, _p_Ferris__FFilterSyntaxErrorTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FulltextQuerySyntaxError, _p_Ferris__FulltextQuerySyntaxErrorTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__URLDecodeSyntaxError, _p_Ferris__URLDecodeSyntaxErrorTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__OpenActionIsNotDefined, _p_Ferris__OpenActionIsNotDefinedTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__FerrisOutOfMemory, _p_Ferris__FerrisOutOfMemoryTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__ChildNotRunning, _p_Ferris__ChildNotRunningTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__CanNotAddExternalAttribute, _p_Ferris__CanNotAddExternalAttributeTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__NoSuchAttribute, _p_Ferris__NoSuchAttributeTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},  {&_swigt__p_Ferris__BadlyFormedTime, _p_Ferris__BadlyFormedTimeTo_p_Ferris__FerrisVFSExceptionBase, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FerrisWaitTimedOut[] = {  {&_swigt__p_Ferris__FerrisWaitTimedOut, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Ferris_Logging_ostreamT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_Ferris__Ferris_Logging_ostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Ferris_fstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t[] = {  {&_swigt__p_Ferris__Ferris_fstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Ferris_ififostreamT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_Ferris__Ferris_ififostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Ferris_ifstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t[] = {  {&_swigt__p_Ferris__Ferris_ifstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Ferris_istringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t[] = {  {&_swigt__p_Ferris__Ferris_istringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Ferris_ofstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t[] = {  {&_swigt__p_Ferris__Ferris_ofstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Ferris_ostringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t[] = {  {&_swigt__p_Ferris__Ferris_ostringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Ferris_stringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t[] = {  {&_swigt__p_Ferris__Ferris_stringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FileClipboard[] = {  {&_swigt__p_Ferris__FileClipboard, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FullTextIndexException[] = {  {&_swigt__p_Ferris__FullTextIndexException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__FulltextQuerySyntaxError[] = {  {&_swigt__p_Ferris__FulltextQuerySyntaxError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__GModuleOpenFailed[] = {  {&_swigt__p_Ferris__GModuleOpenFailed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__GPGMEInitFailed[] = {  {&_swigt__p_Ferris__GPGMEInitFailed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__GPhoto2[] = {  {&_swigt__p_Ferris__GPhoto2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__GdbmException[] = {  {&_swigt__p_Ferris__GdbmException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__GenericError[] = {  {&_swigt__p_Ferris__GenericError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Handlable[] = {  {&_swigt__p_Ferris__ColdEmblem, _p_Ferris__ColdEmblemTo_p_Ferris__Handlable, 0, 0},  {&_swigt__p_Ferris__AttributeCollection, _p_Ferris__AttributeCollectionTo_p_Ferris__Handlable, 0, 0},  {&_swigt__p_Ferris__Times, _p_Ferris__TimesTo_p_Ferris__Handlable, 0, 0},  {&_swigt__p_Ferris__AttributeProxy, _p_Ferris__AttributeProxyTo_p_Ferris__Handlable, 0, 0},  {&_swigt__p_Ferris__AI__Agent, _p_Ferris__AI__AgentTo_p_Ferris__Handlable, 0, 0},  {&_swigt__p_Ferris__Personality, _p_Ferris__PersonalityTo_p_Ferris__Handlable, 0, 0},  {&_swigt__p_Ferris__MedallionBelief, _p_Ferris__MedallionBeliefTo_p_Ferris__Handlable, 0, 0},  {&_swigt__p_Ferris__Time__Benchmark, _p_Ferris__Time__BenchmarkTo_p_Ferris__Handlable, 0, 0},  {&_swigt__p_Ferris__Versioned, _p_Ferris__VersionedTo_p_Ferris__Handlable, 0, 0},  {&_swigt__p_Ferris__Etagere, _p_Ferris__EtagereTo_p_Ferris__Handlable, 0, 0},  {&_swigt__p_Ferris__CacheHandlable, _p_Ferris__CacheHandlableTo_p_Ferris__Handlable, 0, 0},  {&_swigt__p_Ferris__Handlable, 0, 0, 0},  {&_swigt__p_Ferris__Emblem, _p_Ferris__EmblemTo_p_Ferris__Handlable, 0, 0},  {&_swigt__p_Ferris__Medallion, _p_Ferris__MedallionTo_p_Ferris__Handlable, 0, 0},  {&_swigt__p_Ferris__Runner, _p_Ferris__RunnerTo_p_Ferris__Handlable, 0, 0},  {&_swigt__p_Ferris__ContextIterator, _p_Ferris__ContextIteratorTo_p_Ferris__Handlable, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__ImplicitIteratorUpdateLock[] = {  {&_swigt__p_Ferris__ImplicitIteratorUpdateLock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__IndexException[] = {  {&_swigt__p_Ferris__IndexException, 0, 0, 0},  {&_swigt__p_Ferris__FullTextIndexException, _p_Ferris__FullTextIndexExceptionTo_p_Ferris__IndexException, 0, 0},  {&_swigt__p_Ferris__EAIndexException, _p_Ferris__EAIndexExceptionTo_p_Ferris__IndexException, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__InvalidModeString[] = {  {&_swigt__p_Ferris__InvalidModeString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__InvalidSortSpecification[] = {  {&_swigt__p_Ferris__InvalidSortSpecification, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__KeylistException[] = {  {&_swigt__p_Ferris__KeylistException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__LDAPException[] = {  {&_swigt__p_Ferris__LDAPException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__MalformedURL[] = {  {&_swigt__p_Ferris__MalformedURL, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Medallion[] = {  {&_swigt__p_Ferris__Medallion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__MedallionBelief[] = {  {&_swigt__p_Ferris__MedallionBelief, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__MedallionException[] = {  {&_swigt__p_Ferris__MedallionException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__MutableCollectionEvents[] = {  {&_swigt__p_Ferris__MutableCollectionEvents, 0, 0, 0},  {&_swigt__p_Ferris__Context, _p_Ferris__ContextTo_p_Ferris__MutableCollectionEvents, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__NoOpenWithContext[] = {  {&_swigt__p_Ferris__NoOpenWithContext, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__NoSuchAgentException[] = {  {&_swigt__p_Ferris__NoSuchAgentException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__NoSuchAttribute[] = {  {&_swigt__p_Ferris__NoSuchAttribute, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__NoSuchBeliefException[] = {  {&_swigt__p_Ferris__NoSuchBeliefException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__NoSuchContextClass[] = {  {&_swigt__p_Ferris__NoSuchContextClass, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__NoSuchGroup[] = {  {&_swigt__p_Ferris__NoSuchGroup, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__NoSuchObject[] = {  {&_swigt__p_Ferris__NoSuchUser, _p_Ferris__NoSuchUserTo_p_Ferris__NoSuchObject, 0, 0},  {&_swigt__p_Ferris__NoSuchObject, 0, 0, 0},  {&_swigt__p_Ferris__NoSuchGroup, _p_Ferris__NoSuchGroupTo_p_Ferris__NoSuchObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__NoSuchPersonalityException[] = {  {&_swigt__p_Ferris__NoSuchPersonalityException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__NoSuchSubContext[] = {  {&_swigt__p_Ferris__NoSuchSubContext, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__NoSuchUser[] = {  {&_swigt__p_Ferris__NoSuchUser, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__NotSupported[] = {  {&_swigt__p_Ferris__NotSupported, 0, 0, 0},  {&_swigt__p_Ferris__FerrisCreateSubContextNotSupported, _p_Ferris__FerrisCreateSubContextNotSupportedTo_p_Ferris__NotSupported, 0, 0},  {&_swigt__p_Ferris__FerrisCreateAttributeNotSupported, _p_Ferris__FerrisCreateAttributeNotSupportedTo_p_Ferris__NotSupported, 0, 0},  {&_swigt__p_Ferris__FerrisNotSupportedInThisContext, _p_Ferris__FerrisNotSupportedInThisContextTo_p_Ferris__NotSupported, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__ObjectExists[] = {  {&_swigt__p_Ferris__ObjectExists, 0, 0, 0},  {&_swigt__p_Ferris__ContextExists, _p_Ferris__ContextExistsTo_p_Ferris__ObjectExists, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__OpenActionIsNotDefined[] = {  {&_swigt__p_Ferris__OpenActionIsNotDefined, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__ParseError[] = {  {&_swigt__p_Ferris__ParseError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Personality[] = {  {&_swigt__p_Ferris__Personality, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__PreprocessedSortString[] = {  {&_swigt__p_Ferris__PreprocessedSortString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__ProgramSpawn[] = {  {&_swigt__p_Ferris__ProgramSpawn, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__QuotaStorageFull[] = {  {&_swigt__p_Ferris__QuotaStorageFull, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__RegexCollection[] = {  {&_swigt__p_Ferris__RegexCollection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__RelativeTimeParsing[] = {  {&_swigt__p_Ferris__RelativeTimeParsing, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__RemoveFailed[] = {  {&_swigt__p_Ferris__RemoveFailed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__RenameFailed[] = {  {&_swigt__p_Ferris__RenameFailed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__RootContextCreationFailed[] = {  {&_swigt__p_Ferris__RootContextCreationFailed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__RootContextFactory[] = {  {&_swigt__p_Ferris__RootContextFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Runner[] = {  {&_swigt__p_Ferris__Runner, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__SQLiteException[] = {  {&_swigt__p_Ferris__SQLiteException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__SchemaException[] = {  {&_swigt__p_Ferris__SchemaException, 0, 0, 0},  {&_swigt__p_Ferris__SchemaNotFoundException, _p_Ferris__SchemaNotFoundExceptionTo_p_Ferris__SchemaException, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__SchemaNotFoundException[] = {  {&_swigt__p_Ferris__SchemaNotFoundException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__SocketOptionsException[] = {  {&_swigt__p_Ferris__SocketOptionsException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__StorageFull[] = {  {&_swigt__p_Ferris__StorageFull, 0, 0, 0},  {&_swigt__p_Ferris__QuotaStorageFull, _p_Ferris__QuotaStorageFullTo_p_Ferris__StorageFull, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__SubContextAlreadyInUse[] = {  {&_swigt__p_Ferris__SubContextAlreadyInUse, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__SyntaxError[] = {  {&_swigt__p_Ferris__SyntaxError, 0, 0, 0},  {&_swigt__p_Ferris__FFilterSyntaxError, _p_Ferris__FFilterSyntaxErrorTo_p_Ferris__SyntaxError, 0, 0},  {&_swigt__p_Ferris__FulltextQuerySyntaxError, _p_Ferris__FulltextQuerySyntaxErrorTo_p_Ferris__SyntaxError, 0, 0},  {&_swigt__p_Ferris__URLDecodeSyntaxError, _p_Ferris__URLDecodeSyntaxErrorTo_p_Ferris__SyntaxError, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Time__Benchmark[] = {  {&_swigt__p_Ferris__Time__Benchmark, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Times[] = {  {&_swigt__p_Ferris__Times, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__URLDecodeSyntaxError[] = {  {&_swigt__p_Ferris__URLDecodeSyntaxError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__UnknownBackupMode[] = {  {&_swigt__p_Ferris__UnknownBackupMode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__UnknownConfigLocation[] = {  {&_swigt__p_Ferris__UnknownConfigLocation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__UnspoortedBlockSize[] = {  {&_swigt__p_Ferris__UnspoortedBlockSize, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Util__SingleShot[] = {  {&_swigt__p_Ferris__Util__SingleShot, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__Versioned[] = {  {&_swigt__p_Ferris__Versioned, 0, 0, 0},  {&_swigt__p_Ferris__AttributeCollection, _p_Ferris__AttributeCollectionTo_p_Ferris__Versioned, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__WebPhotoException[] = {  {&_swigt__p_Ferris__WebPhotoException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__XMLBase[] = {  {&_swigt__p_Ferris__dbXMLException, _p_Ferris__dbXMLExceptionTo_p_Ferris__XMLBase, 0, 0},  {&_swigt__p_Ferris__XMLBase, 0, 0, 0},  {&_swigt__p_Ferris__XMLParseError, _p_Ferris__XMLParseErrorTo_p_Ferris__XMLBase, 0, 0},  {&_swigt__p_Ferris__XMLFatalError, _p_Ferris__XMLFatalErrorTo_p_Ferris__XMLBase, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__XMLFatalError[] = {  {&_swigt__p_Ferris__XMLFatalError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__XMLParseError[] = {  {&_swigt__p_Ferris__XMLParseError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__XMPBase[] = {  {&_swigt__p_Ferris__XMPPacketScanFailed, _p_Ferris__XMPPacketScanFailedTo_p_Ferris__XMPBase, 0, 0},  {&_swigt__p_Ferris__XMPBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__XMPPacketScanFailed[] = {  {&_swigt__p_Ferris__XMPPacketScanFailed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__dbXMLException[] = {  {&_swigt__p_Ferris__dbXMLException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__eetException[] = {  {&_swigt__p_Ferris__eetException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__eetKeyNotFound[] = {  {&_swigt__p_Ferris__eetKeyNotFound, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__ferris_basic_streambuf_fourk[] = {  {&_swigt__p_Ferris__ferris_basic_streambuf_fourk, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__ferris_basic_streambuf_onemeg[] = {  {&_swigt__p_Ferris__ferris_basic_streambuf_onemeg, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__ferris_basic_streambuf_quartk[] = {  {&_swigt__p_Ferris__ferris_basic_streambuf_quartk, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__ferris_basic_streambuf_sixteenbytes[] = {  {&_swigt__p_Ferris__ferris_basic_streambuf_sixteenbytes, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__ferris_basic_streambuf_sixteenk[] = {  {&_swigt__p_Ferris__ferris_basic_streambuf_sixteenk, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__ferris_basic_streambuf_virtual[] = {  {&_swigt__p_Ferris__ferris_basic_streambuf_virtual, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__ferris_ios[] = {  {&_swigt__p_Ferris__ferris_ios, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__ferris_streambufT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_Ferris__ferris_streambufT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__fh_attrcol[] = {  {&_swigt__p_Ferris__fh_attrcol, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__fh_attribute[] = {  {&_swigt__p_Ferris__fh_attribute, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__fh_cemblem[] = {  {&_swigt__p_Ferris__fh_cemblem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__fh_context[] = {  {&_swigt__p_Ferris__fh_context, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__fh_emblem[] = {  {&_swigt__p_Ferris__fh_emblem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__fh_emblem_less[] = {  {&_swigt__p_Ferris__fh_emblem_less, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__fh_etagere[] = {  {&_swigt__p_Ferris__fh_etagere, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__fh_medallion[] = {  {&_swigt__p_Ferris__fh_medallion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__fh_medallionBelief[] = {  {&_swigt__p_Ferris__fh_medallionBelief, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__fh_runner[] = {  {&_swigt__p_Ferris__fh_runner, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__fh_sorter[] = {  {&_swigt__p_Ferris__fh_sorter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__getIOStreamCloseUpdateFailed[] = {  {&_swigt__p_Ferris__getIOStreamCloseUpdateFailed, 0, 0, 0},  {&_swigt__p_Ferris__getIOStreamCloseUpdatePermissionDenied, _p_Ferris__getIOStreamCloseUpdatePermissionDeniedTo_p_Ferris__getIOStreamCloseUpdateFailed, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__getIOStreamCloseUpdatePermissionDenied[] = {  {&_swigt__p_Ferris__getIOStreamCloseUpdatePermissionDenied, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__giStreamPosRAII[] = {  {&_swigt__p_Ferris__giStreamPosRAII, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ferris__tdbException[] = {  {&_swigt__p_Ferris__tdbException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GSpawnFlags[] = {  {&_swigt__p_GSpawnFlags, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GenericCloseSignal_t[] = {  {&_swigt__p_GenericCloseSignal_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GetIOStream_Func_t[] = {  {&_swigt__p_GetIOStream_Func_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GetIStream_Func_t[] = {  {&_swigt__p_GetIStream_Func_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GetIStream_PassedInStream_Func_t[] = {  {&_swigt__p_GetIStream_PassedInStream_Func_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IOStreamClosed_Func_t[] = {  {&_swigt__p_IOStreamClosed_Func_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__AllowConversion[] = {  {&_swigt__p_Loki__AllowConversion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__AssocVectorT_void_p_sigc__connection_t[] = {  {&_swigt__p_Loki__AssocVectorT_void_p_sigc__connection_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__AssocVectorT_void_p_void_p_t[] = {  {&_swigt__p_Loki__AssocVectorT_void_p_void_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__DisallowConversion[] = {  {&_swigt__p_Loki__DisallowConversion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__FunctorT_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t[] = {  {&_swigt__p_Loki__FunctorT_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__FunctorT_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t[] = {  {&_swigt__p_Loki__FunctorT_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__FunctorT_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t[] = {  {&_swigt__p_Loki__FunctorT_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__FunctorT_bool_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t[] = {  {&_swigt__p_Loki__FunctorT_bool_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__FunctorT_void_LOKI_TYPELIST_1_fFerris__fh_emblem_const_RF_t[] = {  {&_swigt__p_Loki__FunctorT_void_LOKI_TYPELIST_1_fFerris__fh_emblem_const_RF_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__FunctorT_void_LOKI_TYPELIST_1_fFerris__fh_runnerF_t[] = {  {&_swigt__p_Loki__FunctorT_void_LOKI_TYPELIST_1_fFerris__fh_runnerF_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__FunctorT_void_LOKI_TYPELIST_4_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_tF_t[] = {  {&_swigt__p_Loki__FunctorT_void_LOKI_TYPELIST_4_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_tF_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__NullPointerException[] = {  {&_swigt__p_Loki__NullPointerException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__Private__RefLinkedBase[] = {  {&_swigt__p_Loki__Private__RefLinkedBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__SmartPtrT_Ferris__AI__Agent_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t[] = {  {&_swigt__p_Loki__SmartPtrT_Ferris__AI__Agent_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__SmartPtrT_Ferris__AsyncIOHandler_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t[] = {  {&_swigt__p_Loki__SmartPtrT_Ferris__AsyncIOHandler_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__SmartPtrT_Ferris__CreateMetaDataContext___Ferris__FerrisExRefCountedContext_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t[] = {  {&_swigt__p_Loki__SmartPtrT_Ferris__CreateMetaDataContext___Ferris__FerrisExRefCountedContext_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__SmartPtrT_Ferris__EAIndex__EAIndexManagerDB4Tree_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t[] = {  {&_swigt__p_Loki__SmartPtrT_Ferris__EAIndex__EAIndexManagerDB4Tree_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__SmartPtrT_Ferris__EAIndex__EAIndexManagerDB4_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t[] = {  {&_swigt__p_Loki__SmartPtrT_Ferris__EAIndex__EAIndexManagerDB4_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__SmartPtrT_Ferris__EAIndex__EAQuery_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t[] = {  {&_swigt__p_Loki__SmartPtrT_Ferris__EAIndex__EAQuery_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__SmartPtrT_Ferris__EAIndex__ForwardEAIndexInterface_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t[] = {  {&_swigt__p_Loki__SmartPtrT_Ferris__EAIndex__ForwardEAIndexInterface_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__SmartPtrT_Ferris__FerrisSlaveProcess_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t[] = {  {&_swigt__p_Loki__SmartPtrT_Ferris__FerrisSlaveProcess_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__SmartPtrT_Ferris__Ferrisls_aggregate_data_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t[] = {  {&_swigt__p_Loki__SmartPtrT_Ferris__Ferrisls_aggregate_data_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t[] = {  {&_swigt__p_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t[] = {  {&_swigt__p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__SmartPtrT_Ferris__Regex_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t[] = {  {&_swigt__p_Loki__SmartPtrT_Ferris__Regex_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__SmartPtrT_Ferris__Semantic__SmushSet_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t[] = {  {&_swigt__p_Loki__SmartPtrT_Ferris__Semantic__SmushSet_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__SmartPtrT_Ferris__Semantic__TreeSmushing_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t[] = {  {&_swigt__p_Loki__SmartPtrT_Ferris__Semantic__TreeSmushing_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__SmartPtrT_Ferris__Time__Benchmark_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t[] = {  {&_swigt__p_Loki__SmartPtrT_Ferris__Time__Benchmark_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__SmartPtrT_Ferris__Times_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t[] = {  {&_swigt__p_Loki__SmartPtrT_Ferris__Times_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__SmartPtrT_Ferris__XMLMsgStreamCollector_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t[] = {  {&_swigt__p_Loki__SmartPtrT_Ferris__XMLMsgStreamCollector_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__SmartPtrT_Ferris__redlandea__SmushSet_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t[] = {  {&_swigt__p_Loki__SmartPtrT_Ferris__redlandea__SmushSet_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__SmartPtrT_Ferris__redlandea__TreeSmushing_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t[] = {  {&_swigt__p_Loki__SmartPtrT_Ferris__redlandea__TreeSmushing_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__SmartPtrT_boost__regex_Loki__RefLinked_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_Loki__DefaultSPStorage_t[] = {  {&_swigt__p_Loki__SmartPtrT_boost__regex_Loki__RefLinked_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_Loki__DefaultSPStorage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Loki__SmartPtrT_char_Loki__DestructiveCopy_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_Loki__DefaultSPStorage_t[] = {  {&_swigt__p_Loki__SmartPtrT_char_Loki__DestructiveCopy_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_Loki__DefaultSPStorage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NamingEvent_Changed[] = {  {&_swigt__p_NamingEvent_Changed, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NamingEvent_Changed_Sig_t[] = {  {&_swigt__p_NamingEvent_Changed_Sig_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NamingEvent_Created[] = {  {&_swigt__p_NamingEvent_Created, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NamingEvent_Created_Sig_t[] = {  {&_swigt__p_NamingEvent_Created_Sig_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NamingEvent_Deleted[] = {  {&_swigt__p_NamingEvent_Deleted, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NamingEvent_Deleted_Sig_t[] = {  {&_swigt__p_NamingEvent_Deleted_Sig_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NamingEvent_Exists[] = {  {&_swigt__p_NamingEvent_Exists, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NamingEvent_Exists_Sig_t[] = {  {&_swigt__p_NamingEvent_Exists_Sig_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NamingEvent_MedallionUpdated_Sig_t[] = {  {&_swigt__p_NamingEvent_MedallionUpdated_Sig_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NamingEvent_Moved[] = {  {&_swigt__p_NamingEvent_Moved, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NamingEvent_Moved_Sig_t[] = {  {&_swigt__p_NamingEvent_Moved_Sig_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NamingEvent_Start_Execute[] = {  {&_swigt__p_NamingEvent_Start_Execute, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NamingEvent_Start_Execute_Sig_t[] = {  {&_swigt__p_NamingEvent_Start_Execute_Sig_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NamingEvent_Start_Reading_Context[] = {  {&_swigt__p_NamingEvent_Start_Reading_Context, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NamingEvent_Start_Reading_Context_Sig_t[] = {  {&_swigt__p_NamingEvent_Start_Reading_Context_Sig_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NamingEvent_Stop_Execute[] = {  {&_swigt__p_NamingEvent_Stop_Execute, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NamingEvent_Stop_Execute_Sig_t[] = {  {&_swigt__p_NamingEvent_Stop_Execute_Sig_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NamingEvent_Stop_Reading_Context[] = {  {&_swigt__p_NamingEvent_Stop_Reading_Context, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NamingEvent_Stop_Reading_Context_Sig_t[] = {  {&_swigt__p_NamingEvent_Stop_Reading_Context_Sig_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OnlyInCacheSignal_t[] = {  {&_swigt__p_OnlyInCacheSignal_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PostfixTrimmerOps[] = {  {&_swigt__p_PostfixTrimmerOps, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PrefixTrimmerOps[] = {  {&_swigt__p_PrefixTrimmerOps, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RWBase_t[] = {  {&_swigt__p_RWBase_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Runner_AsyncIOFunctor_t[] = {  {&_swigt__p_Runner_AsyncIOFunctor_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SubContextNames_t[] = {  {&_swigt__p_SubContextNames_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TrimmerBase[] = {  {&_swigt__p_TrimmerBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TrimmerT_PostfixTrimmerOps_t[] = {  {&_swigt__p_TrimmerT_PostfixTrimmerOps_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TrimmerT_PrefixTrimmerOps_t[] = {  {&_swigt__p_TrimmerT_PrefixTrimmerOps_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Version_t[] = {  {&_swigt__p_Version_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XSDBasic_t[] = {  {&_swigt__p_XSDBasic_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__Base[] = {  {&_swigt__p__Base, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__Self[] = {  {&_swigt__p__Self, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p___gnu_cxx__stdio_filebufT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p___gnu_cxx__stdio_filebufT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_difference_type[] = {  {&_swigt__p_difference_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fh_insideResolve[] = {  {&_swigt__p_fh_insideResolve, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fh_ostream[] = {  {&_swigt__p_fh_ostream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_freelist_t[] = {  {&_swigt__p_freelist_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gboolean[] = {  {&_swigt__p_gboolean, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gint[] = {  {&_swigt__p_gint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_guint32[] = {  {&_swigt__p_guint32, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_guint64[] = {  {&_swigt__p_guint64, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iterator_category[] = {  {&_swigt__p_iterator_category, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_openmode[] = {  {&_swigt__p_openmode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_char[] = {  {&_swigt__p_p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_std__istringstream[] = {  {&_swigt__p_p_std__istringstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_std__ostringstream[] = {  {&_swigt__p_p_std__ostringstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_std__stringstream[] = {  {&_swigt__p_p_std__stringstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pid_t[] = {  {&_swigt__p_pid_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pointer[] = {  {&_swigt__p_pointer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_poptContext[] = {  {&_swigt__p_poptContext, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_poptOption[] = {  {&_swigt__p_poptOption, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ref_count_t[] = {  {&_swigt__p_ref_count_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_reference[] = {  {&_swigt__p_reference, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sigc__signal1T_void_FerrisLoki__Handlable_p_t[] = {  {&_swigt__p_sigc__signal1T_void_FerrisLoki__Handlable_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sigc__signal1T_void_Ferris__CacheHandlable_p_t[] = {  {&_swigt__p_sigc__signal1T_void_Ferris__CacheHandlable_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sigc__signal1T_void_Ferris__fh_context_t[] = {  {&_swigt__p_sigc__signal1T_void_Ferris__fh_context_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sigc__signal1T_void_NamingEvent_Start_Reading_Context_p_t[] = {  {&_swigt__p_sigc__signal1T_void_NamingEvent_Start_Reading_Context_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sigc__signal1T_void_NamingEvent_Stop_Reading_Context_p_t[] = {  {&_swigt__p_sigc__signal1T_void_NamingEvent_Stop_Reading_Context_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sigc__signal2T_void_Ferris__closeSignalStream_t_R_std__streamsize_t[] = {  {&_swigt__p_sigc__signal2T_void_Ferris__closeSignalStream_t_R_std__streamsize_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sigc__signal2T_void_Ferris__fh_context_Ferris__stringset_t_const_R_t[] = {  {&_swigt__p_sigc__signal2T_void_Ferris__fh_context_Ferris__stringset_t_const_R_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sigc__signal2T_void_Ferris__fh_emblem_Ferris__fh_emblem_t[] = {  {&_swigt__p_sigc__signal2T_void_Ferris__fh_emblem_Ferris__fh_emblem_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sigc__signal2T_void_Ferris__fh_etagere_Ferris__fh_emblem_t[] = {  {&_swigt__p_sigc__signal2T_void_Ferris__fh_etagere_Ferris__fh_emblem_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sigc__signal3T_void_Ferris__fh_emblem_std__string_std__string_t[] = {  {&_swigt__p_sigc__signal3T_void_Ferris__fh_emblem_std__string_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sigc__signal3T_void_NamingEvent_Changed_p_std__string_std__string_t[] = {  {&_swigt__p_sigc__signal3T_void_NamingEvent_Changed_p_std__string_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sigc__signal3T_void_NamingEvent_Deleted_p_std__string_std__string_t[] = {  {&_swigt__p_sigc__signal3T_void_NamingEvent_Deleted_p_std__string_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sigc__signal3T_void_NamingEvent_Moved_p_std__string_std__string_t[] = {  {&_swigt__p_sigc__signal3T_void_NamingEvent_Moved_p_std__string_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sigc__signal3T_void_NamingEvent_Start_Execute_p_std__string_std__string_t[] = {  {&_swigt__p_sigc__signal3T_void_NamingEvent_Start_Execute_p_std__string_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sigc__signal3T_void_NamingEvent_Stop_Execute_p_std__string_std__string_t[] = {  {&_swigt__p_sigc__signal3T_void_NamingEvent_Stop_Execute_p_std__string_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sigc__signal4T_void_Ferris__fh_context_Ferris__fh_context_int_int_t[] = {  {&_swigt__p_sigc__signal4T_void_Ferris__fh_context_Ferris__fh_context_int_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sigc__signal4T_void_NamingEvent_Created_p_Ferris__fh_context_const_R_std__string_std__string_t[] = {  {&_swigt__p_sigc__signal4T_void_NamingEvent_Created_p_Ferris__fh_context_const_R_std__string_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sigc__signal4T_void_NamingEvent_Exists_p_Ferris__fh_context_const_R_std__string_std__string_t[] = {  {&_swigt__p_sigc__signal4T_void_NamingEvent_Exists_p_Ferris__fh_context_const_R_std__string_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_sigc__trackable[] = {  {&_swigt__p_Ferris__ColdEmblem, _p_Ferris__ColdEmblemTo_p_sigc__trackable, 0, 0},  {&_swigt__p_Ferris__AttributeCollection, _p_Ferris__AttributeCollectionTo_p_sigc__trackable, 0, 0},  {&_swigt__p_Ferris__Times, _p_Ferris__TimesTo_p_sigc__trackable, 0, 0},  {&_swigt__p_Ferris__AttributeProxy, _p_Ferris__AttributeProxyTo_p_sigc__trackable, 0, 0},  {&_swigt__p_Ferris__AI__Agent, _p_Ferris__AI__AgentTo_p_sigc__trackable, 0, 0},  {&_swigt__p_Ferris__EA_Atom_ReadWrite_Contents, _p_Ferris__EA_Atom_ReadWrite_ContentsTo_p_sigc__trackable, 0, 0},  {&_swigt__p_Ferris__Personality, _p_Ferris__PersonalityTo_p_sigc__trackable, 0, 0},  {&_swigt__p_Ferris__EA_Atom_ReadWrite_OpenModeCached, _p_Ferris__EA_Atom_ReadWrite_OpenModeCachedTo_p_sigc__trackable, 0, 0},  {&_swigt__p_Ferris__MedallionBelief, _p_Ferris__MedallionBeliefTo_p_sigc__trackable, 0, 0},  {&_swigt__p_Ferris__Time__Benchmark, _p_Ferris__Time__BenchmarkTo_p_sigc__trackable, 0, 0},  {&_swigt__p_Ferris__Versioned, _p_Ferris__VersionedTo_p_sigc__trackable, 0, 0},  {&_swigt__p_Ferris__Etagere, _p_Ferris__EtagereTo_p_sigc__trackable, 0, 0},  {&_swigt__p_Ferris__EA_Atom_ReadWrite_PassedInStream, _p_Ferris__EA_Atom_ReadWrite_PassedInStreamTo_p_sigc__trackable, 0, 0},  {&_swigt__p_Ferris__CacheHandlable, _p_Ferris__CacheHandlableTo_p_sigc__trackable, 0, 0},  {&_swigt__p_Ferris__Handlable, _p_Ferris__HandlableTo_p_sigc__trackable, 0, 0},  {&_swigt__p_FerrisLoki__Handlable, _p_FerrisLoki__HandlableTo_p_sigc__trackable, 0, 0},  {&_swigt__p_sigc__trackable, 0, 0, 0},  {&_swigt__p_Ferris__EA_Atom_ReadWrite, _p_Ferris__EA_Atom_ReadWriteTo_p_sigc__trackable, 0, 0},  {&_swigt__p_Ferris__Emblem, _p_Ferris__EmblemTo_p_sigc__trackable, 0, 0},  {&_swigt__p_Ferris__Medallion, _p_Ferris__MedallionTo_p_sigc__trackable, 0, 0},  {&_swigt__p_Ferris__Runner, _p_Ferris__RunnerTo_p_sigc__trackable, 0, 0},  {&_swigt__p_Ferris__ContextIterator, _p_Ferris__ContextIteratorTo_p_sigc__trackable, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__basic_ostreamT_wchar_t_std__char_traitsT_wchar_t_t_t[] = {  {&_swigt__p_std__basic_ostreamT_wchar_t_std__char_traitsT_wchar_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__basic_streambufT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__exception[] = {  {&_swigt__p_Ferris__XMLBase, _p_Ferris__XMLBaseTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__RenameFailed, _p_Ferris__RenameFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__getIOStreamCloseUpdateFailed, _p_Ferris__getIOStreamCloseUpdateFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__CurlPerformFailed, _p_Ferris__CurlPerformFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisImageSaveFailed, _p_Ferris__FerrisImageSaveFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__CopyFailed, _p_Ferris__CopyFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__RemoveFailed, _p_Ferris__RemoveFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisCreateAttributeFailed, _p_Ferris__FerrisCreateAttributeFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__CanNotReadContextPcctsParseFailed, _p_Ferris__CanNotReadContextPcctsParseFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__AttributeAlreadyInUse, _p_Ferris__AttributeAlreadyInUseTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__SubContextAlreadyInUse, _p_Ferris__SubContextAlreadyInUseTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__AttributeNotWritable, _p_Ferris__AttributeNotWritableTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__BadSignature, _p_Ferris__BadSignatureTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__GPhoto2, _p_Ferris__GPhoto2To_p_std__exception, 0, 0},  {&_swigt__p_Ferris__XMLFatalError, _p_Ferris__XMLFatalErrorTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisInternalError, _p_Ferris__FerrisInternalErrorTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__BadParam, _p_Ferris__BadParamTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisVFSExceptionBase, _p_Ferris__FerrisVFSExceptionBaseTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__CryptoBase, _p_Ferris__CryptoBaseTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisExceptionBase, _p_Ferris__FerrisExceptionBaseTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisWaitTimedOut, _p_Ferris__FerrisWaitTimedOutTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__AccessDenied, _p_Ferris__AccessDeniedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__CanNotDelete, _p_Ferris__CanNotDeleteTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__BackupNameWouldBeTooLong, _p_Ferris__BackupNameWouldBeTooLongTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__CanNotMonitorDirWithFAM, _p_Ferris__CanNotMonitorDirWithFAMTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__CurlStateError, _p_Ferris__CurlStateErrorTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__NoSuchGroup, _p_Ferris__NoSuchGroupTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__UnknownBackupMode, _p_Ferris__UnknownBackupModeTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisParentNotSetError, _p_Ferris__FerrisParentNotSetErrorTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__NoSuchContextClass, _p_Ferris__NoSuchContextClassTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__GenericError, _p_Ferris__GenericErrorTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FileClipboard, _p_Ferris__FileClipboardTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisCurlServerNameNotFound, _p_Ferris__FerrisCurlServerNameNotFoundTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__Db4KeyNotFound, _p_Ferris__Db4KeyNotFoundTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__eetKeyNotFound, _p_Ferris__eetKeyNotFoundTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisSqlServerNameNotFound, _p_Ferris__FerrisSqlServerNameNotFoundTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__ContextExists, _p_Ferris__ContextExistsTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__ObjectExists, _p_Ferris__ObjectExistsTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__DesktopFileKeyNotFound, _p_Ferris__DesktopFileKeyNotFoundTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__Db4Exception, _p_Ferris__Db4ExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__CursorException, _p_Ferris__CursorExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__DVDReadException, _p_Ferris__DVDReadExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__BackupException, _p_Ferris__BackupExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__SocketOptionsException, _p_Ferris__SocketOptionsExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisSetCWDException, _p_Ferris__FerrisSetCWDExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisStatException, _p_Ferris__FerrisStatExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisGLibCException, _p_Ferris__FerrisGLibCExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__LDAPException, _p_Ferris__LDAPExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__CompressionException, _p_Ferris__CompressionExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__CompressionAlgoNotFoundException, _p_Ferris__CompressionAlgoNotFoundExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__IndexException, _p_Ferris__IndexExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FullTextIndexException, _p_Ferris__FullTextIndexExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__EAIndexException, _p_Ferris__EAIndexExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__SchemaException, _p_Ferris__SchemaExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__SchemaNotFoundException, _p_Ferris__SchemaNotFoundExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__MedallionException, _p_Ferris__MedallionExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__EtagereException, _p_Ferris__EtagereExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__EmblemException, _p_Ferris__EmblemExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__EmblemNotFoundException, _p_Ferris__EmblemNotFoundExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__CanNotAddEmblemException, _p_Ferris__CanNotAddEmblemExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__NoSuchPersonalityException, _p_Ferris__NoSuchPersonalityExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__NoSuchBeliefException, _p_Ferris__NoSuchBeliefExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__AgentException, _p_Ferris__AgentExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__AgentAlreadyExistsException, _p_Ferris__AgentAlreadyExistsExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__NoSuchAgentException, _p_Ferris__NoSuchAgentExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__AgentOnlyHandlesOneEmblemException, _p_Ferris__AgentOnlyHandlesOneEmblemExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__DBusException, _p_Ferris__DBusExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__DBusConnectionException, _p_Ferris__DBusConnectionExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__dbXMLException, _p_Ferris__dbXMLExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_std__exception, 0, 0, 0},  {&_swigt__p_Ferris__KeylistException, _p_Ferris__KeylistExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__eetException, _p_Ferris__eetExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__GdbmException, _p_Ferris__GdbmExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__tdbException, _p_Ferris__tdbExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__InvalidSortSpecification, _p_Ferris__InvalidSortSpecificationTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__UnknownConfigLocation, _p_Ferris__UnknownConfigLocationTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__WebPhotoException, _p_Ferris__WebPhotoExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__SQLiteException, _p_Ferris__SQLiteExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisHALException, _p_Ferris__FerrisHALExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisStreamException, _p_Ferris__FerrisStreamExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__GPGMEInitFailed, _p_Ferris__GPGMEInitFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__DTDCreationFailed, _p_Ferris__DTDCreationFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__CurlEasyInitFailed, _p_Ferris__CurlEasyInitFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__CurlStaticInitFailed, _p_Ferris__CurlStaticInitFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisStreamLoadFailed, _p_Ferris__FerrisStreamLoadFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__GModuleOpenFailed, _p_Ferris__GModuleOpenFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisImlib2ImageLoadFailed, _p_Ferris__FerrisImlib2ImageLoadFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisGIMPImageLoadFailed, _p_Ferris__FerrisGIMPImageLoadFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__RootContextCreationFailed, _p_Ferris__RootContextCreationFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisCreateSubContextFailed, _p_Ferris__FerrisCreateSubContextFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisImageLoadFailed, _p_Ferris__FerrisImageLoadFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisPNGImageLoadFailed, _p_Ferris__FerrisPNGImageLoadFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisJPEGImageLoadFailed, _p_Ferris__FerrisJPEGImageLoadFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__XMPPacketScanFailed, _p_Ferris__XMPPacketScanFailedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__RelativeTimeParsing, _p_Ferris__RelativeTimeParsingTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__BadlyFormedTimeString, _p_Ferris__BadlyFormedTimeStringTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__NoSuchUser, _p_Ferris__NoSuchUserTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__InvalidModeString, _p_Ferris__InvalidModeStringTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__XMPBase, _p_Ferris__XMPBaseTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisNotSupportedInThisContext, _p_Ferris__FerrisNotSupportedInThisContextTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__NoSuchSubContext, _p_Ferris__NoSuchSubContextTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__CanNotReadContext, _p_Ferris__CanNotReadContextTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisNotReadableAsContext, _p_Ferris__FerrisNotReadableAsContextTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__NoOpenWithContext, _p_Ferris__NoOpenWithContextTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__getIOStreamCloseUpdatePermissionDenied, _p_Ferris__getIOStreamCloseUpdatePermissionDeniedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__XMLParseError, _p_Ferris__XMLParseErrorTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisCanNotGetScriptNameError, _p_Ferris__FerrisCanNotGetScriptNameErrorTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__QuotaStorageFull, _p_Ferris__QuotaStorageFullTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__StorageFull, _p_Ferris__StorageFullTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__ParseError, _p_Ferris__ParseErrorTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__CanNotDereferenceDanglingSoftLink, _p_Ferris__CanNotDereferenceDanglingSoftLinkTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__ProgramSpawn, _p_Ferris__ProgramSpawnTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisCanNotCreateLeafOfLeaf, _p_Ferris__FerrisCanNotCreateLeafOfLeafTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__NoSuchObject, _p_Ferris__NoSuchObjectTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__CanNotGetStream, _p_Ferris__CanNotGetStreamTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__ContentNotModified, _p_Ferris__ContentNotModifiedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__BranchFileSystem, _p_Ferris__BranchFileSystemTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisCreateSubContextNotSupported, _p_Ferris__FerrisCreateSubContextNotSupportedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisCreateAttributeNotSupported, _p_Ferris__FerrisCreateAttributeNotSupportedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__NotSupported, _p_Ferris__NotSupportedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__SyntaxError, _p_Ferris__SyntaxErrorTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FFilterSyntaxError, _p_Ferris__FFilterSyntaxErrorTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FulltextQuerySyntaxError, _p_Ferris__FulltextQuerySyntaxErrorTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__URLDecodeSyntaxError, _p_Ferris__URLDecodeSyntaxErrorTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__OpenActionIsNotDefined, _p_Ferris__OpenActionIsNotDefinedTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__FerrisOutOfMemory, _p_Ferris__FerrisOutOfMemoryTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__CreateFIFO, _p_Ferris__CreateFIFOTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__ChildNotRunning, _p_Ferris__ChildNotRunningTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__CanNotAddExternalAttribute, _p_Ferris__CanNotAddExternalAttributeTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__NoSuchAttribute, _p_Ferris__NoSuchAttributeTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__UnspoortedBlockSize, _p_Ferris__UnspoortedBlockSizeTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__BadlyFormedTime, _p_Ferris__BadlyFormedTimeTo_p_std__exception, 0, 0},  {&_swigt__p_Ferris__MalformedURL, _p_Ferris__MalformedURLTo_p_std__exception, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ios__openmode[] = {  {&_swigt__p_std__ios__openmode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__iostream[] = {  {&_swigt__p_std__iostream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__istream[] = {  {&_swigt__p_std__istream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__istringstream[] = {  {&_swigt__p_std__istringstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_Ferris__fh_context_t[] = {  {&_swigt__p_std__listT_Ferris__fh_context_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_Ferris__fh_emblem_t[] = {  {&_swigt__p_std__listT_Ferris__fh_emblem_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_Ferris__fh_sorter_t[] = {  {&_swigt__p_std__listT_Ferris__fh_sorter_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_Loki__FunctorT_bool_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t_t[] = {  {&_swigt__p_std__listT_Loki__FunctorT_bool_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_t[] = {  {&_swigt__p_std__listT_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_std__pairT_std__string_std__string_t_t[] = {  {&_swigt__p_std__listT_std__pairT_std__string_std__string_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_std__string_t[] = {  {&_swigt__p_std__listT_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_Ferris__XSDBasic_t_Ferris__fh_context_t[] = {  {&_swigt__p_std__mapT_Ferris__XSDBasic_t_Ferris__fh_context_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_int_int_t[] = {  {&_swigt__p_std__mapT_int_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_std__string_std__string_t[] = {  {&_swigt__p_std__mapT_std__string_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ostringstream[] = {  {&_swigt__p_std__ostringstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__out_of_range[] = {  {&_swigt__p_std__out_of_range, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__pairT_std__string_std__string_t[] = {  {&_swigt__p_std__pairT_std__string_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__reverse_iteratorT_Ferris__ContextIterator_t[] = {  {&_swigt__p_std__reverse_iteratorT_Ferris__ContextIterator_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t[] = {  {&_swigt__p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__setT_guint32_t[] = {  {&_swigt__p_std__setT_guint32_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__setT_std__string_t[] = {  {&_swigt__p_std__setT_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__streampos[] = {  {&_swigt__p_std__streampos, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__streamsize[] = {  {&_swigt__p_std__streamsize, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__string[] = {  {&_swigt__p_std__string, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__stringstream[] = {  {&_swigt__p_std__stringstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_int_t[] = {  {&_swigt__p_std__vectorT_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__string_t[] = {  {&_swigt__p_std__vectorT_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__wstring[] = {  {&_swigt__p_std__wstring, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_time_t[] = {  {&_swigt__p_time_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_tm[] = {  {&_swigt__p_tm, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint32_t[] = {  {&_swigt__p_uint32_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_value_type[] = {  {&_swigt__p_value_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_CompositeTrimmerT_TrimmerT_PrefixTrimmerOps_t_TrimmerT_PostfixTrimmerOps_t_t,
  _swigc__p_ContextEvent_Headers_Received_Sig_t,
  _swigc__p_Fampp__FamppDirMonitorInitFailedException,
  _swigc__p_FerrisLoki__FerrisSmallObjAllocator,
  _swigc__p_FerrisLoki__Handlable,
  _swigc__p_Ferris__AI__Agent,
  _swigc__p_Ferris__AccessDenied,
  _swigc__p_Ferris__AgentAlreadyExistsException,
  _swigc__p_Ferris__AgentException,
  _swigc__p_Ferris__AgentOnlyHandlesOneEmblemException,
  _swigc__p_Ferris__Attribute,
  _swigc__p_Ferris__AttributeAlreadyInUse,
  _swigc__p_Ferris__AttributeCollection,
  _swigc__p_Ferris__AttributeNotWritable,
  _swigc__p_Ferris__AttributeProxy,
  _swigc__p_Ferris__BackupException,
  _swigc__p_Ferris__BackupNameWouldBeTooLong,
  _swigc__p_Ferris__BadParam,
  _swigc__p_Ferris__BadSignature,
  _swigc__p_Ferris__BadlyFormedTime,
  _swigc__p_Ferris__BadlyFormedTimeString,
  _swigc__p_Ferris__BranchFileSystem,
  _swigc__p_Ferris__CacheHandlable,
  _swigc__p_Ferris__CacheManager,
  _swigc__p_Ferris__CanNotAddEmblemException,
  _swigc__p_Ferris__CanNotAddExternalAttribute,
  _swigc__p_Ferris__CanNotDelete,
  _swigc__p_Ferris__CanNotDereferenceDanglingSoftLink,
  _swigc__p_Ferris__CanNotGetStream,
  _swigc__p_Ferris__CanNotMonitorDirWithFAM,
  _swigc__p_Ferris__CanNotReadContext,
  _swigc__p_Ferris__CanNotReadContextPcctsParseFailed,
  _swigc__p_Ferris__ChildNotRunning,
  _swigc__p_Ferris__ColdEmblem,
  _swigc__p_Ferris__CompressionAlgoNotFoundException,
  _swigc__p_Ferris__CompressionException,
  _swigc__p_Ferris__ContentNotModified,
  _swigc__p_Ferris__Context,
  _swigc__p_Ferris__ContextCollection,
  _swigc__p_Ferris__ContextExists,
  _swigc__p_Ferris__ContextIterator,
  _swigc__p_Ferris__ContextSetCompare,
  _swigc__p_Ferris__CopyFailed,
  _swigc__p_Ferris__CreateFIFO,
  _swigc__p_Ferris__CreateMetaDataContext,
  _swigc__p_Ferris__CryptoBase,
  _swigc__p_Ferris__CurlEasyInitFailed,
  _swigc__p_Ferris__CurlPerformFailed,
  _swigc__p_Ferris__CurlStateError,
  _swigc__p_Ferris__CurlStaticInitFailed,
  _swigc__p_Ferris__CursorException,
  _swigc__p_Ferris__DBusConnectionException,
  _swigc__p_Ferris__DBusException,
  _swigc__p_Ferris__DTDCreationFailed,
  _swigc__p_Ferris__DVDReadException,
  _swigc__p_Ferris__Db4Exception,
  _swigc__p_Ferris__Db4KeyNotFound,
  _swigc__p_Ferris__DesktopFileKeyNotFound,
  _swigc__p_Ferris__EAIndexException,
  _swigc__p_Ferris__EA_Atom,
  _swigc__p_Ferris__EA_Atom_RDFCacheAttribute,
  _swigc__p_Ferris__EA_Atom_ReadOnly,
  _swigc__p_Ferris__EA_Atom_ReadOnly_PassedInStream,
  _swigc__p_Ferris__EA_Atom_ReadWrite,
  _swigc__p_Ferris__EA_Atom_ReadWrite_BaseT_Ferris__EA_Atom_ReadOnly_PassedInStream_t__GetIStream_PassedInStream_Func_t,
  _swigc__p_Ferris__EA_Atom_ReadWrite_Contents,
  _swigc__p_Ferris__EA_Atom_ReadWrite_OpenModeCached,
  _swigc__p_Ferris__EA_Atom_ReadWrite_PassedInStream,
  _swigc__p_Ferris__EA_Atom_ReadWrite__RWBase_t__GetIStream_Func_t,
  _swigc__p_Ferris__EA_Atom_ReadWrite__RWBase_t__IOStreamClosed_Func_t,
  _swigc__p_Ferris__EA_Atom_Static,
  _swigc__p_Ferris__Emblem,
  _swigc__p_Ferris__EmblemException,
  _swigc__p_Ferris__EmblemNotFoundException,
  _swigc__p_Ferris__Etagere,
  _swigc__p_Ferris__EtagereException,
  _swigc__p_Ferris__FCA__ConceptLattice,
  _swigc__p_Ferris__FCA__fh_conceptLattice,
  _swigc__p_Ferris__FFilterSyntaxError,
  _swigc__p_Ferris__FerrisCanNotCreateLeafOfLeaf,
  _swigc__p_Ferris__FerrisCanNotGetScriptNameError,
  _swigc__p_Ferris__FerrisCreateAttributeFailed,
  _swigc__p_Ferris__FerrisCreateAttributeNotSupported,
  _swigc__p_Ferris__FerrisCreateSubContextFailed,
  _swigc__p_Ferris__FerrisCreateSubContextNotSupported,
  _swigc__p_Ferris__FerrisCurlServerNameNotFound,
  _swigc__p_Ferris__FerrisExceptionBase,
  _swigc__p_Ferris__FerrisException_CodeState,
  _swigc__p_Ferris__FerrisGIMPImageLoadFailed,
  _swigc__p_Ferris__FerrisGLibCException,
  _swigc__p_Ferris__FerrisHALException,
  _swigc__p_Ferris__FerrisImageLoadFailed,
  _swigc__p_Ferris__FerrisImageSaveFailed,
  _swigc__p_Ferris__FerrisImlib2ImageLoadFailed,
  _swigc__p_Ferris__FerrisInternalError,
  _swigc__p_Ferris__FerrisJPEGImageLoadFailed,
  _swigc__p_Ferris__FerrisNotReadableAsContext,
  _swigc__p_Ferris__FerrisNotSupportedInThisContext,
  _swigc__p_Ferris__FerrisOutOfMemory,
  _swigc__p_Ferris__FerrisPNGImageLoadFailed,
  _swigc__p_Ferris__FerrisParentNotSetError,
  _swigc__p_Ferris__FerrisSetCWDException,
  _swigc__p_Ferris__FerrisSqlServerNameNotFound,
  _swigc__p_Ferris__FerrisStatException,
  _swigc__p_Ferris__FerrisStreamException,
  _swigc__p_Ferris__FerrisStreamLoadFailed,
  _swigc__p_Ferris__FerrisVFSExceptionBase,
  _swigc__p_Ferris__FerrisWaitTimedOut,
  _swigc__p_Ferris__Ferris_Logging_ostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_Ferris__Ferris_fstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t,
  _swigc__p_Ferris__Ferris_ififostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_Ferris__Ferris_ifstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t,
  _swigc__p_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_Ferris__Ferris_istringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t,
  _swigc__p_Ferris__Ferris_ofstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t,
  _swigc__p_Ferris__Ferris_ostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_Ferris__Ferris_ostringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t,
  _swigc__p_Ferris__Ferris_stringstreamT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t,
  _swigc__p_Ferris__FileClipboard,
  _swigc__p_Ferris__FullTextIndexException,
  _swigc__p_Ferris__FulltextQuerySyntaxError,
  _swigc__p_Ferris__GModuleOpenFailed,
  _swigc__p_Ferris__GPGMEInitFailed,
  _swigc__p_Ferris__GPhoto2,
  _swigc__p_Ferris__GdbmException,
  _swigc__p_Ferris__GenericError,
  _swigc__p_Ferris__Handlable,
  _swigc__p_Ferris__ImplicitIteratorUpdateLock,
  _swigc__p_Ferris__IndexException,
  _swigc__p_Ferris__InvalidModeString,
  _swigc__p_Ferris__InvalidSortSpecification,
  _swigc__p_Ferris__KeylistException,
  _swigc__p_Ferris__LDAPException,
  _swigc__p_Ferris__MalformedURL,
  _swigc__p_Ferris__Medallion,
  _swigc__p_Ferris__MedallionBelief,
  _swigc__p_Ferris__MedallionException,
  _swigc__p_Ferris__MutableCollectionEvents,
  _swigc__p_Ferris__NoOpenWithContext,
  _swigc__p_Ferris__NoSuchAgentException,
  _swigc__p_Ferris__NoSuchAttribute,
  _swigc__p_Ferris__NoSuchBeliefException,
  _swigc__p_Ferris__NoSuchContextClass,
  _swigc__p_Ferris__NoSuchGroup,
  _swigc__p_Ferris__NoSuchObject,
  _swigc__p_Ferris__NoSuchPersonalityException,
  _swigc__p_Ferris__NoSuchSubContext,
  _swigc__p_Ferris__NoSuchUser,
  _swigc__p_Ferris__NotSupported,
  _swigc__p_Ferris__ObjectExists,
  _swigc__p_Ferris__OpenActionIsNotDefined,
  _swigc__p_Ferris__ParseError,
  _swigc__p_Ferris__Personality,
  _swigc__p_Ferris__PreprocessedSortString,
  _swigc__p_Ferris__ProgramSpawn,
  _swigc__p_Ferris__QuotaStorageFull,
  _swigc__p_Ferris__RegexCollection,
  _swigc__p_Ferris__RelativeTimeParsing,
  _swigc__p_Ferris__RemoveFailed,
  _swigc__p_Ferris__RenameFailed,
  _swigc__p_Ferris__RootContextCreationFailed,
  _swigc__p_Ferris__RootContextFactory,
  _swigc__p_Ferris__Runner,
  _swigc__p_Ferris__SQLiteException,
  _swigc__p_Ferris__SchemaException,
  _swigc__p_Ferris__SchemaNotFoundException,
  _swigc__p_Ferris__SocketOptionsException,
  _swigc__p_Ferris__StorageFull,
  _swigc__p_Ferris__SubContextAlreadyInUse,
  _swigc__p_Ferris__SyntaxError,
  _swigc__p_Ferris__Time__Benchmark,
  _swigc__p_Ferris__Times,
  _swigc__p_Ferris__URLDecodeSyntaxError,
  _swigc__p_Ferris__UnknownBackupMode,
  _swigc__p_Ferris__UnknownConfigLocation,
  _swigc__p_Ferris__UnspoortedBlockSize,
  _swigc__p_Ferris__Util__SingleShot,
  _swigc__p_Ferris__Versioned,
  _swigc__p_Ferris__WebPhotoException,
  _swigc__p_Ferris__XMLBase,
  _swigc__p_Ferris__XMLFatalError,
  _swigc__p_Ferris__XMLParseError,
  _swigc__p_Ferris__XMPBase,
  _swigc__p_Ferris__XMPPacketScanFailed,
  _swigc__p_Ferris__dbXMLException,
  _swigc__p_Ferris__eetException,
  _swigc__p_Ferris__eetKeyNotFound,
  _swigc__p_Ferris__ferris_basic_streambuf_fourk,
  _swigc__p_Ferris__ferris_basic_streambuf_onemeg,
  _swigc__p_Ferris__ferris_basic_streambuf_quartk,
  _swigc__p_Ferris__ferris_basic_streambuf_sixteenbytes,
  _swigc__p_Ferris__ferris_basic_streambuf_sixteenk,
  _swigc__p_Ferris__ferris_basic_streambuf_virtual,
  _swigc__p_Ferris__ferris_ios,
  _swigc__p_Ferris__ferris_streambufT_char_std__char_traitsT_char_t_t,
  _swigc__p_Ferris__fh_attrcol,
  _swigc__p_Ferris__fh_attribute,
  _swigc__p_Ferris__fh_cemblem,
  _swigc__p_Ferris__fh_context,
  _swigc__p_Ferris__fh_emblem,
  _swigc__p_Ferris__fh_emblem_less,
  _swigc__p_Ferris__fh_etagere,
  _swigc__p_Ferris__fh_medallion,
  _swigc__p_Ferris__fh_medallionBelief,
  _swigc__p_Ferris__fh_runner,
  _swigc__p_Ferris__fh_sorter,
  _swigc__p_Ferris__getIOStreamCloseUpdateFailed,
  _swigc__p_Ferris__getIOStreamCloseUpdatePermissionDenied,
  _swigc__p_Ferris__giStreamPosRAII,
  _swigc__p_Ferris__tdbException,
  _swigc__p_GSpawnFlags,
  _swigc__p_GenericCloseSignal_t,
  _swigc__p_GetIOStream_Func_t,
  _swigc__p_GetIStream_Func_t,
  _swigc__p_GetIStream_PassedInStream_Func_t,
  _swigc__p_IOStreamClosed_Func_t,
  _swigc__p_Loki__AllowConversion,
  _swigc__p_Loki__AssocVectorT_void_p_sigc__connection_t,
  _swigc__p_Loki__AssocVectorT_void_p_void_p_t,
  _swigc__p_Loki__DisallowConversion,
  _swigc__p_Loki__FunctorT_Ferris__Ferris_iostreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t,
  _swigc__p_Loki__FunctorT_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_t_LOKI_TYPELIST_3_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_pF_t,
  _swigc__p_Loki__FunctorT_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t,
  _swigc__p_Loki__FunctorT_bool_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t,
  _swigc__p_Loki__FunctorT_void_LOKI_TYPELIST_1_fFerris__fh_emblem_const_RF_t,
  _swigc__p_Loki__FunctorT_void_LOKI_TYPELIST_1_fFerris__fh_runnerF_t,
  _swigc__p_Loki__FunctorT_void_LOKI_TYPELIST_4_fFerris__Context_p_std__string_const_R_Ferris__EA_Atom_p_Ferris__Ferris_istreamT_char_std__char_traitsT_char_t_tF_t,
  _swigc__p_Loki__NullPointerException,
  _swigc__p_Loki__Private__RefLinkedBase,
  _swigc__p_Loki__SmartPtrT_Ferris__AI__Agent_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  _swigc__p_Loki__SmartPtrT_Ferris__AsyncIOHandler_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  _swigc__p_Loki__SmartPtrT_Ferris__CreateMetaDataContext___Ferris__FerrisExRefCountedContext_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  _swigc__p_Loki__SmartPtrT_Ferris__EAIndex__EAIndexManagerDB4Tree_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  _swigc__p_Loki__SmartPtrT_Ferris__EAIndex__EAIndexManagerDB4_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  _swigc__p_Loki__SmartPtrT_Ferris__EAIndex__EAQuery_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  _swigc__p_Loki__SmartPtrT_Ferris__EAIndex__ForwardEAIndexInterface_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  _swigc__p_Loki__SmartPtrT_Ferris__FerrisSlaveProcess_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  _swigc__p_Loki__SmartPtrT_Ferris__Ferrisls_aggregate_data_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  _swigc__p_Loki__SmartPtrT_Ferris__Image_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  _swigc__p_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  _swigc__p_Loki__SmartPtrT_Ferris__Regex_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  _swigc__p_Loki__SmartPtrT_Ferris__Semantic__SmushSet_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  _swigc__p_Loki__SmartPtrT_Ferris__Semantic__TreeSmushing_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  _swigc__p_Loki__SmartPtrT_Ferris__Time__Benchmark_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  _swigc__p_Loki__SmartPtrT_Ferris__Times_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  _swigc__p_Loki__SmartPtrT_Ferris__XMLMsgStreamCollector_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  _swigc__p_Loki__SmartPtrT_Ferris__redlandea__SmushSet_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  _swigc__p_Loki__SmartPtrT_Ferris__redlandea__TreeSmushing_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t,
  _swigc__p_Loki__SmartPtrT_boost__regex_Loki__RefLinked_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_Loki__DefaultSPStorage_t,
  _swigc__p_Loki__SmartPtrT_char_Loki__DestructiveCopy_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_Loki__DefaultSPStorage_t,
  _swigc__p_NamingEvent_Changed,
  _swigc__p_NamingEvent_Changed_Sig_t,
  _swigc__p_NamingEvent_Created,
  _swigc__p_NamingEvent_Created_Sig_t,
  _swigc__p_NamingEvent_Deleted,
  _swigc__p_NamingEvent_Deleted_Sig_t,
  _swigc__p_NamingEvent_Exists,
  _swigc__p_NamingEvent_Exists_Sig_t,
  _swigc__p_NamingEvent_MedallionUpdated_Sig_t,
  _swigc__p_NamingEvent_Moved,
  _swigc__p_NamingEvent_Moved_Sig_t,
  _swigc__p_NamingEvent_Start_Execute,
  _swigc__p_NamingEvent_Start_Execute_Sig_t,
  _swigc__p_NamingEvent_Start_Reading_Context,
  _swigc__p_NamingEvent_Start_Reading_Context_Sig_t,
  _swigc__p_NamingEvent_Stop_Execute,
  _swigc__p_NamingEvent_Stop_Execute_Sig_t,
  _swigc__p_NamingEvent_Stop_Reading_Context,
  _swigc__p_NamingEvent_Stop_Reading_Context_Sig_t,
  _swigc__p_OnlyInCacheSignal_t,
  _swigc__p_PostfixTrimmerOps,
  _swigc__p_PrefixTrimmerOps,
  _swigc__p_RWBase_t,
  _swigc__p_Runner_AsyncIOFunctor_t,
  _swigc__p_SubContextNames_t,
  _swigc__p_TrimmerBase,
  _swigc__p_TrimmerT_PostfixTrimmerOps_t,
  _swigc__p_TrimmerT_PrefixTrimmerOps_t,
  _swigc__p_Version_t,
  _swigc__p_XSDBasic_t,
  _swigc__p__Base,
  _swigc__p__Self,
  _swigc__p___gnu_cxx__stdio_filebufT_char_std__char_traitsT_char_t_t,
  _swigc__p_char,
  _swigc__p_difference_type,
  _swigc__p_fh_insideResolve,
  _swigc__p_fh_ostream,
  _swigc__p_freelist_t,
  _swigc__p_gboolean,
  _swigc__p_gint,
  _swigc__p_guint32,
  _swigc__p_guint64,
  _swigc__p_iterator_category,
  _swigc__p_openmode,
  _swigc__p_p_char,
  _swigc__p_p_std__istringstream,
  _swigc__p_p_std__ostringstream,
  _swigc__p_p_std__stringstream,
  _swigc__p_pid_t,
  _swigc__p_pointer,
  _swigc__p_poptContext,
  _swigc__p_poptOption,
  _swigc__p_ref_count_t,
  _swigc__p_reference,
  _swigc__p_sigc__signal1T_void_FerrisLoki__Handlable_p_t,
  _swigc__p_sigc__signal1T_void_Ferris__CacheHandlable_p_t,
  _swigc__p_sigc__signal1T_void_Ferris__fh_context_t,
  _swigc__p_sigc__signal1T_void_NamingEvent_Start_Reading_Context_p_t,
  _swigc__p_sigc__signal1T_void_NamingEvent_Stop_Reading_Context_p_t,
  _swigc__p_sigc__signal2T_void_Ferris__closeSignalStream_t_R_std__streamsize_t,
  _swigc__p_sigc__signal2T_void_Ferris__fh_context_Ferris__stringset_t_const_R_t,
  _swigc__p_sigc__signal2T_void_Ferris__fh_emblem_Ferris__fh_emblem_t,
  _swigc__p_sigc__signal2T_void_Ferris__fh_etagere_Ferris__fh_emblem_t,
  _swigc__p_sigc__signal3T_void_Ferris__fh_emblem_std__string_std__string_t,
  _swigc__p_sigc__signal3T_void_NamingEvent_Changed_p_std__string_std__string_t,
  _swigc__p_sigc__signal3T_void_NamingEvent_Deleted_p_std__string_std__string_t,
  _swigc__p_sigc__signal3T_void_NamingEvent_Moved_p_std__string_std__string_t,
  _swigc__p_sigc__signal3T_void_NamingEvent_Start_Execute_p_std__string_std__string_t,
  _swigc__p_sigc__signal3T_void_NamingEvent_Stop_Execute_p_std__string_std__string_t,
  _swigc__p_sigc__signal4T_void_Ferris__fh_context_Ferris__fh_context_int_int_t,
  _swigc__p_sigc__signal4T_void_NamingEvent_Created_p_Ferris__fh_context_const_R_std__string_std__string_t,
  _swigc__p_sigc__signal4T_void_NamingEvent_Exists_p_Ferris__fh_context_const_R_std__string_std__string_t,
  _swigc__p_sigc__trackable,
  _swigc__p_std__basic_ostreamT_wchar_t_std__char_traitsT_wchar_t_t_t,
  _swigc__p_std__basic_streambufT_char_std__char_traitsT_char_t_t,
  _swigc__p_std__exception,
  _swigc__p_std__ios__openmode,
  _swigc__p_std__iostream,
  _swigc__p_std__istream,
  _swigc__p_std__istringstream,
  _swigc__p_std__listT_Ferris__fh_context_t,
  _swigc__p_std__listT_Ferris__fh_emblem_t,
  _swigc__p_std__listT_Ferris__fh_sorter_t,
  _swigc__p_std__listT_Loki__FunctorT_bool_LOKI_TYPELIST_1_fFerris__fh_context_const_RF_t_t,
  _swigc__p_std__listT_Loki__SmartPtrT_Ferris__Personality_FerrisLoki__FerrisExRefCounted_Loki__DisallowConversion_FerrisLoki__FerrisExSmartPointerChecker_FerrisLoki__FerrisExSmartPtrStorage_t_t,
  _swigc__p_std__listT_std__pairT_std__string_std__string_t_t,
  _swigc__p_std__listT_std__string_t,
  _swigc__p_std__mapT_Ferris__XSDBasic_t_Ferris__fh_context_t,
  _swigc__p_std__mapT_int_int_t,
  _swigc__p_std__mapT_std__string_std__string_t,
  _swigc__p_std__ostringstream,
  _swigc__p_std__out_of_range,
  _swigc__p_std__pairT_std__string_std__string_t,
  _swigc__p_std__reverse_iteratorT_Ferris__ContextIterator_t,
  _swigc__p_std__setT_Ferris__fh_emblem_Ferris__fh_emblem_less_t,
  _swigc__p_std__setT_guint32_t,
  _swigc__p_std__setT_std__string_t,
  _swigc__p_std__streampos,
  _swigc__p_std__streamsize,
  _swigc__p_std__string,
  _swigc__p_std__stringstream,
  _swigc__p_std__vectorT_int_t,
  _swigc__p_std__vectorT_std__string_t,
  _swigc__p_std__wstring,
  _swigc__p_time_t,
  _swigc__p_tm,
  _swigc__p_uint32_t,
  _swigc__p_value_type,
  _swigc__p_void,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_constant_info swig_constants[] = {
{0,0,0,0,0,0}
};
#ifdef __cplusplus
}
#endif
static swig_variable_info swig_variables[] = {
    { "libferrisperlc::NullTM", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_NullTM_get,&SWIGTYPE_p_tm },
    { "libferrisperlc::SCHEMA_DEFAULT_DISPLAY_WIDTH", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_SCHEMA_DEFAULT_DISPLAY_WIDTH_get,0 },
    { "libferrisperlc::SCHEMA_DEFAULT_DISPLAY_PRECISION", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_SCHEMA_DEFAULT_DISPLAY_PRECISION_get,0 },
    { "libferrisperlc::SCHEMA_JUSTIFICATION", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_SCHEMA_JUSTIFICATION_get,0 },
    { "libferrisperlc::SCHEMA_DEFAULTSORT", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_SCHEMA_DEFAULTSORT_get,0 },
    { "libferrisperlc::cursor_object_always_remake", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_cursor_object_always_remake_get,0 },
    { "libferrisperlc::cursor_object_list_size", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_cursor_object_list_size_get,0 },
    { "libferrisperlc::MAX_REF_COUNT", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_MAX_REF_COUNT_get,&SWIGTYPE_p_uint32_t },
{0,0,0,0}
};
static swig_command_info swig_commands[] = {
{"libferrisperlc::new_RefLinkedBase", _wrap_new_RefLinkedBase},
{"libferrisperlc::RefLinkedBase_Release", _wrap_RefLinkedBase_Release},
{"libferrisperlc::RefLinkedBase_Swap", _wrap_RefLinkedBase_Swap},
{"libferrisperlc::delete_RefLinkedBase", _wrap_delete_RefLinkedBase},
{"libferrisperlc::AllowConversion_Swap", _wrap_AllowConversion_Swap},
{"libferrisperlc::new_AllowConversion", _wrap_new_AllowConversion},
{"libferrisperlc::delete_AllowConversion", _wrap_delete_AllowConversion},
{"libferrisperlc::new_DisallowConversion", _wrap_new_DisallowConversion},
{"libferrisperlc::DisallowConversion_Swap", _wrap_DisallowConversion_Swap},
{"libferrisperlc::delete_DisallowConversion", _wrap_delete_DisallowConversion},
{"libferrisperlc::new_NullPointerException", _wrap_new_NullPointerException},
{"libferrisperlc::NullPointerException_what", _wrap_NullPointerException_what},
{"libferrisperlc::delete_NullPointerException", _wrap_delete_NullPointerException},
{"libferrisperlc::new_IntVector", _wrap_new_IntVector},
{"libferrisperlc::IntVector_size", _wrap_IntVector_size},
{"libferrisperlc::IntVector_empty", _wrap_IntVector_empty},
{"libferrisperlc::IntVector_clear", _wrap_IntVector_clear},
{"libferrisperlc::IntVector_push", _wrap_IntVector_push},
{"libferrisperlc::IntVector_pop", _wrap_IntVector_pop},
{"libferrisperlc::IntVector_get", _wrap_IntVector_get},
{"libferrisperlc::IntVector_set", _wrap_IntVector_set},
{"libferrisperlc::delete_IntVector", _wrap_delete_IntVector},
{"libferrisperlc::new_StringVector", _wrap_new_StringVector},
{"libferrisperlc::StringVector_size", _wrap_StringVector_size},
{"libferrisperlc::StringVector_empty", _wrap_StringVector_empty},
{"libferrisperlc::StringVector_clear", _wrap_StringVector_clear},
{"libferrisperlc::StringVector_push", _wrap_StringVector_push},
{"libferrisperlc::StringVector_pop", _wrap_StringVector_pop},
{"libferrisperlc::StringVector_get", _wrap_StringVector_get},
{"libferrisperlc::StringVector_set", _wrap_StringVector_set},
{"libferrisperlc::delete_StringVector", _wrap_delete_StringVector},
{"libferrisperlc::Handlable_private_AboutToBeDeleted", _wrap_Handlable_private_AboutToBeDeleted},
{"libferrisperlc::new_Handlable", _wrap_new_Handlable},
{"libferrisperlc::delete_Handlable", _wrap_delete_Handlable},
{"libferrisperlc::Handlable_AddRef", _wrap_Handlable_AddRef},
{"libferrisperlc::Handlable_Release", _wrap_Handlable_Release},
{"libferrisperlc::Handlable_getReferenceCount", _wrap_Handlable_getReferenceCount},
{"libferrisperlc::Handlable_getGenericCloseSig", _wrap_Handlable_getGenericCloseSig},
{"libferrisperlc::new_FerrisSmallObjAllocator", _wrap_new_FerrisSmallObjAllocator},
{"libferrisperlc::FerrisSmallObjAllocator_Allocate", _wrap_FerrisSmallObjAllocator_Allocate},
{"libferrisperlc::delete_FerrisSmallObjAllocator", _wrap_delete_FerrisSmallObjAllocator},
{"libferrisperlc::new_FerrisException_CodeState", _wrap_new_FerrisException_CodeState},
{"libferrisperlc::FerrisException_CodeState_getFileName", _wrap_FerrisException_CodeState_getFileName},
{"libferrisperlc::FerrisException_CodeState_getFunctionName", _wrap_FerrisException_CodeState_getFunctionName},
{"libferrisperlc::FerrisException_CodeState_getLineNumber", _wrap_FerrisException_CodeState_getLineNumber},
{"libferrisperlc::delete_FerrisException_CodeState", _wrap_delete_FerrisException_CodeState},
{"libferrisperlc::new_FerrisExceptionBase", _wrap_new_FerrisExceptionBase},
{"libferrisperlc::delete_FerrisExceptionBase", _wrap_delete_FerrisExceptionBase},
{"libferrisperlc::FerrisExceptionBase_whats", _wrap_FerrisExceptionBase_whats},
{"libferrisperlc::FerrisExceptionBase_what", _wrap_FerrisExceptionBase_what},
{"libferrisperlc::new_FerrisStreamException", _wrap_new_FerrisStreamException},
{"libferrisperlc::delete_FerrisStreamException", _wrap_delete_FerrisStreamException},
{"libferrisperlc::StreamThrowFromErrno", _wrap_StreamThrowFromErrno},
{"libferrisperlc::new_UnspoortedBlockSize", _wrap_new_UnspoortedBlockSize},
{"libferrisperlc::delete_UnspoortedBlockSize", _wrap_delete_UnspoortedBlockSize},
{"libferrisperlc::new_MalformedURL", _wrap_new_MalformedURL},
{"libferrisperlc::delete_MalformedURL", _wrap_delete_MalformedURL},
{"libferrisperlc::new_CreateFIFO", _wrap_new_CreateFIFO},
{"libferrisperlc::delete_CreateFIFO", _wrap_delete_CreateFIFO},
{"libferrisperlc::ferris_g_get_home_dir", _wrap_ferris_g_get_home_dir},
{"libferrisperlc::errnum_to_string", _wrap_errnum_to_string},
{"libferrisperlc::ferris_ios_maskOffFerrisOptions", _wrap_ferris_ios_maskOffFerrisOptions},
{"libferrisperlc::new_ferris_ios", _wrap_new_ferris_ios},
{"libferrisperlc::delete_ferris_ios", _wrap_delete_ferris_ios},
{"libferrisperlc::CleanupURL", _wrap_CleanupURL},
{"libferrisperlc::new_ferris_basic_streambuf_onemeg", _wrap_new_ferris_basic_streambuf_onemeg},
{"libferrisperlc::delete_ferris_basic_streambuf_onemeg", _wrap_delete_ferris_basic_streambuf_onemeg},
{"libferrisperlc::new_ferris_basic_streambuf_sixteenk", _wrap_new_ferris_basic_streambuf_sixteenk},
{"libferrisperlc::delete_ferris_basic_streambuf_sixteenk", _wrap_delete_ferris_basic_streambuf_sixteenk},
{"libferrisperlc::new_ferris_basic_streambuf_fourk", _wrap_new_ferris_basic_streambuf_fourk},
{"libferrisperlc::delete_ferris_basic_streambuf_fourk", _wrap_delete_ferris_basic_streambuf_fourk},
{"libferrisperlc::new_ferris_basic_streambuf_quartk", _wrap_new_ferris_basic_streambuf_quartk},
{"libferrisperlc::delete_ferris_basic_streambuf_quartk", _wrap_delete_ferris_basic_streambuf_quartk},
{"libferrisperlc::new_ferris_basic_streambuf_sixteenbytes", _wrap_new_ferris_basic_streambuf_sixteenbytes},
{"libferrisperlc::delete_ferris_basic_streambuf_sixteenbytes", _wrap_delete_ferris_basic_streambuf_sixteenbytes},
{"libferrisperlc::delete_ferris_basic_streambuf_virtual", _wrap_delete_ferris_basic_streambuf_virtual},
{"libferrisperlc::connectStreamBufferClosedSignal", _wrap_connectStreamBufferClosedSignal},
{"libferrisperlc::getClosedSignal", _wrap_getClosedSignal},
{"libferrisperlc::modifyFileBufferForExtendedFlags", _wrap_modifyFileBufferForExtendedFlags},
{"libferrisperlc::toint", _wrap_toint},
{"libferrisperlc::todouble", _wrap_todouble},
{"libferrisperlc::StreamToString", _wrap_StreamToString},
{"libferrisperlc::getFirstLine", _wrap_getFirstLine},
{"libferrisperlc::ends_with", _wrap_ends_with},
{"libferrisperlc::starts_with", _wrap_starts_with},
{"libferrisperlc::cmp_nocase", _wrap_cmp_nocase},
{"libferrisperlc::MakeLimitingIStream", _wrap_MakeLimitingIStream},
{"libferrisperlc::MakeProxyStream", _wrap_MakeProxyStream},
{"libferrisperlc::MakeTeeStream", _wrap_MakeTeeStream},
{"libferrisperlc::MakeTeeIOStream", _wrap_MakeTeeIOStream},
{"libferrisperlc::fcin", _wrap_fcin},
{"libferrisperlc::fcout", _wrap_fcout},
{"libferrisperlc::fcerr", _wrap_fcerr},
{"libferrisperlc::fcnull", _wrap_fcnull},
{"libferrisperlc::MakeFdIStream", _wrap_MakeFdIStream},
{"libferrisperlc::MakeFdOStream", _wrap_MakeFdOStream},
{"libferrisperlc::MakeFdIOStream", _wrap_MakeFdIOStream},
{"libferrisperlc::MakeHoleyOStream", _wrap_MakeHoleyOStream},
{"libferrisperlc::MakeMemoryIStream", _wrap_MakeMemoryIStream},
{"libferrisperlc::MakeMemoryIOStream", _wrap_MakeMemoryIOStream},
{"libferrisperlc::MakeReadOnlyIOStream", _wrap_MakeReadOnlyIOStream},
{"libferrisperlc::MakeMMapIStream", _wrap_MakeMMapIStream},
{"libferrisperlc::MakeMMapIOStream", _wrap_MakeMMapIOStream},
{"libferrisperlc::MakeFIFO", _wrap_MakeFIFO},
{"libferrisperlc::Context___deref__", _wrap_Context___deref__},
{"libferrisperlc::Context_getContextClassStatelessEANames", _wrap_Context_getContextClassStatelessEANames},
{"libferrisperlc::Context_isDir", _wrap_Context_isDir},
{"libferrisperlc::Context_getDirName", _wrap_Context_getDirName},
{"libferrisperlc::Context_getParent", _wrap_Context_getParent},
{"libferrisperlc::Context_isParentBound", _wrap_Context_isParentBound},
{"libferrisperlc::Context_getRecommendedEA", _wrap_Context_getRecommendedEA},
{"libferrisperlc::Context_getHasSubContextsGuess", _wrap_Context_getHasSubContextsGuess},
{"libferrisperlc::Context_getHaveReadDir", _wrap_Context_getHaveReadDir},
{"libferrisperlc::Context_toAttribute", _wrap_Context_toAttribute},
{"libferrisperlc::Context_getSchema", _wrap_Context_getSchema},
{"libferrisperlc::Context_getSchemaOrDefault", _wrap_Context_getSchemaOrDefault},
{"libferrisperlc::Context_begin", _wrap_Context_begin},
{"libferrisperlc::Context_end", _wrap_Context_end},
{"libferrisperlc::Context_rbegin", _wrap_Context_rbegin},
{"libferrisperlc::Context_rend", _wrap_Context_rend},
{"libferrisperlc::Context_find", _wrap_Context_find},
{"libferrisperlc::Context_monsterName", _wrap_Context_monsterName},
{"libferrisperlc::Context_getIsNativeContext", _wrap_Context_getIsNativeContext},
{"libferrisperlc::Context_setHasDynamicAttributes", _wrap_Context_setHasDynamicAttributes},
{"libferrisperlc::Context_setAttribute", _wrap_Context_setAttribute},
{"libferrisperlc::Context_getSubContextAttributesWithSameNameHaveSameSchema", _wrap_Context_getSubContextAttributesWithSameNameHaveSameSchema},
{"libferrisperlc::Context_dumpOutItems", _wrap_Context_dumpOutItems},
{"libferrisperlc::Context_getOverMountContext", _wrap_Context_getOverMountContext},
{"libferrisperlc::Context_remove", _wrap_Context_remove},
{"libferrisperlc::Context_rename", _wrap_Context_rename},
{"libferrisperlc::Context_copyTo", _wrap_Context_copyTo},
{"libferrisperlc::Context_createAttribute", _wrap_Context_createAttribute},
{"libferrisperlc::Context_acquireAttribute", _wrap_Context_acquireAttribute},
{"libferrisperlc::Context_getCreateSubContextSchema", _wrap_Context_getCreateSubContextSchema},
{"libferrisperlc::Context_createSubContext", _wrap_Context_createSubContext},
{"libferrisperlc::Context_getRelativeContext", _wrap_Context_getRelativeContext},
{"libferrisperlc::Context_getSubContextNames", _wrap_Context_getSubContextNames},
{"libferrisperlc::Context_getSubContext", _wrap_Context_getSubContext},
{"libferrisperlc::Context_priv_isSubContextBound", _wrap_Context_priv_isSubContextBound},
{"libferrisperlc::Context_isSubContextBound", _wrap_Context_isSubContextBound},
{"libferrisperlc::Context_read", _wrap_Context_read},
{"libferrisperlc::Context_guessSize", _wrap_Context_guessSize},
{"libferrisperlc::Context_hasSubContexts", _wrap_Context_hasSubContexts},
{"libferrisperlc::Context_SubContextCount", _wrap_Context_SubContextCount},
{"libferrisperlc::Context_AddRef", _wrap_Context_AddRef},
{"libferrisperlc::Context_Release", _wrap_Context_Release},
{"libferrisperlc::Context_all_attributes_have_single_ref_count", _wrap_Context_all_attributes_have_single_ref_count},
{"libferrisperlc::Context_isAttributeBound", _wrap_Context_isAttributeBound},
{"libferrisperlc::Context_getAttribute", _wrap_Context_getAttribute},
{"libferrisperlc::Context_getAttributeCount", _wrap_Context_getAttributeCount},
{"libferrisperlc::Context_getAttributeRootEmblem", _wrap_Context_getAttributeRootEmblem},
{"libferrisperlc::Context_Emit_Changed", _wrap_Context_Emit_Changed},
{"libferrisperlc::Context_Emit_Deleted", _wrap_Context_Emit_Deleted},
{"libferrisperlc::Context_Emit_Start_Execute", _wrap_Context_Emit_Start_Execute},
{"libferrisperlc::Context_Emit_Stop_Execute", _wrap_Context_Emit_Stop_Execute},
{"libferrisperlc::Context_Emit_Created", _wrap_Context_Emit_Created},
{"libferrisperlc::Context_Emit_Moved", _wrap_Context_Emit_Moved},
{"libferrisperlc::Context_Emit_Exists", _wrap_Context_Emit_Exists},
{"libferrisperlc::Context_Emit_Start_Reading_Context", _wrap_Context_Emit_Start_Reading_Context},
{"libferrisperlc::Context_Emit_Stop_Reading_Context", _wrap_Context_Emit_Stop_Reading_Context},
{"libferrisperlc::Context_getURL", _wrap_Context_getURL},
{"libferrisperlc::Context_SubCreate_file", _wrap_Context_SubCreate_file},
{"libferrisperlc::Context_dumpRefDebugData", _wrap_Context_dumpRefDebugData},
{"libferrisperlc::Context_splitPath", _wrap_Context_splitPath},
{"libferrisperlc::Context_unSplitPath", _wrap_Context_unSplitPath},
{"libferrisperlc::Context_getMimeType", _wrap_Context_getMimeType},
{"libferrisperlc::Context_getFileType", _wrap_Context_getFileType},
{"libferrisperlc::Context_getMedallion", _wrap_Context_getMedallion},
{"libferrisperlc::Context_hasMedallion", _wrap_Context_hasMedallion},
{"libferrisperlc::Context_getNamespacePrefixes", _wrap_Context_getNamespacePrefixes},
{"libferrisperlc::Context_getBranchFileSystem", _wrap_Context_getBranchFileSystem},
{"libferrisperlc::Context_getNameExtension", _wrap_Context_getNameExtension},
{"libferrisperlc::Context_getImage", _wrap_Context_getImage},
{"libferrisperlc::Context_getImageOrNULL", _wrap_Context_getImageOrNULL},
{"libferrisperlc::Context_priv_getImage", _wrap_Context_priv_getImage},
{"libferrisperlc::Context_taintImage", _wrap_Context_taintImage},
{"libferrisperlc::Context_RegisterImageEAGeneratorModule", _wrap_Context_RegisterImageEAGeneratorModule},
{"libferrisperlc::Context_UnrollRegisteredImageEAGeneratorModule", _wrap_Context_UnrollRegisteredImageEAGeneratorModule},
{"libferrisperlc::Context_isCompressedContext", _wrap_Context_isCompressedContext},
{"libferrisperlc::Context_addHandlableToBeReleasedWithContext", _wrap_Context_addHandlableToBeReleasedWithContext},
{"libferrisperlc::Context_SubCreate_dir", _wrap_Context_SubCreate_dir},
{"libferrisperlc::Context_dumpTree", _wrap_Context_dumpTree},
{"libferrisperlc::Context_getLastPartOfName", _wrap_Context_getLastPartOfName},
{"libferrisperlc::Context_appendToPath", _wrap_Context_appendToPath},
{"libferrisperlc::Context_getIStream", _wrap_Context_getIStream},
{"libferrisperlc::Context_getLocalIStream", _wrap_Context_getLocalIStream},
{"libferrisperlc::Context_getIOStream", _wrap_Context_getIOStream},
{"libferrisperlc::Context_checkOpenModeSupported", _wrap_Context_checkOpenModeSupported},
{"libferrisperlc::Context_getSupportedOpenModes", _wrap_Context_getSupportedOpenModes},
{"libferrisperlc::Context_getDirPath", _wrap_Context_getDirPath},
{"libferrisperlc::Context_getSubContextCount", _wrap_Context_getSubContextCount},
{"libferrisperlc::Context_empty", _wrap_Context_empty},
{"libferrisperlc::Context_getNamingEvent_MedallionUpdated_Sig", _wrap_Context_getNamingEvent_MedallionUpdated_Sig},
{"libferrisperlc::Context_getNamingEvent_Changed_Sig", _wrap_Context_getNamingEvent_Changed_Sig},
{"libferrisperlc::Context_getNamingEvent_Deleted_Sig", _wrap_Context_getNamingEvent_Deleted_Sig},
{"libferrisperlc::Context_getNamingEvent_Start_Execute_Sig", _wrap_Context_getNamingEvent_Start_Execute_Sig},
{"libferrisperlc::Context_getNamingEvent_Stop_Execute_Sig", _wrap_Context_getNamingEvent_Stop_Execute_Sig},
{"libferrisperlc::Context_getNamingEvent_Created_Sig", _wrap_Context_getNamingEvent_Created_Sig},
{"libferrisperlc::Context_getNamingEvent_Moved_Sig", _wrap_Context_getNamingEvent_Moved_Sig},
{"libferrisperlc::Context_getNamingEvent_Exists_Sig", _wrap_Context_getNamingEvent_Exists_Sig},
{"libferrisperlc::Context_getNamingEvent_Start_Reading_Context_Sig", _wrap_Context_getNamingEvent_Start_Reading_Context_Sig},
{"libferrisperlc::Context_getNamingEvent_Stop_Reading_Context_Sig", _wrap_Context_getNamingEvent_Stop_Reading_Context_Sig},
{"libferrisperlc::Context_getContextEvent_Headers_Received_Sig", _wrap_Context_getContextEvent_Headers_Received_Sig},
{"libferrisperlc::AttributeProxy___deref__", _wrap_AttributeProxy___deref__},
{"libferrisperlc::AttributeProxy_AddRef", _wrap_AttributeProxy_AddRef},
{"libferrisperlc::AttributeProxy_Release", _wrap_AttributeProxy_Release},
{"libferrisperlc::AttributeProxy_getIStream", _wrap_AttributeProxy_getIStream},
{"libferrisperlc::AttributeProxy_getLocalIStream", _wrap_AttributeProxy_getLocalIStream},
{"libferrisperlc::AttributeProxy_getIOStream", _wrap_AttributeProxy_getIOStream},
{"libferrisperlc::AttributeProxy_getDirName", _wrap_AttributeProxy_getDirName},
{"libferrisperlc::AttributeProxy_getDirPath", _wrap_AttributeProxy_getDirPath},
{"libferrisperlc::AttributeProxy_checkOpenModeSupported", _wrap_AttributeProxy_checkOpenModeSupported},
{"libferrisperlc::AttributeProxy_getSupportedOpenModes", _wrap_AttributeProxy_getSupportedOpenModes},
{"libferrisperlc::AttributeProxy_getLastPartOfName", _wrap_AttributeProxy_getLastPartOfName},
{"libferrisperlc::AttributeProxy_appendToPath", _wrap_AttributeProxy_appendToPath},
{"libferrisperlc::AttributeProxy_getParent", _wrap_AttributeProxy_getParent},
{"libferrisperlc::AttributeProxy_isParentBound", _wrap_AttributeProxy_isParentBound},
{"libferrisperlc::AttributeProxy_copyTo", _wrap_AttributeProxy_copyTo},
{"libferrisperlc::AttributeProxy_private_AboutToBeDeleted", _wrap_AttributeProxy_private_AboutToBeDeleted},
{"libferrisperlc::AttributeProxy_getReferenceCount", _wrap_AttributeProxy_getReferenceCount},
{"libferrisperlc::AttributeProxy_getGenericCloseSig", _wrap_AttributeProxy_getGenericCloseSig},
{"libferrisperlc::AttributeCollection___deref__", _wrap_AttributeCollection___deref__},
{"libferrisperlc::AttributeCollection_getIsNativeContext", _wrap_AttributeCollection_getIsNativeContext},
{"libferrisperlc::AttributeCollection_getAttribute", _wrap_AttributeCollection_getAttribute},
{"libferrisperlc::AttributeCollection_getAttributeNames", _wrap_AttributeCollection_getAttributeNames},
{"libferrisperlc::AttributeCollection_getAttributeCount", _wrap_AttributeCollection_getAttributeCount},
{"libferrisperlc::AttributeCollection_isAttributeBound", _wrap_AttributeCollection_isAttributeBound},
{"libferrisperlc::AttributeCollection_dumpAttributeNames", _wrap_AttributeCollection_dumpAttributeNames},
{"libferrisperlc::AttributeCollection_addAttribute", _wrap_AttributeCollection_addAttribute},
{"libferrisperlc::AttributeCollection_setAttribute", _wrap_AttributeCollection_setAttribute},
{"libferrisperlc::AttributeCollection_expandEAName", _wrap_AttributeCollection_expandEAName},
{"libferrisperlc::AttributeCollection_setNamespace", _wrap_AttributeCollection_setNamespace},
{"libferrisperlc::AttributeCollection_resolveNamespace", _wrap_AttributeCollection_resolveNamespace},
{"libferrisperlc::AttributeCollection_removeNamespace", _wrap_AttributeCollection_removeNamespace},
{"libferrisperlc::AttributeCollection_getNamespacePrefixes", _wrap_AttributeCollection_getNamespacePrefixes},
{"libferrisperlc::AttributeCollection_isStatelessAttributeBound", _wrap_AttributeCollection_isStatelessAttributeBound},
{"libferrisperlc::AttributeCollection_unsetAttribute", _wrap_AttributeCollection_unsetAttribute},
{"libferrisperlc::AttributeCollection_getMTime", _wrap_AttributeCollection_getMTime},
{"libferrisperlc::AttributeCollection_getRDFCacheMTime", _wrap_AttributeCollection_getRDFCacheMTime},
{"libferrisperlc::AttributeCollection_getVersion", _wrap_AttributeCollection_getVersion},
{"libferrisperlc::AttributeCollection_private_AboutToBeDeleted", _wrap_AttributeCollection_private_AboutToBeDeleted},
{"libferrisperlc::AttributeCollection_AddRef", _wrap_AttributeCollection_AddRef},
{"libferrisperlc::AttributeCollection_Release", _wrap_AttributeCollection_Release},
{"libferrisperlc::AttributeCollection_getReferenceCount", _wrap_AttributeCollection_getReferenceCount},
{"libferrisperlc::AttributeCollection_getGenericCloseSig", _wrap_AttributeCollection_getGenericCloseSig},
{"libferrisperlc::Runner___deref__", _wrap_Runner___deref__},
{"libferrisperlc::Runner_operator_assignment", _wrap_Runner_operator_assignment},
{"libferrisperlc::Runner_setCommandLine", _wrap_Runner_setCommandLine},
{"libferrisperlc::Runner_pushCommandLineArg", _wrap_Runner_pushCommandLineArg},
{"libferrisperlc::Runner_getArgv", _wrap_Runner_getArgv},
{"libferrisperlc::Runner_getEnvp", _wrap_Runner_getEnvp},
{"libferrisperlc::Runner_argvPushPath", _wrap_Runner_argvPushPath},
{"libferrisperlc::Runner_setSpawnFlags", _wrap_Runner_setSpawnFlags},
{"libferrisperlc::Runner_getSpawnFlags", _wrap_Runner_getSpawnFlags},
{"libferrisperlc::Runner_setWorkingDir", _wrap_Runner_setWorkingDir},
{"libferrisperlc::Runner_getStdIn", _wrap_Runner_getStdIn},
{"libferrisperlc::Runner_getStdOut", _wrap_Runner_getStdOut},
{"libferrisperlc::Runner_getStdErr", _wrap_Runner_getStdErr},
{"libferrisperlc::Runner_getStdInFd", _wrap_Runner_getStdInFd},
{"libferrisperlc::Runner_getStdOutFd", _wrap_Runner_getStdOutFd},
{"libferrisperlc::Runner_getStdErrFd", _wrap_Runner_getStdErrFd},
{"libferrisperlc::Runner_getChildProcessID", _wrap_Runner_getChildProcessID},
{"libferrisperlc::Runner_signalChild", _wrap_Runner_signalChild},
{"libferrisperlc::Runner_killChild", _wrap_Runner_killChild},
{"libferrisperlc::Runner_getExitStatus", _wrap_Runner_getExitStatus},
{"libferrisperlc::Runner_closeChildStdOut", _wrap_Runner_closeChildStdOut},
{"libferrisperlc::Runner_closeChildStdErr", _wrap_Runner_closeChildStdErr},
{"libferrisperlc::Runner_closeChildStdIn", _wrap_Runner_closeChildStdIn},
{"libferrisperlc::Runner_setConnect_ChildStdOut_To_ParentStdOut", _wrap_Runner_setConnect_ChildStdOut_To_ParentStdOut},
{"libferrisperlc::Runner_setConnect_ChildStdErr_To_ParentStdErr", _wrap_Runner_setConnect_ChildStdErr_To_ParentStdErr},
{"libferrisperlc::Runner_setExitStatus", _wrap_Runner_setExitStatus},
{"libferrisperlc::Runner_setConnectStdIn", _wrap_Runner_setConnectStdIn},
{"libferrisperlc::Runner_setWaitTimeOut", _wrap_Runner_setWaitTimeOut},
{"libferrisperlc::Runner_setInheritENV", _wrap_Runner_setInheritENV},
{"libferrisperlc::Runner_getErrorString", _wrap_Runner_getErrorString},
{"libferrisperlc::Runner___call__", _wrap_Runner___call__},
{"libferrisperlc::Runner_Run", _wrap_Runner_Run},
{"libferrisperlc::Runner_RunWithStdoutAsReadablePipe", _wrap_Runner_RunWithStdoutAsReadablePipe},
{"libferrisperlc::Runner_getDescription", _wrap_Runner_getDescription},
{"libferrisperlc::Runner_setChildSetupFunctor", _wrap_Runner_setChildSetupFunctor},
{"libferrisperlc::Runner_executeAndReturnStdOut", _wrap_Runner_executeAndReturnStdOut},
{"libferrisperlc::Runner_private_AboutToBeDeleted", _wrap_Runner_private_AboutToBeDeleted},
{"libferrisperlc::Runner_AddRef", _wrap_Runner_AddRef},
{"libferrisperlc::Runner_Release", _wrap_Runner_Release},
{"libferrisperlc::Runner_getReferenceCount", _wrap_Runner_getReferenceCount},
{"libferrisperlc::Runner_getGenericCloseSig", _wrap_Runner_getGenericCloseSig},
{"libferrisperlc::PreprocessedSortString___deref__", _wrap_PreprocessedSortString___deref__},
{"libferrisperlc::Emblem___deref__", _wrap_Emblem___deref__},
{"libferrisperlc::Emblem_getID", _wrap_Emblem_getID},
{"libferrisperlc::Emblem_getParents", _wrap_Emblem_getParents},
{"libferrisperlc::Emblem_getChildren", _wrap_Emblem_getChildren},
{"libferrisperlc::Emblem_hasChildren", _wrap_Emblem_hasChildren},
{"libferrisperlc::Emblem_forceUpdateParentsAndChildrenIDs", _wrap_Emblem_forceUpdateParentsAndChildrenIDs},
{"libferrisperlc::Emblem_getUpset", _wrap_Emblem_getUpset},
{"libferrisperlc::Emblem_getDownset", _wrap_Emblem_getDownset},
{"libferrisperlc::Emblem_getPossibleParents", _wrap_Emblem_getPossibleParents},
{"libferrisperlc::Emblem_getPossibleChildren", _wrap_Emblem_getPossibleChildren},
{"libferrisperlc::Emblem_hasParent", _wrap_Emblem_hasParent},
{"libferrisperlc::Emblem_hasChild", _wrap_Emblem_hasChild},
{"libferrisperlc::Emblem_obtainChild", _wrap_Emblem_obtainChild},
{"libferrisperlc::Emblem_obtainChild_EAOrdering", _wrap_Emblem_obtainChild_EAOrdering},
{"libferrisperlc::Emblem_findChild", _wrap_Emblem_findChild},
{"libferrisperlc::Emblem_getName", _wrap_Emblem_getName},
{"libferrisperlc::Emblem_getUniqueName", _wrap_Emblem_getUniqueName},
{"libferrisperlc::Emblem_getIconName", _wrap_Emblem_getIconName},
{"libferrisperlc::Emblem_getMenuSizedIconName", _wrap_Emblem_getMenuSizedIconName},
{"libferrisperlc::Emblem_getDescription", _wrap_Emblem_getDescription},
{"libferrisperlc::Emblem_setName", _wrap_Emblem_setName},
{"libferrisperlc::Emblem_setIconName", _wrap_Emblem_setIconName},
{"libferrisperlc::Emblem_setMenuSizedIconName", _wrap_Emblem_setMenuSizedIconName},
{"libferrisperlc::Emblem_setDescription", _wrap_Emblem_setDescription},
{"libferrisperlc::Emblem_getDigitalLatitude", _wrap_Emblem_getDigitalLatitude},
{"libferrisperlc::Emblem_getDigitalLongitude", _wrap_Emblem_getDigitalLongitude},
{"libferrisperlc::Emblem_getZoomRange", _wrap_Emblem_getZoomRange},
{"libferrisperlc::Emblem_setDigitalLatitude", _wrap_Emblem_setDigitalLatitude},
{"libferrisperlc::Emblem_setDigitalLongitude", _wrap_Emblem_setDigitalLongitude},
{"libferrisperlc::Emblem_setZoomRange", _wrap_Emblem_setZoomRange},
{"libferrisperlc::Emblem_getLimitedViewPriority", _wrap_Emblem_getLimitedViewPriority},
{"libferrisperlc::Emblem_setLimitedViewPriority", _wrap_Emblem_setLimitedViewPriority},
{"libferrisperlc::Emblem_getIconName_Changed_Sig", _wrap_Emblem_getIconName_Changed_Sig},
{"libferrisperlc::Emblem_getMenuSizedIconName_Changed_Sig", _wrap_Emblem_getMenuSizedIconName_Changed_Sig},
{"libferrisperlc::Emblem_getAddedParent_Sig", _wrap_Emblem_getAddedParent_Sig},
{"libferrisperlc::Emblem_getAddedChild_Sig", _wrap_Emblem_getAddedChild_Sig},
{"libferrisperlc::Emblem_getRemovedParent_Sig", _wrap_Emblem_getRemovedParent_Sig},
{"libferrisperlc::Emblem_getRemovedChild_Sig", _wrap_Emblem_getRemovedChild_Sig},
{"libferrisperlc::Emblem_dumpTo", _wrap_Emblem_dumpTo},
{"libferrisperlc::Emblem_isTransitiveChildOfEAOrderingRootEmblem", _wrap_Emblem_isTransitiveChildOfEAOrderingRootEmblem},
{"libferrisperlc::Emblem_forceUpdateTransitiveChildOfEAOrderingRootEmblem", _wrap_Emblem_forceUpdateTransitiveChildOfEAOrderingRootEmblem},
{"libferrisperlc::Emblem_private_AboutToBeDeleted", _wrap_Emblem_private_AboutToBeDeleted},
{"libferrisperlc::Emblem_AddRef", _wrap_Emblem_AddRef},
{"libferrisperlc::Emblem_Release", _wrap_Emblem_Release},
{"libferrisperlc::Emblem_getReferenceCount", _wrap_Emblem_getReferenceCount},
{"libferrisperlc::Emblem_getGenericCloseSig", _wrap_Emblem_getGenericCloseSig},
{"libferrisperlc::ColdEmblem___deref__", _wrap_ColdEmblem___deref__},
{"libferrisperlc::ColdEmblem_getID", _wrap_ColdEmblem_getID},
{"libferrisperlc::ColdEmblem_getParents", _wrap_ColdEmblem_getParents},
{"libferrisperlc::ColdEmblem_getChildren", _wrap_ColdEmblem_getChildren},
{"libferrisperlc::ColdEmblem_hasChildren", _wrap_ColdEmblem_hasChildren},
{"libferrisperlc::ColdEmblem_forceUpdateParentsAndChildrenIDs", _wrap_ColdEmblem_forceUpdateParentsAndChildrenIDs},
{"libferrisperlc::ColdEmblem_getUpset", _wrap_ColdEmblem_getUpset},
{"libferrisperlc::ColdEmblem_getDownset", _wrap_ColdEmblem_getDownset},
{"libferrisperlc::ColdEmblem_getPossibleParents", _wrap_ColdEmblem_getPossibleParents},
{"libferrisperlc::ColdEmblem_getPossibleChildren", _wrap_ColdEmblem_getPossibleChildren},
{"libferrisperlc::ColdEmblem_hasParent", _wrap_ColdEmblem_hasParent},
{"libferrisperlc::ColdEmblem_hasChild", _wrap_ColdEmblem_hasChild},
{"libferrisperlc::ColdEmblem_obtainChild", _wrap_ColdEmblem_obtainChild},
{"libferrisperlc::ColdEmblem_obtainChild_EAOrdering", _wrap_ColdEmblem_obtainChild_EAOrdering},
{"libferrisperlc::ColdEmblem_findChild", _wrap_ColdEmblem_findChild},
{"libferrisperlc::ColdEmblem_getName", _wrap_ColdEmblem_getName},
{"libferrisperlc::ColdEmblem_getUniqueName", _wrap_ColdEmblem_getUniqueName},
{"libferrisperlc::ColdEmblem_getIconName", _wrap_ColdEmblem_getIconName},
{"libferrisperlc::ColdEmblem_getMenuSizedIconName", _wrap_ColdEmblem_getMenuSizedIconName},
{"libferrisperlc::ColdEmblem_getDescription", _wrap_ColdEmblem_getDescription},
{"libferrisperlc::ColdEmblem_setName", _wrap_ColdEmblem_setName},
{"libferrisperlc::ColdEmblem_setIconName", _wrap_ColdEmblem_setIconName},
{"libferrisperlc::ColdEmblem_setMenuSizedIconName", _wrap_ColdEmblem_setMenuSizedIconName},
{"libferrisperlc::ColdEmblem_setDescription", _wrap_ColdEmblem_setDescription},
{"libferrisperlc::ColdEmblem_getDigitalLatitude", _wrap_ColdEmblem_getDigitalLatitude},
{"libferrisperlc::ColdEmblem_getDigitalLongitude", _wrap_ColdEmblem_getDigitalLongitude},
{"libferrisperlc::ColdEmblem_getZoomRange", _wrap_ColdEmblem_getZoomRange},
{"libferrisperlc::ColdEmblem_setDigitalLatitude", _wrap_ColdEmblem_setDigitalLatitude},
{"libferrisperlc::ColdEmblem_setDigitalLongitude", _wrap_ColdEmblem_setDigitalLongitude},
{"libferrisperlc::ColdEmblem_setZoomRange", _wrap_ColdEmblem_setZoomRange},
{"libferrisperlc::ColdEmblem_getLimitedViewPriority", _wrap_ColdEmblem_getLimitedViewPriority},
{"libferrisperlc::ColdEmblem_setLimitedViewPriority", _wrap_ColdEmblem_setLimitedViewPriority},
{"libferrisperlc::ColdEmblem_getIconName_Changed_Sig", _wrap_ColdEmblem_getIconName_Changed_Sig},
{"libferrisperlc::ColdEmblem_getMenuSizedIconName_Changed_Sig", _wrap_ColdEmblem_getMenuSizedIconName_Changed_Sig},
{"libferrisperlc::ColdEmblem_getAddedParent_Sig", _wrap_ColdEmblem_getAddedParent_Sig},
{"libferrisperlc::ColdEmblem_getAddedChild_Sig", _wrap_ColdEmblem_getAddedChild_Sig},
{"libferrisperlc::ColdEmblem_getRemovedParent_Sig", _wrap_ColdEmblem_getRemovedParent_Sig},
{"libferrisperlc::ColdEmblem_getRemovedChild_Sig", _wrap_ColdEmblem_getRemovedChild_Sig},
{"libferrisperlc::ColdEmblem_dumpTo", _wrap_ColdEmblem_dumpTo},
{"libferrisperlc::ColdEmblem_isTransitiveChildOfEAOrderingRootEmblem", _wrap_ColdEmblem_isTransitiveChildOfEAOrderingRootEmblem},
{"libferrisperlc::ColdEmblem_forceUpdateTransitiveChildOfEAOrderingRootEmblem", _wrap_ColdEmblem_forceUpdateTransitiveChildOfEAOrderingRootEmblem},
{"libferrisperlc::ColdEmblem_private_AboutToBeDeleted", _wrap_ColdEmblem_private_AboutToBeDeleted},
{"libferrisperlc::ColdEmblem_AddRef", _wrap_ColdEmblem_AddRef},
{"libferrisperlc::ColdEmblem_Release", _wrap_ColdEmblem_Release},
{"libferrisperlc::ColdEmblem_getReferenceCount", _wrap_ColdEmblem_getReferenceCount},
{"libferrisperlc::ColdEmblem_getGenericCloseSig", _wrap_ColdEmblem_getGenericCloseSig},
{"libferrisperlc::Etagere___deref__", _wrap_Etagere___deref__},
{"libferrisperlc::Etagere_sync", _wrap_Etagere_sync},
{"libferrisperlc::Etagere_getAllEmblemsWithName", _wrap_Etagere_getAllEmblemsWithName},
{"libferrisperlc::Etagere_obtainEmblemByName", _wrap_Etagere_obtainEmblemByName},
{"libferrisperlc::Etagere_getEmblemByName", _wrap_Etagere_getEmblemByName},
{"libferrisperlc::Etagere_getEmblemByUniqueName", _wrap_Etagere_getEmblemByUniqueName},
{"libferrisperlc::Etagere_getEmblemByID", _wrap_Etagere_getEmblemByID},
{"libferrisperlc::Etagere_getAllEmblems", _wrap_Etagere_getAllEmblems},
{"libferrisperlc::Etagere_getAllEmblemsUniqueName", _wrap_Etagere_getAllEmblemsUniqueName},
{"libferrisperlc::Etagere_visitAllEmblems", _wrap_Etagere_visitAllEmblems},
{"libferrisperlc::Etagere_getOntologyID", _wrap_Etagere_getOntologyID},
{"libferrisperlc::Etagere_getLowestEmblemPriorityToShow", _wrap_Etagere_getLowestEmblemPriorityToShow},
{"libferrisperlc::Etagere_setLowestEmblemPriorityToShow", _wrap_Etagere_setLowestEmblemPriorityToShow},
{"libferrisperlc::Etagere_erase", _wrap_Etagere_erase},
{"libferrisperlc::Etagere_dumpTo", _wrap_Etagere_dumpTo},
{"libferrisperlc::Etagere_createColdEmblem", _wrap_Etagere_createColdEmblem},
{"libferrisperlc::Etagere_createColdEmblem_EAOrdering", _wrap_Etagere_createColdEmblem_EAOrdering},
{"libferrisperlc::Etagere_getBasePath", _wrap_Etagere_getBasePath},
{"libferrisperlc::Etagere_getDBPath", _wrap_Etagere_getDBPath},
{"libferrisperlc::Etagere_getBoostSerializePath", _wrap_Etagere_getBoostSerializePath},
{"libferrisperlc::Etagere_getBoostSerializePathTxt", _wrap_Etagere_getBoostSerializePathTxt},
{"libferrisperlc::Etagere_getEmblemCreated_Sig", _wrap_Etagere_getEmblemCreated_Sig},
{"libferrisperlc::Etagere_getAddedChild_Sig", _wrap_Etagere_getAddedChild_Sig},
{"libferrisperlc::Etagere_getRemovedChild_Sig", _wrap_Etagere_getRemovedChild_Sig},
{"libferrisperlc::Etagere_OnOutOfProcNewEmblemNotification", _wrap_Etagere_OnOutOfProcNewEmblemNotification},
{"libferrisperlc::Etagere_private_AboutToBeDeleted", _wrap_Etagere_private_AboutToBeDeleted},
{"libferrisperlc::Etagere_AddRef", _wrap_Etagere_AddRef},
{"libferrisperlc::Etagere_Release", _wrap_Etagere_Release},
{"libferrisperlc::Etagere_getReferenceCount", _wrap_Etagere_getReferenceCount},
{"libferrisperlc::Etagere_getGenericCloseSig", _wrap_Etagere_getGenericCloseSig},
{"libferrisperlc::Medallion___deref__", _wrap_Medallion___deref__},
{"libferrisperlc::Medallion_addEmblem", _wrap_Medallion_addEmblem},
{"libferrisperlc::Medallion_retractEmblem", _wrap_Medallion_retractEmblem},
{"libferrisperlc::Medallion_removeEmblem", _wrap_Medallion_removeEmblem},
{"libferrisperlc::Medallion_hasEmblem", _wrap_Medallion_hasEmblem},
{"libferrisperlc::Medallion_hasRetractedEmblem", _wrap_Medallion_hasRetractedEmblem},
{"libferrisperlc::Medallion_ensureEmblem", _wrap_Medallion_ensureEmblem},
{"libferrisperlc::Medallion_getFuzzyBelief", _wrap_Medallion_getFuzzyBelief},
{"libferrisperlc::Medallion_getListOfPersonalitiesWhoHaveOpinion", _wrap_Medallion_getListOfPersonalitiesWhoHaveOpinion},
{"libferrisperlc::Medallion_getBelief", _wrap_Medallion_getBelief},
{"libferrisperlc::Medallion_hasBelief", _wrap_Medallion_hasBelief},
{"libferrisperlc::Medallion_sync", _wrap_Medallion_sync},
{"libferrisperlc::Medallion_getMostSpecificEmblems", _wrap_Medallion_getMostSpecificEmblems},
{"libferrisperlc::Medallion_getAllEmblems", _wrap_Medallion_getAllEmblems},
{"libferrisperlc::Medallion_reload", _wrap_Medallion_reload},
{"libferrisperlc::Medallion_getOnlyInCacheSignal", _wrap_Medallion_getOnlyInCacheSignal},
{"libferrisperlc::Medallion_AddRef", _wrap_Medallion_AddRef},
{"libferrisperlc::Medallion_Release", _wrap_Medallion_Release},
{"libferrisperlc::Medallion_private_AboutToBeDeleted", _wrap_Medallion_private_AboutToBeDeleted},
{"libferrisperlc::Medallion_getReferenceCount", _wrap_Medallion_getReferenceCount},
{"libferrisperlc::Medallion_getGenericCloseSig", _wrap_Medallion_getGenericCloseSig},
{"libferrisperlc::MedallionBelief___deref__", _wrap_MedallionBelief___deref__},
{"libferrisperlc::MedallionBelief_getMedallion", _wrap_MedallionBelief_getMedallion},
{"libferrisperlc::MedallionBelief_getEmblem", _wrap_MedallionBelief_getEmblem},
{"libferrisperlc::MedallionBelief_getPersonality", _wrap_MedallionBelief_getPersonality},
{"libferrisperlc::MedallionBelief_getTimes", _wrap_MedallionBelief_getTimes},
{"libferrisperlc::MedallionBelief_getSureness", _wrap_MedallionBelief_getSureness},
{"libferrisperlc::MedallionBelief_clampJudgementSureness", _wrap_MedallionBelief_clampJudgementSureness},
{"libferrisperlc::MedallionBelief_private_AboutToBeDeleted", _wrap_MedallionBelief_private_AboutToBeDeleted},
{"libferrisperlc::MedallionBelief_AddRef", _wrap_MedallionBelief_AddRef},
{"libferrisperlc::MedallionBelief_Release", _wrap_MedallionBelief_Release},
{"libferrisperlc::MedallionBelief_getReferenceCount", _wrap_MedallionBelief_getReferenceCount},
{"libferrisperlc::MedallionBelief_getGenericCloseSig", _wrap_MedallionBelief_getGenericCloseSig},
{"libferrisperlc::ConceptLattice___deref__", _wrap_ConceptLattice___deref__},
{"libferrisperlc::new_RegexCollection", _wrap_new_RegexCollection},
{"libferrisperlc::delete_RegexCollection", _wrap_delete_RegexCollection},
{"libferrisperlc::RegexCollection_append", _wrap_RegexCollection_append},
{"libferrisperlc::new_FerrisVFSExceptionBase", _wrap_new_FerrisVFSExceptionBase},
{"libferrisperlc::delete_FerrisVFSExceptionBase", _wrap_delete_FerrisVFSExceptionBase},
{"libferrisperlc::FerrisVFSExceptionBase_whats", _wrap_FerrisVFSExceptionBase_whats},
{"libferrisperlc::new_FerrisGLibCException", _wrap_new_FerrisGLibCException},
{"libferrisperlc::new_FerrisStatException", _wrap_new_FerrisStatException},
{"libferrisperlc::new_FerrisSetCWDException", _wrap_new_FerrisSetCWDException},
{"libferrisperlc::new_CanNotGetStream", _wrap_new_CanNotGetStream},
{"libferrisperlc::new_NotSupported", _wrap_new_NotSupported},
{"libferrisperlc::new_FerrisNotSupportedInThisContext", _wrap_new_FerrisNotSupportedInThisContext},
{"libferrisperlc::new_RootContextCreationFailed", _wrap_new_RootContextCreationFailed},
{"libferrisperlc::new_CanNotDelete", _wrap_new_CanNotDelete},
{"libferrisperlc::new_NoSuchObject", _wrap_new_NoSuchObject},
{"libferrisperlc::new_NoSuchUser", _wrap_new_NoSuchUser},
{"libferrisperlc::new_NoSuchGroup", _wrap_new_NoSuchGroup},
{"libferrisperlc::new_ObjectExists", _wrap_new_ObjectExists},
{"libferrisperlc::new_ContextExists", _wrap_new_ContextExists},
{"libferrisperlc::new_CopyFailed", _wrap_new_CopyFailed},
{"libferrisperlc::new_RemoveFailed", _wrap_new_RemoveFailed},
{"libferrisperlc::new_AttributeNotWritable", _wrap_new_AttributeNotWritable},
{"libferrisperlc::new_SubContextAlreadyInUse", _wrap_new_SubContextAlreadyInUse},
{"libferrisperlc::new_AttributeAlreadyInUse", _wrap_new_AttributeAlreadyInUse},
{"libferrisperlc::new_FerrisCreateSubContextFailed", _wrap_new_FerrisCreateSubContextFailed},
{"libferrisperlc::new_FerrisCreateSubContextNotSupported", _wrap_new_FerrisCreateSubContextNotSupported},
{"libferrisperlc::new_FerrisCreateAttributeFailed", _wrap_new_FerrisCreateAttributeFailed},
{"libferrisperlc::new_FerrisCreateAttributeNotSupported", _wrap_new_FerrisCreateAttributeNotSupported},
{"libferrisperlc::new_NoSuchSubContext", _wrap_new_NoSuchSubContext},
{"libferrisperlc::new_NoSuchAttribute", _wrap_new_NoSuchAttribute},
{"libferrisperlc::new_NoSuchContextClass", _wrap_new_NoSuchContextClass},
{"libferrisperlc::new_CanNotReadContext", _wrap_new_CanNotReadContext},
{"libferrisperlc::new_CanNotReadContextPcctsParseFailed", _wrap_new_CanNotReadContextPcctsParseFailed},
{"libferrisperlc::delete_CanNotReadContextPcctsParseFailed", _wrap_delete_CanNotReadContextPcctsParseFailed},
{"libferrisperlc::CanNotReadContextPcctsParseFailed_getSyntaxErrorList", _wrap_CanNotReadContextPcctsParseFailed_getSyntaxErrorList},
{"libferrisperlc::new_CanNotDereferenceDanglingSoftLink", _wrap_new_CanNotDereferenceDanglingSoftLink},
{"libferrisperlc::new_CanNotMonitorDirWithFAM", _wrap_new_CanNotMonitorDirWithFAM},
{"libferrisperlc::new_FerrisNotReadableAsContext", _wrap_new_FerrisNotReadableAsContext},
{"libferrisperlc::new_FerrisImageSaveFailed", _wrap_new_FerrisImageSaveFailed},
{"libferrisperlc::new_FerrisImageLoadFailed", _wrap_new_FerrisImageLoadFailed},
{"libferrisperlc::new_FerrisPNGImageLoadFailed", _wrap_new_FerrisPNGImageLoadFailed},
{"libferrisperlc::new_FerrisJPEGImageLoadFailed", _wrap_new_FerrisJPEGImageLoadFailed},
{"libferrisperlc::new_FerrisGIMPImageLoadFailed", _wrap_new_FerrisGIMPImageLoadFailed},
{"libferrisperlc::new_FerrisImlib2ImageLoadFailed", _wrap_new_FerrisImlib2ImageLoadFailed},
{"libferrisperlc::new_FerrisWaitTimedOut", _wrap_new_FerrisWaitTimedOut},
{"libferrisperlc::new_FerrisSqlServerNameNotFound", _wrap_new_FerrisSqlServerNameNotFound},
{"libferrisperlc::new_GModuleOpenFailed", _wrap_new_GModuleOpenFailed},
{"libferrisperlc::new_FerrisStreamLoadFailed", _wrap_new_FerrisStreamLoadFailed},
{"libferrisperlc::new_FerrisCanNotCreateLeafOfLeaf", _wrap_new_FerrisCanNotCreateLeafOfLeaf},
{"libferrisperlc::new_FerrisOutOfMemory", _wrap_new_FerrisOutOfMemory},
{"libferrisperlc::new_CanNotAddExternalAttribute", _wrap_new_CanNotAddExternalAttribute},
{"libferrisperlc::new_CurlStaticInitFailed", _wrap_new_CurlStaticInitFailed},
{"libferrisperlc::new_CurlEasyInitFailed", _wrap_new_CurlEasyInitFailed},
{"libferrisperlc::CurlPerformFailed_getResultCode", _wrap_CurlPerformFailed_getResultCode},
{"libferrisperlc::new_CurlPerformFailed", _wrap_new_CurlPerformFailed},
{"libferrisperlc::new_CurlStateError", _wrap_new_CurlStateError},
{"libferrisperlc::new_FerrisCurlServerNameNotFound", _wrap_new_FerrisCurlServerNameNotFound},
{"libferrisperlc::new_getIOStreamCloseUpdateFailed", _wrap_new_getIOStreamCloseUpdateFailed},
{"libferrisperlc::new_getIOStreamCloseUpdatePermissionDenied", _wrap_new_getIOStreamCloseUpdatePermissionDenied},
{"libferrisperlc::new_DTDCreationFailed", _wrap_new_DTDCreationFailed},
{"libferrisperlc::new_UnknownConfigLocation", _wrap_new_UnknownConfigLocation},
{"libferrisperlc::new_RenameFailed", _wrap_new_RenameFailed},
{"libferrisperlc::new_AccessDenied", _wrap_new_AccessDenied},
{"libferrisperlc::new_GenericError", _wrap_new_GenericError},
{"libferrisperlc::new_BadlyFormedTime", _wrap_new_BadlyFormedTime},
{"libferrisperlc::new_BadlyFormedTimeString", _wrap_new_BadlyFormedTimeString},
{"libferrisperlc::new_SocketOptionsException", _wrap_new_SocketOptionsException},
{"libferrisperlc::new_BackupException", _wrap_new_BackupException},
{"libferrisperlc::new_UnknownBackupMode", _wrap_new_UnknownBackupMode},
{"libferrisperlc::new_BackupNameWouldBeTooLong", _wrap_new_BackupNameWouldBeTooLong},
{"libferrisperlc::new_DVDReadException", _wrap_new_DVDReadException},
{"libferrisperlc::new_StorageFull", _wrap_new_StorageFull},
{"libferrisperlc::new_QuotaStorageFull", _wrap_new_QuotaStorageFull},
{"libferrisperlc::new_FileClipboard", _wrap_new_FileClipboard},
{"libferrisperlc::new_CursorException", _wrap_new_CursorException},
{"libferrisperlc::new_ParseError", _wrap_new_ParseError},
{"libferrisperlc::new_ProgramSpawn", _wrap_new_ProgramSpawn},
{"libferrisperlc::new_Db4Exception", _wrap_new_Db4Exception},
{"libferrisperlc::Db4Exception_get_errno", _wrap_Db4Exception_get_errno},
{"libferrisperlc::new_eetException", _wrap_new_eetException},
{"libferrisperlc::new_GdbmException", _wrap_new_GdbmException},
{"libferrisperlc::new_tdbException", _wrap_new_tdbException},
{"libferrisperlc::new_Db4KeyNotFound", _wrap_new_Db4KeyNotFound},
{"libferrisperlc::new_eetKeyNotFound", _wrap_new_eetKeyNotFound},
{"libferrisperlc::new_InvalidSortSpecification", _wrap_new_InvalidSortSpecification},
{"libferrisperlc::new_ContentNotModified", _wrap_new_ContentNotModified},
{"libferrisperlc::new_ChildNotRunning", _wrap_new_ChildNotRunning},
{"libferrisperlc::new_InvalidModeString", _wrap_new_InvalidModeString},
{"libferrisperlc::new_LDAPException", _wrap_new_LDAPException},
{"libferrisperlc::new_CompressionException", _wrap_new_CompressionException},
{"libferrisperlc::new_CompressionAlgoNotFoundException", _wrap_new_CompressionAlgoNotFoundException},
{"libferrisperlc::new_IndexException", _wrap_new_IndexException},
{"libferrisperlc::new_FullTextIndexException", _wrap_new_FullTextIndexException},
{"libferrisperlc::new_EAIndexException", _wrap_new_EAIndexException},
{"libferrisperlc::new_BadParam", _wrap_new_BadParam},
{"libferrisperlc::new_SchemaException", _wrap_new_SchemaException},
{"libferrisperlc::new_SchemaNotFoundException", _wrap_new_SchemaNotFoundException},
{"libferrisperlc::new_MedallionException", _wrap_new_MedallionException},
{"libferrisperlc::new_EtagereException", _wrap_new_EtagereException},
{"libferrisperlc::new_EmblemException", _wrap_new_EmblemException},
{"libferrisperlc::new_EmblemNotFoundException", _wrap_new_EmblemNotFoundException},
{"libferrisperlc::new_CanNotAddEmblemException", _wrap_new_CanNotAddEmblemException},
{"libferrisperlc::new_NoSuchPersonalityException", _wrap_new_NoSuchPersonalityException},
{"libferrisperlc::new_NoSuchBeliefException", _wrap_new_NoSuchBeliefException},
{"libferrisperlc::new_AgentException", _wrap_new_AgentException},
{"libferrisperlc::new_AgentAlreadyExistsException", _wrap_new_AgentAlreadyExistsException},
{"libferrisperlc::new_NoSuchAgentException", _wrap_new_NoSuchAgentException},
{"libferrisperlc::new_AgentOnlyHandlesOneEmblemException", _wrap_new_AgentOnlyHandlesOneEmblemException},
{"libferrisperlc::new_XMLBase", _wrap_new_XMLBase},
{"libferrisperlc::new_XMLParseError", _wrap_new_XMLParseError},
{"libferrisperlc::new_XMLFatalError", _wrap_new_XMLFatalError},
{"libferrisperlc::new_dbXMLException", _wrap_new_dbXMLException},
{"libferrisperlc::new_BranchFileSystem", _wrap_new_BranchFileSystem},
{"libferrisperlc::new_RelativeTimeParsing", _wrap_new_RelativeTimeParsing},
{"libferrisperlc::new_CryptoBase", _wrap_new_CryptoBase},
{"libferrisperlc::new_GPGMEInitFailed", _wrap_new_GPGMEInitFailed},
{"libferrisperlc::new_BadSignature", _wrap_new_BadSignature},
{"libferrisperlc::new_KeylistException", _wrap_new_KeylistException},
{"libferrisperlc::new_XMPBase", _wrap_new_XMPBase},
{"libferrisperlc::new_XMPPacketScanFailed", _wrap_new_XMPPacketScanFailed},
{"libferrisperlc::new_GPhoto2", _wrap_new_GPhoto2},
{"libferrisperlc::new_NoOpenWithContext", _wrap_new_NoOpenWithContext},
{"libferrisperlc::new_OpenActionIsNotDefined", _wrap_new_OpenActionIsNotDefined},
{"libferrisperlc::new_DBusException", _wrap_new_DBusException},
{"libferrisperlc::new_DBusConnectionException", _wrap_new_DBusConnectionException},
{"libferrisperlc::new_WebPhotoException", _wrap_new_WebPhotoException},
{"libferrisperlc::new_SQLiteException", _wrap_new_SQLiteException},
{"libferrisperlc::new_FerrisHALException", _wrap_new_FerrisHALException},
{"libferrisperlc::new_SyntaxError", _wrap_new_SyntaxError},
{"libferrisperlc::new_FFilterSyntaxError", _wrap_new_FFilterSyntaxError},
{"libferrisperlc::delete_FFilterSyntaxError", _wrap_delete_FFilterSyntaxError},
{"libferrisperlc::FFilterSyntaxError_whats", _wrap_FFilterSyntaxError_whats},
{"libferrisperlc::new_FulltextQuerySyntaxError", _wrap_new_FulltextQuerySyntaxError},
{"libferrisperlc::new_URLDecodeSyntaxError", _wrap_new_URLDecodeSyntaxError},
{"libferrisperlc::new_FerrisInternalError", _wrap_new_FerrisInternalError},
{"libferrisperlc::new_FerrisParentNotSetError", _wrap_new_FerrisParentNotSetError},
{"libferrisperlc::new_FerrisCanNotGetScriptNameError", _wrap_new_FerrisCanNotGetScriptNameError},
{"libferrisperlc::ThrowFromErrno", _wrap_ThrowFromErrno},
{"libferrisperlc::CacheHandlable_getOnlyInCacheSignal", _wrap_CacheHandlable_getOnlyInCacheSignal},
{"libferrisperlc::new_CacheHandlable", _wrap_new_CacheHandlable},
{"libferrisperlc::CacheHandlable_AddRef", _wrap_CacheHandlable_AddRef},
{"libferrisperlc::CacheHandlable_Release", _wrap_CacheHandlable_Release},
{"libferrisperlc::CacheHandlable_sync", _wrap_CacheHandlable_sync},
{"libferrisperlc::new_Versioned", _wrap_new_Versioned},
{"libferrisperlc::Versioned_getVersion", _wrap_Versioned_getVersion},
{"libferrisperlc::AdjustForOpenMode_Opening", _wrap_AdjustForOpenMode_Opening},
{"libferrisperlc::AdjustForOpenMode_Closing", _wrap_AdjustForOpenMode_Closing},
{"libferrisperlc::Attribute_getLastPartOfName", _wrap_Attribute_getLastPartOfName},
{"libferrisperlc::Attribute_appendToPath", _wrap_Attribute_appendToPath},
{"libferrisperlc::new_Attribute", _wrap_new_Attribute},
{"libferrisperlc::delete_Attribute", _wrap_delete_Attribute},
{"libferrisperlc::Attribute_getIStream", _wrap_Attribute_getIStream},
{"libferrisperlc::Attribute_getLocalIStream", _wrap_Attribute_getLocalIStream},
{"libferrisperlc::Attribute_getIOStream", _wrap_Attribute_getIOStream},
{"libferrisperlc::Attribute_checkOpenModeSupported", _wrap_Attribute_checkOpenModeSupported},
{"libferrisperlc::Attribute_getSupportedOpenModes", _wrap_Attribute_getSupportedOpenModes},
{"libferrisperlc::Attribute_getParent", _wrap_Attribute_getParent},
{"libferrisperlc::Attribute_isParentBound", _wrap_Attribute_isParentBound},
{"libferrisperlc::Attribute_getDirName", _wrap_Attribute_getDirName},
{"libferrisperlc::Attribute_getDirPath", _wrap_Attribute_getDirPath},
{"libferrisperlc::Attribute_copyTo", _wrap_Attribute_copyTo},
{"libferrisperlc::delete_EA_Atom", _wrap_delete_EA_Atom},
{"libferrisperlc::EA_Atom_getIStream", _wrap_EA_Atom_getIStream},
{"libferrisperlc::EA_Atom_getIOStream", _wrap_EA_Atom_getIOStream},
{"libferrisperlc::EA_Atom_checkOpenModeSupported", _wrap_EA_Atom_checkOpenModeSupported},
{"libferrisperlc::EA_Atom_getSupportedOpenModes", _wrap_EA_Atom_getSupportedOpenModes},
{"libferrisperlc::EA_Atom_havePassedInSteamRead", _wrap_EA_Atom_havePassedInSteamRead},
{"libferrisperlc::EA_Atom_ReadOnly_getIStream", _wrap_EA_Atom_ReadOnly_getIStream},
{"libferrisperlc::EA_Atom_ReadOnly_PassedInStream_getIStream", _wrap_EA_Atom_ReadOnly_PassedInStream_getIStream},
{"libferrisperlc::EA_Atom_ReadOnly_PassedInStream_havePassedInSteamRead", _wrap_EA_Atom_ReadOnly_PassedInStream_havePassedInSteamRead},
{"libferrisperlc::new_EA_Atom_ReadWrite", _wrap_new_EA_Atom_ReadWrite},
{"libferrisperlc::EA_Atom_ReadWrite_priv_getIOStream", _wrap_EA_Atom_ReadWrite_priv_getIOStream},
{"libferrisperlc::EA_Atom_ReadWrite_getIOStream", _wrap_EA_Atom_ReadWrite_getIOStream},
{"libferrisperlc::new_EA_Atom_ReadWrite_PassedInStream", _wrap_new_EA_Atom_ReadWrite_PassedInStream},
{"libferrisperlc::EA_Atom_ReadWrite_PassedInStream_priv_getIOStream", _wrap_EA_Atom_ReadWrite_PassedInStream_priv_getIOStream},
{"libferrisperlc::new_EA_Atom_ReadWrite_OpenModeCached", _wrap_new_EA_Atom_ReadWrite_OpenModeCached},
{"libferrisperlc::EA_Atom_ReadWrite_OpenModeCached_getOpenMode", _wrap_EA_Atom_ReadWrite_OpenModeCached_getOpenMode},
{"libferrisperlc::EA_Atom_ReadWrite_OpenModeCached_getIStream", _wrap_EA_Atom_ReadWrite_OpenModeCached_getIStream},
{"libferrisperlc::EA_Atom_ReadWrite_OpenModeCached_getIOStream", _wrap_EA_Atom_ReadWrite_OpenModeCached_getIOStream},
{"libferrisperlc::new_EA_Atom_ReadWrite_Contents", _wrap_new_EA_Atom_ReadWrite_Contents},
{"libferrisperlc::EA_Atom_ReadWrite_Contents_getIOStream", _wrap_EA_Atom_ReadWrite_Contents_getIOStream},
{"libferrisperlc::EA_Atom_ReadWrite_Contents_nullclosed", _wrap_EA_Atom_ReadWrite_Contents_nullclosed},
{"libferrisperlc::EA_Atom_Static_getIStream", _wrap_EA_Atom_Static_getIStream},
{"libferrisperlc::EA_Atom_RDFCacheAttribute_getIStream", _wrap_EA_Atom_RDFCacheAttribute_getIStream},
{"libferrisperlc::EA_Atom_RDFCacheAttribute_getIOStream", _wrap_EA_Atom_RDFCacheAttribute_getIOStream},
{"libferrisperlc::EA_Atom_RDFCacheAttribute_getSupportedOpenModes", _wrap_EA_Atom_RDFCacheAttribute_getSupportedOpenModes},
{"libferrisperlc::remove_prefix", _wrap_remove_prefix},
{"libferrisperlc::remove_postfix", _wrap_remove_postfix},
{"libferrisperlc::tostr", _wrap_tostr},
{"libferrisperlc::split", _wrap_split},
{"libferrisperlc::toupperstring", _wrap_toupperstring},
{"libferrisperlc::tolowerstring", _wrap_tolowerstring},
{"libferrisperlc::attemptToAbsoluteURL", _wrap_attemptToAbsoluteURL},
{"libferrisperlc::__lshift__", _wrap___lshift__},
{"libferrisperlc::getline", _wrap_getline},
{"libferrisperlc::wstring_to_utf8", _wrap_wstring_to_utf8},
{"libferrisperlc::utf8_to_wstring", _wrap_utf8_to_wstring},
{"libferrisperlc::iso8859_to_utf8", _wrap_iso8859_to_utf8},
{"libferrisperlc::convert_url_to_utf8", _wrap_convert_url_to_utf8},
{"libferrisperlc::convert_basename_to_utf8", _wrap_convert_basename_to_utf8},
{"libferrisperlc::URLDecode", _wrap_URLDecode},
{"libferrisperlc::EscapeStringAsRegex", _wrap_EscapeStringAsRegex},
{"libferrisperlc::replace_all", _wrap_replace_all},
{"libferrisperlc::convertByteString", _wrap_convertByteString},
{"libferrisperlc::ParseKeyValueString", _wrap_ParseKeyValueString},
{"libferrisperlc::CreateKeyValueString", _wrap_CreateKeyValueString},
{"libferrisperlc::parseSeperatedList", _wrap_parseSeperatedList},
{"libferrisperlc::createSeperatedList", _wrap_createSeperatedList},
{"libferrisperlc::parseCommaSeperatedList", _wrap_parseCommaSeperatedList},
{"libferrisperlc::createCommaSeperatedList", _wrap_createCommaSeperatedList},
{"libferrisperlc::parseNullSeperatedList", _wrap_parseNullSeperatedList},
{"libferrisperlc::createNullSeperatedList", _wrap_createNullSeperatedList},
{"libferrisperlc::makeUUID", _wrap_makeUUID},
{"libferrisperlc::__add__", _wrap___add__},
{"libferrisperlc::toTime", _wrap_toTime},
{"libferrisperlc::toXMLDateTime", _wrap_toXMLDateTime},
{"libferrisperlc::ParseTimeString", _wrap_ParseTimeString},
{"libferrisperlc::ParseSimpleIntervalString", _wrap_ParseSimpleIntervalString},
{"libferrisperlc::FreshenTime", _wrap_FreshenTime},
{"libferrisperlc::getTime", _wrap_getTime},
{"libferrisperlc::Sleep", _wrap_Sleep},
{"libferrisperlc::setDefaultTimeFormat", _wrap_setDefaultTimeFormat},
{"libferrisperlc::getDefaultTimeFormat", _wrap_getDefaultTimeFormat},
{"libferrisperlc::toTimeString", _wrap_toTimeString},
{"libferrisperlc::toHMSString", _wrap_toHMSString},
{"libferrisperlc::ParseRelativeTimeString", _wrap_ParseRelativeTimeString},
{"libferrisperlc::new_Benchmark", _wrap_new_Benchmark},
{"libferrisperlc::delete_Benchmark", _wrap_delete_Benchmark},
{"libferrisperlc::Benchmark_start", _wrap_Benchmark_start},
{"libferrisperlc::Benchmark_stop", _wrap_Benchmark_stop},
{"libferrisperlc::Benchmark_print", _wrap_Benchmark_print},
{"libferrisperlc::Benchmark_getElapsedTime", _wrap_Benchmark_getElapsedTime},
{"libferrisperlc::Benchmark_setOutputStream", _wrap_Benchmark_setOutputStream},
{"libferrisperlc::pread", _wrap_pread},
{"libferrisperlc::preadio", _wrap_preadio},
{"libferrisperlc::readline", _wrap_readline},
{"libferrisperlc::pwrite", _wrap_pwrite},
{"libferrisperlc::ferriswrite", _wrap_ferriswrite},
{"libferrisperlc::fsync", _wrap_fsync},
{"libferrisperlc::tellgi", _wrap_tellgi},
{"libferrisperlc::tellgio", _wrap_tellgio},
{"libferrisperlc::tellp", _wrap_tellp},
{"libferrisperlc::seekgio", _wrap_seekgio},
{"libferrisperlc::seekp", _wrap_seekp},
{"libferrisperlc::goodi", _wrap_goodi},
{"libferrisperlc::goodio", _wrap_goodio},
{"libferrisperlc::eofi", _wrap_eofi},
{"libferrisperlc::eofio", _wrap_eofio},
{"libferrisperlc::get_ios_in", _wrap_get_ios_in},
{"libferrisperlc::get_ios_out", _wrap_get_ios_out},
{"libferrisperlc::get_ios_trunc", _wrap_get_ios_trunc},
{"libferrisperlc::get_ios_ate", _wrap_get_ios_ate},
{"libferrisperlc::get_ios_app", _wrap_get_ios_app},
{"libferrisperlc::get_ios_beg", _wrap_get_ios_beg},
{"libferrisperlc::get_ios_cur", _wrap_get_ios_cur},
{"libferrisperlc::get_ios_end", _wrap_get_ios_end},
{"libferrisperlc::fireCloseSig", _wrap_fireCloseSig},
{"libferrisperlc::getAgentNames", _wrap_getAgentNames},
{"libferrisperlc::getAgent", _wrap_getAgent},
{"libferrisperlc::getCompleteAgent", _wrap_getCompleteAgent},
{"libferrisperlc::eraseAgent", _wrap_eraseAgent},
{"libferrisperlc::getBinaryAgentImplemenationNames", _wrap_getBinaryAgentImplemenationNames},
{"libferrisperlc::createBinaryAgent", _wrap_createBinaryAgent},
{"libferrisperlc::Agent_getUUID", _wrap_Agent_getUUID},
{"libferrisperlc::Agent_getName", _wrap_Agent_getName},
{"libferrisperlc::Agent_setName", _wrap_Agent_setName},
{"libferrisperlc::Agent_getEmblem", _wrap_Agent_getEmblem},
{"libferrisperlc::Agent_setEmblem", _wrap_Agent_setEmblem},
{"libferrisperlc::Agent_allowsManyEmblems", _wrap_Agent_allowsManyEmblems},
{"libferrisperlc::Agent_getEmblems", _wrap_Agent_getEmblems},
{"libferrisperlc::Agent_setEmblems", _wrap_Agent_setEmblems},
{"libferrisperlc::Agent_getPersonality", _wrap_Agent_getPersonality},
{"libferrisperlc::Agent_setPersonality", _wrap_Agent_setPersonality},
{"libferrisperlc::Agent_getAgentImplemenationName", _wrap_Agent_getAgentImplemenationName},
{"libferrisperlc::Agent_setAgentImplemenationName", _wrap_Agent_setAgentImplemenationName},
{"libferrisperlc::Agent_getStateDir", _wrap_Agent_getStateDir},
{"libferrisperlc::Agent_setStateDir", _wrap_Agent_setStateDir},
{"libferrisperlc::Agent_getAlternateImplementationNames", _wrap_Agent_getAlternateImplementationNames},
{"libferrisperlc::Agent_addTrainingExample", _wrap_Agent_addTrainingExample},
{"libferrisperlc::Agent_train", _wrap_Agent_train},
{"libferrisperlc::Agent_classify", _wrap_Agent_classify},
{"libferrisperlc::fh_emblem_less___call__", _wrap_fh_emblem_less___call__},
{"libferrisperlc::contains", _wrap_contains},
{"libferrisperlc::setSkipLoadingEmblems", _wrap_setSkipLoadingEmblems},
{"libferrisperlc::link", _wrap_link},
{"libferrisperlc::unlink", _wrap_unlink},
{"libferrisperlc::UseGetNextID", _wrap_UseGetNextID},
{"libferrisperlc::UseGetNextID_EAOrdering", _wrap_UseGetNextID_EAOrdering},
{"libferrisperlc::setDefaultEtagere", _wrap_setDefaultEtagere},
{"libferrisperlc::getEtagere", _wrap_getEtagere},
{"libferrisperlc::makeEtagere", _wrap_makeEtagere},
{"libferrisperlc::new_Times", _wrap_new_Times},
{"libferrisperlc::Times_setATime", _wrap_Times_setATime},
{"libferrisperlc::Times_setMTime", _wrap_Times_setMTime},
{"libferrisperlc::Times_touchATime", _wrap_Times_touchATime},
{"libferrisperlc::Times_touchMTime", _wrap_Times_touchMTime},
{"libferrisperlc::Times_getATime", _wrap_Times_getATime},
{"libferrisperlc::Times_getMTime", _wrap_Times_getMTime},
{"libferrisperlc::emblemListToEAQuery", _wrap_emblemListToEAQuery},
{"libferrisperlc::DRangeToKiloMeters", _wrap_DRangeToKiloMeters},
{"libferrisperlc::KiloMetersToDRange", _wrap_KiloMetersToDRange},
{"libferrisperlc::getEmblemsNear", _wrap_getEmblemsNear},
{"libferrisperlc::delete_Personality", _wrap_delete_Personality},
{"libferrisperlc::Personality_getName", _wrap_Personality_getName},
{"libferrisperlc::Personality_getID", _wrap_Personality_getID},
{"libferrisperlc::getCurrentUserPersonality", _wrap_getCurrentUserPersonality},
{"libferrisperlc::getGenericClassifierAgentPersonality", _wrap_getGenericClassifierAgentPersonality},
{"libferrisperlc::createPersonality", _wrap_createPersonality},
{"libferrisperlc::obtainPersonality", _wrap_obtainPersonality},
{"libferrisperlc::findPersonality", _wrap_findPersonality},
{"libferrisperlc::findAllPersonalities", _wrap_findAllPersonalities},
{"libferrisperlc::isXFS", _wrap_isXFS},
{"libferrisperlc::PrefixTrimmerOps_match", _wrap_PrefixTrimmerOps_match},
{"libferrisperlc::PrefixTrimmerOps_trim", _wrap_PrefixTrimmerOps_trim},
{"libferrisperlc::PostfixTrimmerOps_match", _wrap_PostfixTrimmerOps_match},
{"libferrisperlc::PostfixTrimmerOps_trim", _wrap_PostfixTrimmerOps_trim},
{"libferrisperlc::delete_TrimmerBase", _wrap_delete_TrimmerBase},
{"libferrisperlc::TrimmerBase_push_back", _wrap_TrimmerBase_push_back},
{"libferrisperlc::TrimmerBase_clear", _wrap_TrimmerBase_clear},
{"libferrisperlc::TrimmerBase___call__", _wrap_TrimmerBase___call__},
{"libferrisperlc::new_giStreamPosRAII", _wrap_new_giStreamPosRAII},
{"libferrisperlc::isCompressedContext", _wrap_isCompressedContext},
{"libferrisperlc::getNullConvertToCompressedChunkContextProgress_Sig", _wrap_getNullConvertToCompressedChunkContextProgress_Sig},
{"libferrisperlc::getCompressedChunkIOStream", _wrap_getCompressedChunkIOStream},
{"libferrisperlc::ConvertToCompressedChunkContext", _wrap_ConvertToCompressedChunkContext},
{"libferrisperlc::ConvertFromCompressedChunkContext", _wrap_ConvertFromCompressedChunkContext},
{"libferrisperlc::getSchemaDefaultSortList", _wrap_getSchemaDefaultSortList},
{"libferrisperlc::getSchemaDefaultSort", _wrap_getSchemaDefaultSort},
{"libferrisperlc::maskOffXSDMeta", _wrap_maskOffXSDMeta},
{"libferrisperlc::attachStatelessSchema", _wrap_attachStatelessSchema},
{"libferrisperlc::attachGenericSchema", _wrap_attachGenericSchema},
{"libferrisperlc::getSchemaJustification", _wrap_getSchemaJustification},
{"libferrisperlc::getSchemaDisplayWidth", _wrap_getSchemaDisplayWidth},
{"libferrisperlc::getSchemaDisplayPrecision", _wrap_getSchemaDisplayPrecision},
{"libferrisperlc::getSchemaType", _wrap_getSchemaType},
{"libferrisperlc::getSchemaURLForType", _wrap_getSchemaURLForType},
{"libferrisperlc::makeBasicTypeMap", _wrap_makeBasicTypeMap},
{"libferrisperlc::attachStreamCollector", _wrap_attachStreamCollector},
{"libferrisperlc::stringvec_to_CSTRvec", _wrap_stringvec_to_CSTRvec},
{"libferrisperlc::Resolve", _wrap_Resolve},
{"libferrisperlc::getExpandShellGlobsPopTable", _wrap_getExpandShellGlobsPopTable},
{"libferrisperlc::expandShellGlobs", _wrap_expandShellGlobs},
{"libferrisperlc::new_DesktopFileKeyNotFound", _wrap_new_DesktopFileKeyNotFound},
{"libferrisperlc::importDesktopFileTo", _wrap_importDesktopFileTo},
{"libferrisperlc::importDesktopFile", _wrap_importDesktopFile},
{"libferrisperlc::getFileClipboard", _wrap_getFileClipboard},
{"libferrisperlc::Clear", _wrap_Clear},
{"libferrisperlc::Cut", _wrap_Cut},
{"libferrisperlc::Copy", _wrap_Copy},
{"libferrisperlc::Link", _wrap_Link},
{"libferrisperlc::Paste", _wrap_Paste},
{"libferrisperlc::Undo", _wrap_Undo},
{"libferrisperlc::Redo", _wrap_Redo},
{"libferrisperlc::getMimeHistory", _wrap_getMimeHistory},
{"libferrisperlc::setUseSloth", _wrap_setUseSloth},
{"libferrisperlc::setUseAutoClose", _wrap_setUseAutoClose},
{"libferrisperlc::setCursorOption", _wrap_setCursorOption},
{"libferrisperlc::getCursor", _wrap_getCursor},
{"libferrisperlc::cursorNext", _wrap_cursorNext},
{"libferrisperlc::cursorPrev", _wrap_cursorPrev},
{"libferrisperlc::cursorOffset", _wrap_cursorOffset},
{"libferrisperlc::cursorSet", _wrap_cursorSet},
{"libferrisperlc::InitOpenSSL", _wrap_InitOpenSSL},
{"libferrisperlc::digest", _wrap_digest},
{"libferrisperlc::base64encode", _wrap_base64encode},
{"libferrisperlc::MakeDigestStream", _wrap_MakeDigestStream},
{"libferrisperlc::new_ImplicitIteratorUpdateLock", _wrap_new_ImplicitIteratorUpdateLock},
{"libferrisperlc::delete_ImplicitIteratorUpdateLock", _wrap_delete_ImplicitIteratorUpdateLock},
{"libferrisperlc::ImplicitIteratorUpdateLock_isTaken", _wrap_ImplicitIteratorUpdateLock_isTaken},
{"libferrisperlc::delete_ContextIterator", _wrap_delete_ContextIterator},
{"libferrisperlc::new_ContextIterator", _wrap_new_ContextIterator},
{"libferrisperlc::ContextIterator_operator_assignment", _wrap_ContextIterator_operator_assignment},
{"libferrisperlc::ContextIterator___ref__", _wrap_ContextIterator___ref__},
{"libferrisperlc::ContextIterator___deref__", _wrap_ContextIterator___deref__},
{"libferrisperlc::ContextIterator_operator_atindex", _wrap_ContextIterator_operator_atindex},
{"libferrisperlc::ContextIterator___plusplus__", _wrap_ContextIterator___plusplus__},
{"libferrisperlc::ContextIterator___minmin__", _wrap_ContextIterator___minmin__},
{"libferrisperlc::ContextIterator___add__", _wrap_ContextIterator___add__},
{"libferrisperlc::ContextIterator___iadd__", _wrap_ContextIterator___iadd__},
{"libferrisperlc::ContextIterator___sub__", _wrap_ContextIterator___sub__},
{"libferrisperlc::ContextIterator___isub__", _wrap_ContextIterator___isub__},
{"libferrisperlc::ContextIterator_getContextClassStatelessEANames", _wrap_ContextIterator_getContextClassStatelessEANames},
{"libferrisperlc::ContextIterator_isDir", _wrap_ContextIterator_isDir},
{"libferrisperlc::ContextIterator_getDirName", _wrap_ContextIterator_getDirName},
{"libferrisperlc::ContextIterator_getParent", _wrap_ContextIterator_getParent},
{"libferrisperlc::ContextIterator_isParentBound", _wrap_ContextIterator_isParentBound},
{"libferrisperlc::ContextIterator_getRecommendedEA", _wrap_ContextIterator_getRecommendedEA},
{"libferrisperlc::ContextIterator_getHasSubContextsGuess", _wrap_ContextIterator_getHasSubContextsGuess},
{"libferrisperlc::ContextIterator_getHaveReadDir", _wrap_ContextIterator_getHaveReadDir},
{"libferrisperlc::ContextIterator_toAttribute", _wrap_ContextIterator_toAttribute},
{"libferrisperlc::ContextIterator_getSchema", _wrap_ContextIterator_getSchema},
{"libferrisperlc::ContextIterator_getSchemaOrDefault", _wrap_ContextIterator_getSchemaOrDefault},
{"libferrisperlc::ContextIterator_begin", _wrap_ContextIterator_begin},
{"libferrisperlc::ContextIterator_end", _wrap_ContextIterator_end},
{"libferrisperlc::ContextIterator_rbegin", _wrap_ContextIterator_rbegin},
{"libferrisperlc::ContextIterator_rend", _wrap_ContextIterator_rend},
{"libferrisperlc::ContextIterator_find", _wrap_ContextIterator_find},
{"libferrisperlc::ContextIterator_monsterName", _wrap_ContextIterator_monsterName},
{"libferrisperlc::ContextIterator_getIsNativeContext", _wrap_ContextIterator_getIsNativeContext},
{"libferrisperlc::ContextIterator_setHasDynamicAttributes", _wrap_ContextIterator_setHasDynamicAttributes},
{"libferrisperlc::ContextIterator_setAttribute", _wrap_ContextIterator_setAttribute},
{"libferrisperlc::ContextIterator_getSubContextAttributesWithSameNameHaveSameSchema", _wrap_ContextIterator_getSubContextAttributesWithSameNameHaveSameSchema},
{"libferrisperlc::ContextIterator_dumpOutItems", _wrap_ContextIterator_dumpOutItems},
{"libferrisperlc::ContextIterator_getOverMountContext", _wrap_ContextIterator_getOverMountContext},
{"libferrisperlc::ContextIterator_remove", _wrap_ContextIterator_remove},
{"libferrisperlc::ContextIterator_rename", _wrap_ContextIterator_rename},
{"libferrisperlc::ContextIterator_copyTo", _wrap_ContextIterator_copyTo},
{"libferrisperlc::ContextIterator_createAttribute", _wrap_ContextIterator_createAttribute},
{"libferrisperlc::ContextIterator_acquireAttribute", _wrap_ContextIterator_acquireAttribute},
{"libferrisperlc::ContextIterator_getCreateSubContextSchema", _wrap_ContextIterator_getCreateSubContextSchema},
{"libferrisperlc::ContextIterator_createSubContext", _wrap_ContextIterator_createSubContext},
{"libferrisperlc::ContextIterator_getRelativeContext", _wrap_ContextIterator_getRelativeContext},
{"libferrisperlc::ContextIterator_getSubContextNames", _wrap_ContextIterator_getSubContextNames},
{"libferrisperlc::ContextIterator_getSubContext", _wrap_ContextIterator_getSubContext},
{"libferrisperlc::ContextIterator_priv_isSubContextBound", _wrap_ContextIterator_priv_isSubContextBound},
{"libferrisperlc::ContextIterator_isSubContextBound", _wrap_ContextIterator_isSubContextBound},
{"libferrisperlc::ContextIterator_read", _wrap_ContextIterator_read},
{"libferrisperlc::ContextIterator_guessSize", _wrap_ContextIterator_guessSize},
{"libferrisperlc::ContextIterator_hasSubContexts", _wrap_ContextIterator_hasSubContexts},
{"libferrisperlc::ContextIterator_SubContextCount", _wrap_ContextIterator_SubContextCount},
{"libferrisperlc::ContextIterator_all_attributes_have_single_ref_count", _wrap_ContextIterator_all_attributes_have_single_ref_count},
{"libferrisperlc::ContextIterator_isAttributeBound", _wrap_ContextIterator_isAttributeBound},
{"libferrisperlc::ContextIterator_getAttribute", _wrap_ContextIterator_getAttribute},
{"libferrisperlc::ContextIterator_getAttributeCount", _wrap_ContextIterator_getAttributeCount},
{"libferrisperlc::ContextIterator_getAttributeRootEmblem", _wrap_ContextIterator_getAttributeRootEmblem},
{"libferrisperlc::ContextIterator_Emit_Changed", _wrap_ContextIterator_Emit_Changed},
{"libferrisperlc::ContextIterator_Emit_Deleted", _wrap_ContextIterator_Emit_Deleted},
{"libferrisperlc::ContextIterator_Emit_Start_Execute", _wrap_ContextIterator_Emit_Start_Execute},
{"libferrisperlc::ContextIterator_Emit_Stop_Execute", _wrap_ContextIterator_Emit_Stop_Execute},
{"libferrisperlc::ContextIterator_Emit_Created", _wrap_ContextIterator_Emit_Created},
{"libferrisperlc::ContextIterator_Emit_Moved", _wrap_ContextIterator_Emit_Moved},
{"libferrisperlc::ContextIterator_Emit_Exists", _wrap_ContextIterator_Emit_Exists},
{"libferrisperlc::ContextIterator_Emit_Start_Reading_Context", _wrap_ContextIterator_Emit_Start_Reading_Context},
{"libferrisperlc::ContextIterator_Emit_Stop_Reading_Context", _wrap_ContextIterator_Emit_Stop_Reading_Context},
{"libferrisperlc::ContextIterator_getURL", _wrap_ContextIterator_getURL},
{"libferrisperlc::ContextIterator_SubCreate_file", _wrap_ContextIterator_SubCreate_file},
{"libferrisperlc::ContextIterator_dumpRefDebugData", _wrap_ContextIterator_dumpRefDebugData},
{"libferrisperlc::ContextIterator_splitPath", _wrap_ContextIterator_splitPath},
{"libferrisperlc::ContextIterator_unSplitPath", _wrap_ContextIterator_unSplitPath},
{"libferrisperlc::ContextIterator_getMimeType", _wrap_ContextIterator_getMimeType},
{"libferrisperlc::ContextIterator_getFileType", _wrap_ContextIterator_getFileType},
{"libferrisperlc::ContextIterator_getMedallion", _wrap_ContextIterator_getMedallion},
{"libferrisperlc::ContextIterator_hasMedallion", _wrap_ContextIterator_hasMedallion},
{"libferrisperlc::ContextIterator_getNamespacePrefixes", _wrap_ContextIterator_getNamespacePrefixes},
{"libferrisperlc::ContextIterator_getBranchFileSystem", _wrap_ContextIterator_getBranchFileSystem},
{"libferrisperlc::ContextIterator_getNameExtension", _wrap_ContextIterator_getNameExtension},
{"libferrisperlc::ContextIterator_getImage", _wrap_ContextIterator_getImage},
{"libferrisperlc::ContextIterator_getImageOrNULL", _wrap_ContextIterator_getImageOrNULL},
{"libferrisperlc::ContextIterator_priv_getImage", _wrap_ContextIterator_priv_getImage},
{"libferrisperlc::ContextIterator_taintImage", _wrap_ContextIterator_taintImage},
{"libferrisperlc::ContextIterator_RegisterImageEAGeneratorModule", _wrap_ContextIterator_RegisterImageEAGeneratorModule},
{"libferrisperlc::ContextIterator_UnrollRegisteredImageEAGeneratorModule", _wrap_ContextIterator_UnrollRegisteredImageEAGeneratorModule},
{"libferrisperlc::ContextIterator_isCompressedContext", _wrap_ContextIterator_isCompressedContext},
{"libferrisperlc::ContextIterator_addHandlableToBeReleasedWithContext", _wrap_ContextIterator_addHandlableToBeReleasedWithContext},
{"libferrisperlc::ContextIterator_SubCreate_dir", _wrap_ContextIterator_SubCreate_dir},
{"libferrisperlc::ContextIterator_dumpTree", _wrap_ContextIterator_dumpTree},
{"libferrisperlc::ContextIterator_getLastPartOfName", _wrap_ContextIterator_getLastPartOfName},
{"libferrisperlc::ContextIterator_appendToPath", _wrap_ContextIterator_appendToPath},
{"libferrisperlc::ContextIterator_getIStream", _wrap_ContextIterator_getIStream},
{"libferrisperlc::ContextIterator_getLocalIStream", _wrap_ContextIterator_getLocalIStream},
{"libferrisperlc::ContextIterator_getIOStream", _wrap_ContextIterator_getIOStream},
{"libferrisperlc::ContextIterator_checkOpenModeSupported", _wrap_ContextIterator_checkOpenModeSupported},
{"libferrisperlc::ContextIterator_getSupportedOpenModes", _wrap_ContextIterator_getSupportedOpenModes},
{"libferrisperlc::ContextIterator_getDirPath", _wrap_ContextIterator_getDirPath},
{"libferrisperlc::ContextIterator_getSubContextCount", _wrap_ContextIterator_getSubContextCount},
{"libferrisperlc::ContextIterator_empty", _wrap_ContextIterator_empty},
{"libferrisperlc::ContextIterator_getNamingEvent_MedallionUpdated_Sig", _wrap_ContextIterator_getNamingEvent_MedallionUpdated_Sig},
{"libferrisperlc::ContextIterator_getNamingEvent_Changed_Sig", _wrap_ContextIterator_getNamingEvent_Changed_Sig},
{"libferrisperlc::ContextIterator_getNamingEvent_Deleted_Sig", _wrap_ContextIterator_getNamingEvent_Deleted_Sig},
{"libferrisperlc::ContextIterator_getNamingEvent_Start_Execute_Sig", _wrap_ContextIterator_getNamingEvent_Start_Execute_Sig},
{"libferrisperlc::ContextIterator_getNamingEvent_Stop_Execute_Sig", _wrap_ContextIterator_getNamingEvent_Stop_Execute_Sig},
{"libferrisperlc::ContextIterator_getNamingEvent_Created_Sig", _wrap_ContextIterator_getNamingEvent_Created_Sig},
{"libferrisperlc::ContextIterator_getNamingEvent_Moved_Sig", _wrap_ContextIterator_getNamingEvent_Moved_Sig},
{"libferrisperlc::ContextIterator_getNamingEvent_Exists_Sig", _wrap_ContextIterator_getNamingEvent_Exists_Sig},
{"libferrisperlc::ContextIterator_getNamingEvent_Start_Reading_Context_Sig", _wrap_ContextIterator_getNamingEvent_Start_Reading_Context_Sig},
{"libferrisperlc::ContextIterator_getNamingEvent_Stop_Reading_Context_Sig", _wrap_ContextIterator_getNamingEvent_Stop_Reading_Context_Sig},
{"libferrisperlc::ContextIterator_getContextEvent_Headers_Received_Sig", _wrap_ContextIterator_getContextEvent_Headers_Received_Sig},
{"libferrisperlc::__sub__", _wrap___sub__},
{"libferrisperlc::__lt__", _wrap___lt__},
{"libferrisperlc::__gt__", _wrap___gt__},
{"libferrisperlc::__le__", _wrap___le__},
{"libferrisperlc::__ge__", _wrap___ge__},
{"libferrisperlc::getIOErrorDescription", _wrap_getIOErrorDescription},
{"libferrisperlc::haveIOError", _wrap_haveIOError},
{"libferrisperlc::saveFile", _wrap_saveFile},
{"libferrisperlc::getStrAttr", _wrap_getStrAttr},
{"libferrisperlc::setChild", _wrap_setChild},
{"libferrisperlc::setStrAttr", _wrap_setStrAttr},
{"libferrisperlc::getTimeAttr", _wrap_getTimeAttr},
{"libferrisperlc::getStrSubCtx", _wrap_getStrSubCtx},
{"libferrisperlc::new_CacheManager", _wrap_new_CacheManager},
{"libferrisperlc::delete_CacheManager", _wrap_delete_CacheManager},
{"libferrisperlc::CacheManager_dumpFreeListTo", _wrap_CacheManager_dumpFreeListTo},
{"libferrisperlc::CacheManager_cleanUp", _wrap_CacheManager_cleanUp},
{"libferrisperlc::CacheManager_shouldAutoCleanUp", _wrap_CacheManager_shouldAutoCleanUp},
{"libferrisperlc::CacheManager_insideCleanupCall", _wrap_CacheManager_insideCleanupCall},
{"libferrisperlc::CacheManager_cleanUp_only_CreateMetaDataContext", _wrap_CacheManager_cleanUp_only_CreateMetaDataContext},
{"libferrisperlc::getCacheManager", _wrap_getCacheManager},
{"libferrisperlc::DEBUG_dumpcl", _wrap_DEBUG_dumpcl},
{"libferrisperlc::DEBUG_dumpcl_to_file", _wrap_DEBUG_dumpcl_to_file},
{"libferrisperlc::delete_ContextCollection", _wrap_delete_ContextCollection},
{"libferrisperlc::ContextCollection_getSubContextNames", _wrap_ContextCollection_getSubContextNames},
{"libferrisperlc::ContextCollection_isSubContextBound", _wrap_ContextCollection_isSubContextBound},
{"libferrisperlc::ContextCollection_getSubContext", _wrap_ContextCollection_getSubContext},
{"libferrisperlc::ContextCollection_SubContextCount", _wrap_ContextCollection_SubContextCount},
{"libferrisperlc::ContextCollection_getSubContextCount", _wrap_ContextCollection_getSubContextCount},
{"libferrisperlc::ContextCollection_empty", _wrap_ContextCollection_empty},
{"libferrisperlc::delete_MutableCollectionEvents", _wrap_delete_MutableCollectionEvents},
{"libferrisperlc::MutableCollectionEvents_getNamingEvent_MedallionUpdated_Sig", _wrap_MutableCollectionEvents_getNamingEvent_MedallionUpdated_Sig},
{"libferrisperlc::MutableCollectionEvents_getNamingEvent_Changed_Sig", _wrap_MutableCollectionEvents_getNamingEvent_Changed_Sig},
{"libferrisperlc::MutableCollectionEvents_getNamingEvent_Deleted_Sig", _wrap_MutableCollectionEvents_getNamingEvent_Deleted_Sig},
{"libferrisperlc::MutableCollectionEvents_getNamingEvent_Start_Execute_Sig", _wrap_MutableCollectionEvents_getNamingEvent_Start_Execute_Sig},
{"libferrisperlc::MutableCollectionEvents_getNamingEvent_Stop_Execute_Sig", _wrap_MutableCollectionEvents_getNamingEvent_Stop_Execute_Sig},
{"libferrisperlc::MutableCollectionEvents_getNamingEvent_Created_Sig", _wrap_MutableCollectionEvents_getNamingEvent_Created_Sig},
{"libferrisperlc::MutableCollectionEvents_getNamingEvent_Moved_Sig", _wrap_MutableCollectionEvents_getNamingEvent_Moved_Sig},
{"libferrisperlc::MutableCollectionEvents_getNamingEvent_Exists_Sig", _wrap_MutableCollectionEvents_getNamingEvent_Exists_Sig},
{"libferrisperlc::MutableCollectionEvents_getNamingEvent_Start_Reading_Context_Sig", _wrap_MutableCollectionEvents_getNamingEvent_Start_Reading_Context_Sig},
{"libferrisperlc::MutableCollectionEvents_getNamingEvent_Stop_Reading_Context_Sig", _wrap_MutableCollectionEvents_getNamingEvent_Stop_Reading_Context_Sig},
{"libferrisperlc::MutableCollectionEvents_getContextEvent_Headers_Received_Sig", _wrap_MutableCollectionEvents_getContextEvent_Headers_Received_Sig},
{"libferrisperlc::__eq__", _wrap___eq__},
{"libferrisperlc::__ne__", _wrap___ne__},
{"libferrisperlc::ReverseSortStringOrder", _wrap_ReverseSortStringOrder},
{"libferrisperlc::MakeSorter", _wrap_MakeSorter},
{"libferrisperlc::MakeSortedContext", _wrap_MakeSortedContext},
{"libferrisperlc::adjustEANameForSorting", _wrap_adjustEANameForSorting},
{"libferrisperlc::SL_SubCreate_alwaysThrow", _wrap_SL_SubCreate_alwaysThrow},
{"libferrisperlc::SL_SubCreate_dir", _wrap_SL_SubCreate_dir},
{"libferrisperlc::isTrue", _wrap_isTrue},
{"libferrisperlc::isFalse", _wrap_isFalse},
{"libferrisperlc::isNumber", _wrap_isNumber},
{"libferrisperlc::getCreateHistory", _wrap_getCreateHistory},
{"libferrisperlc::EventPending", _wrap_EventPending},
{"libferrisperlc::processEvent", _wrap_processEvent},
{"libferrisperlc::processAllPendingEvents", _wrap_processAllPendingEvents},
{"libferrisperlc::mainLoop", _wrap_mainLoop},
{"libferrisperlc::new_SingleShot", _wrap_new_SingleShot},
{"libferrisperlc::SingleShot___call__", _wrap_SingleShot___call__},
{"libferrisperlc::SingleShot_value", _wrap_SingleShot_value},
{"libferrisperlc::getMimeName", _wrap_getMimeName},
{"libferrisperlc::toContextIterator", _wrap_toContextIterator},
{"libferrisperlc::addEAToSet", _wrap_addEAToSet},
{"libferrisperlc::ExecuteQueryAgainstMyRDF", _wrap_ExecuteQueryAgainstMyRDF},
{"libferrisperlc::getStaticLinkedRootContextNames", _wrap_getStaticLinkedRootContextNames},
{"libferrisperlc::appendToStaticLinkedRootContextNames", _wrap_appendToStaticLinkedRootContextNames},
{"libferrisperlc::ParseOnly_FERRIS_POPT_OPTIONS", _wrap_ParseOnly_FERRIS_POPT_OPTIONS},
{"libferrisperlc::tryToUseOutOfProcessMetadataServer", _wrap_tryToUseOutOfProcessMetadataServer},
{"libferrisperlc::makeFerrisPluginPath", _wrap_makeFerrisPluginPath},
{"libferrisperlc::acquireContext", _wrap_acquireContext},
{0,0}
};
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;
  
  clientdata = clientdata;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpeters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C"
#endif

XS(SWIG_init) {
  dXSARGS;
  int i;
  
  SWIG_InitializeModule(0);
  
  /* Install commands */
  for (i = 0; swig_commands[i].name; i++) {
    newXS((char*) swig_commands[i].name,swig_commands[i].wrapper, (char*)__FILE__);
  }
  
  /* Install variables */
  for (i = 0; swig_variables[i].name; i++) {
    SV *sv;
    sv = get_sv((char*) swig_variables[i].name, TRUE | 0x2 | GV_ADDMULTI);
    if (swig_variables[i].type) {
      SWIG_MakePtr(sv,(void *)1, *swig_variables[i].type,0);
    } else {
      sv_setiv(sv,(IV) 0);
    }
    swig_create_magic(sv, (char *) swig_variables[i].name, swig_variables[i].set, swig_variables[i].get); 
  }
  
  /* Install constant */
  for (i = 0; swig_constants[i].type; i++) {
    SV *sv;
    sv = get_sv((char*)swig_constants[i].name, TRUE | 0x2 | GV_ADDMULTI);
    switch(swig_constants[i].type) {
    case SWIG_INT:
      sv_setiv(sv, (IV) swig_constants[i].lvalue);
      break;
    case SWIG_FLOAT:
      sv_setnv(sv, (double) swig_constants[i].dvalue);
      break;
    case SWIG_STRING:
      sv_setpv(sv, (char *) swig_constants[i].pvalue);
      break;
    case SWIG_POINTER:
      SWIG_MakePtr(sv, swig_constants[i].pvalue, *(swig_constants[i].ptype),0);
      break;
    case SWIG_BINARY:
      SWIG_MakePackedObj(sv, swig_constants[i].pvalue, swig_constants[i].lvalue, *(swig_constants[i].ptype));
      break;
    default:
      break;
    }
    SvREADONLY_on(sv);
  }
  
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "RefLinkedBase_destructiveCopy", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(Loki::Private::RefLinkedBase::destructiveCopy)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_Loki__Private__RefLinkedBase, (void*) "libferrisperl::RefLinkedBase");
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "AllowConversion_allow", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(Loki::AllowConversion::allow)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_Loki__AllowConversion, (void*) "libferrisperl::AllowConversion");
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "DisallowConversion_allow", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(Loki::DisallowConversion::allow)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_Loki__DisallowConversion, (void*) "libferrisperl::DisallowConversion");
  SWIG_TypeClientData(SWIGTYPE_p_Loki__NullPointerException, (void*) "libferrisperl::NullPointerException");
  SWIG_TypeClientData(SWIGTYPE_p_std__vectorT_int_t, (void*) "libferrisperl::IntVector");
  SWIG_TypeClientData(SWIGTYPE_p_std__vectorT_std__string_t, (void*) "libferrisperl::StringVector");
  SWIG_TypeClientData(SWIGTYPE_p_FerrisLoki__Handlable, (void*) "libferrisperl::Handlable");
  SWIG_TypeClientData(SWIGTYPE_p_FerrisLoki__FerrisSmallObjAllocator, (void*) "libferrisperl::FerrisSmallObjAllocator");
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "__PRETTY_FUNCTION__", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_FromCharPtr(""));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisException_CodeState, (void*) "libferrisperl::FerrisException_CodeState");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisExceptionBase, (void*) "libferrisperl::FerrisExceptionBase");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisStreamException, (void*) "libferrisperl::FerrisStreamException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__UnspoortedBlockSize, (void*) "libferrisperl::UnspoortedBlockSize");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__MalformedURL, (void*) "libferrisperl::MalformedURL");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__CreateFIFO, (void*) "libferrisperl::CreateFIFO");
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "ferris_ios_o_nouncrypt", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_unsigned_SS_long_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long long >(Ferris::ferris_ios::o_nouncrypt)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__ferris_ios, (void*) "libferrisperl::ferris_ios");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__ferris_basic_streambuf_onemeg, (void*) "libferrisperl::ferris_basic_streambuf_onemeg");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__ferris_basic_streambuf_sixteenk, (void*) "libferrisperl::ferris_basic_streambuf_sixteenk");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__ferris_basic_streambuf_fourk, (void*) "libferrisperl::ferris_basic_streambuf_fourk");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__ferris_basic_streambuf_quartk, (void*) "libferrisperl::ferris_basic_streambuf_quartk");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__ferris_basic_streambuf_sixteenbytes, (void*) "libferrisperl::ferris_basic_streambuf_sixteenbytes");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__ferris_basic_streambuf_virtual, (void*) "libferrisperl::ferris_basic_streambuf_virtual");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__fh_context, (void*) "libferrisperl::Context");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__fh_attribute, (void*) "libferrisperl::AttributeProxy");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__fh_attrcol, (void*) "libferrisperl::AttributeCollection");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__fh_runner, (void*) "libferrisperl::Runner");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__fh_sorter, (void*) "libferrisperl::PreprocessedSortString");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__fh_emblem, (void*) "libferrisperl::Emblem");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__fh_cemblem, (void*) "libferrisperl::ColdEmblem");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__fh_etagere, (void*) "libferrisperl::Etagere");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__fh_medallion, (void*) "libferrisperl::Medallion");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__fh_medallionBelief, (void*) "libferrisperl::MedallionBelief");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FCA__fh_conceptLattice, (void*) "libferrisperl::ConceptLattice");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__RegexCollection, (void*) "libferrisperl::RegexCollection");
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "STEM_J_B_LOVINS_68", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FullTextIndex::STEM_J_B_LOVINS_68)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "STEM_PORTER", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FullTextIndex::STEM_PORTER)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "STEM_NONE", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FullTextIndex::STEM_NONE)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisVFSExceptionBase, (void*) "libferrisperl::FerrisVFSExceptionBase");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisGLibCException, (void*) "libferrisperl::FerrisGLibCException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisStatException, (void*) "libferrisperl::FerrisStatException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisSetCWDException, (void*) "libferrisperl::FerrisSetCWDException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__CanNotGetStream, (void*) "libferrisperl::CanNotGetStream");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__NotSupported, (void*) "libferrisperl::NotSupported");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisNotSupportedInThisContext, (void*) "libferrisperl::FerrisNotSupportedInThisContext");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__RootContextCreationFailed, (void*) "libferrisperl::RootContextCreationFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__CanNotDelete, (void*) "libferrisperl::CanNotDelete");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__NoSuchObject, (void*) "libferrisperl::NoSuchObject");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__NoSuchUser, (void*) "libferrisperl::NoSuchUser");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__NoSuchGroup, (void*) "libferrisperl::NoSuchGroup");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__ObjectExists, (void*) "libferrisperl::ObjectExists");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__ContextExists, (void*) "libferrisperl::ContextExists");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__CopyFailed, (void*) "libferrisperl::CopyFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__RemoveFailed, (void*) "libferrisperl::RemoveFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__AttributeNotWritable, (void*) "libferrisperl::AttributeNotWritable");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__SubContextAlreadyInUse, (void*) "libferrisperl::SubContextAlreadyInUse");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__AttributeAlreadyInUse, (void*) "libferrisperl::AttributeAlreadyInUse");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisCreateSubContextFailed, (void*) "libferrisperl::FerrisCreateSubContextFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisCreateSubContextNotSupported, (void*) "libferrisperl::FerrisCreateSubContextNotSupported");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisCreateAttributeFailed, (void*) "libferrisperl::FerrisCreateAttributeFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisCreateAttributeNotSupported, (void*) "libferrisperl::FerrisCreateAttributeNotSupported");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__NoSuchSubContext, (void*) "libferrisperl::NoSuchSubContext");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__NoSuchAttribute, (void*) "libferrisperl::NoSuchAttribute");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__NoSuchContextClass, (void*) "libferrisperl::NoSuchContextClass");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__CanNotReadContext, (void*) "libferrisperl::CanNotReadContext");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__CanNotReadContextPcctsParseFailed, (void*) "libferrisperl::CanNotReadContextPcctsParseFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__CanNotDereferenceDanglingSoftLink, (void*) "libferrisperl::CanNotDereferenceDanglingSoftLink");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__CanNotMonitorDirWithFAM, (void*) "libferrisperl::CanNotMonitorDirWithFAM");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisNotReadableAsContext, (void*) "libferrisperl::FerrisNotReadableAsContext");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisImageSaveFailed, (void*) "libferrisperl::FerrisImageSaveFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisImageLoadFailed, (void*) "libferrisperl::FerrisImageLoadFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisPNGImageLoadFailed, (void*) "libferrisperl::FerrisPNGImageLoadFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisJPEGImageLoadFailed, (void*) "libferrisperl::FerrisJPEGImageLoadFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisGIMPImageLoadFailed, (void*) "libferrisperl::FerrisGIMPImageLoadFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisImlib2ImageLoadFailed, (void*) "libferrisperl::FerrisImlib2ImageLoadFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisWaitTimedOut, (void*) "libferrisperl::FerrisWaitTimedOut");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisSqlServerNameNotFound, (void*) "libferrisperl::FerrisSqlServerNameNotFound");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__GModuleOpenFailed, (void*) "libferrisperl::GModuleOpenFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisStreamLoadFailed, (void*) "libferrisperl::FerrisStreamLoadFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisCanNotCreateLeafOfLeaf, (void*) "libferrisperl::FerrisCanNotCreateLeafOfLeaf");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisOutOfMemory, (void*) "libferrisperl::FerrisOutOfMemory");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__CanNotAddExternalAttribute, (void*) "libferrisperl::CanNotAddExternalAttribute");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__CurlStaticInitFailed, (void*) "libferrisperl::CurlStaticInitFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__CurlEasyInitFailed, (void*) "libferrisperl::CurlEasyInitFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__CurlPerformFailed, (void*) "libferrisperl::CurlPerformFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__CurlStateError, (void*) "libferrisperl::CurlStateError");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisCurlServerNameNotFound, (void*) "libferrisperl::FerrisCurlServerNameNotFound");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__getIOStreamCloseUpdateFailed, (void*) "libferrisperl::getIOStreamCloseUpdateFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__getIOStreamCloseUpdatePermissionDenied, (void*) "libferrisperl::getIOStreamCloseUpdatePermissionDenied");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__DTDCreationFailed, (void*) "libferrisperl::DTDCreationFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__UnknownConfigLocation, (void*) "libferrisperl::UnknownConfigLocation");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__RenameFailed, (void*) "libferrisperl::RenameFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__AccessDenied, (void*) "libferrisperl::AccessDenied");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__GenericError, (void*) "libferrisperl::GenericError");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__BadlyFormedTime, (void*) "libferrisperl::BadlyFormedTime");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__BadlyFormedTimeString, (void*) "libferrisperl::BadlyFormedTimeString");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__SocketOptionsException, (void*) "libferrisperl::SocketOptionsException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__BackupException, (void*) "libferrisperl::BackupException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__UnknownBackupMode, (void*) "libferrisperl::UnknownBackupMode");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__BackupNameWouldBeTooLong, (void*) "libferrisperl::BackupNameWouldBeTooLong");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__DVDReadException, (void*) "libferrisperl::DVDReadException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__StorageFull, (void*) "libferrisperl::StorageFull");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__QuotaStorageFull, (void*) "libferrisperl::QuotaStorageFull");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FileClipboard, (void*) "libferrisperl::FileClipboard");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__CursorException, (void*) "libferrisperl::CursorException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__ParseError, (void*) "libferrisperl::ParseError");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__ProgramSpawn, (void*) "libferrisperl::ProgramSpawn");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__Db4Exception, (void*) "libferrisperl::Db4Exception");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__eetException, (void*) "libferrisperl::eetException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__GdbmException, (void*) "libferrisperl::GdbmException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__tdbException, (void*) "libferrisperl::tdbException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__Db4KeyNotFound, (void*) "libferrisperl::Db4KeyNotFound");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__eetKeyNotFound, (void*) "libferrisperl::eetKeyNotFound");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__InvalidSortSpecification, (void*) "libferrisperl::InvalidSortSpecification");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__ContentNotModified, (void*) "libferrisperl::ContentNotModified");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__ChildNotRunning, (void*) "libferrisperl::ChildNotRunning");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__InvalidModeString, (void*) "libferrisperl::InvalidModeString");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__LDAPException, (void*) "libferrisperl::LDAPException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__CompressionException, (void*) "libferrisperl::CompressionException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__CompressionAlgoNotFoundException, (void*) "libferrisperl::CompressionAlgoNotFoundException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__IndexException, (void*) "libferrisperl::IndexException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FullTextIndexException, (void*) "libferrisperl::FullTextIndexException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__EAIndexException, (void*) "libferrisperl::EAIndexException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__BadParam, (void*) "libferrisperl::BadParam");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__SchemaException, (void*) "libferrisperl::SchemaException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__SchemaNotFoundException, (void*) "libferrisperl::SchemaNotFoundException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__MedallionException, (void*) "libferrisperl::MedallionException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__EtagereException, (void*) "libferrisperl::EtagereException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__EmblemException, (void*) "libferrisperl::EmblemException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__EmblemNotFoundException, (void*) "libferrisperl::EmblemNotFoundException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__CanNotAddEmblemException, (void*) "libferrisperl::CanNotAddEmblemException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__NoSuchPersonalityException, (void*) "libferrisperl::NoSuchPersonalityException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__NoSuchBeliefException, (void*) "libferrisperl::NoSuchBeliefException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__AgentException, (void*) "libferrisperl::AgentException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__AgentAlreadyExistsException, (void*) "libferrisperl::AgentAlreadyExistsException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__NoSuchAgentException, (void*) "libferrisperl::NoSuchAgentException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__AgentOnlyHandlesOneEmblemException, (void*) "libferrisperl::AgentOnlyHandlesOneEmblemException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__XMLBase, (void*) "libferrisperl::XMLBase");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__XMLParseError, (void*) "libferrisperl::XMLParseError");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__XMLFatalError, (void*) "libferrisperl::XMLFatalError");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__dbXMLException, (void*) "libferrisperl::dbXMLException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__BranchFileSystem, (void*) "libferrisperl::BranchFileSystem");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__RelativeTimeParsing, (void*) "libferrisperl::RelativeTimeParsing");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__CryptoBase, (void*) "libferrisperl::CryptoBase");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__GPGMEInitFailed, (void*) "libferrisperl::GPGMEInitFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__BadSignature, (void*) "libferrisperl::BadSignature");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__KeylistException, (void*) "libferrisperl::KeylistException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__XMPBase, (void*) "libferrisperl::XMPBase");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__XMPPacketScanFailed, (void*) "libferrisperl::XMPPacketScanFailed");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__GPhoto2, (void*) "libferrisperl::GPhoto2");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__NoOpenWithContext, (void*) "libferrisperl::NoOpenWithContext");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__OpenActionIsNotDefined, (void*) "libferrisperl::OpenActionIsNotDefined");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__DBusException, (void*) "libferrisperl::DBusException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__DBusConnectionException, (void*) "libferrisperl::DBusConnectionException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__WebPhotoException, (void*) "libferrisperl::WebPhotoException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__SQLiteException, (void*) "libferrisperl::SQLiteException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisHALException, (void*) "libferrisperl::FerrisHALException");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__SyntaxError, (void*) "libferrisperl::SyntaxError");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FFilterSyntaxError, (void*) "libferrisperl::FFilterSyntaxError");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FulltextQuerySyntaxError, (void*) "libferrisperl::FulltextQuerySyntaxError");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__URLDecodeSyntaxError, (void*) "libferrisperl::URLDecodeSyntaxError");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisInternalError, (void*) "libferrisperl::FerrisInternalError");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisParentNotSetError, (void*) "libferrisperl::FerrisParentNotSetError");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__FerrisCanNotGetScriptNameError, (void*) "libferrisperl::FerrisCanNotGetScriptNameError");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__CacheHandlable, (void*) "libferrisperl::CacheHandlable");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__Versioned, (void*) "libferrisperl::Versioned");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__Attribute, (void*) "libferrisperl::Attribute");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__EA_Atom, (void*) "libferrisperl::EA_Atom");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__EA_Atom_ReadOnly, (void*) "libferrisperl::EA_Atom_ReadOnly");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__EA_Atom_ReadOnly_PassedInStream, (void*) "libferrisperl::EA_Atom_ReadOnly_PassedInStream");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__EA_Atom_ReadWrite, (void*) "libferrisperl::EA_Atom_ReadWrite");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_PassedInStream, (void*) "libferrisperl::EA_Atom_ReadWrite_PassedInStream");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_OpenModeCached, (void*) "libferrisperl::EA_Atom_ReadWrite_OpenModeCached");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__EA_Atom_ReadWrite_Contents, (void*) "libferrisperl::EA_Atom_ReadWrite_Contents");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__EA_Atom_Static, (void*) "libferrisperl::EA_Atom_Static");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__EA_Atom_RDFCacheAttribute, (void*) "libferrisperl::EA_Atom_RDFCacheAttribute");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__Time__Benchmark, (void*) "libferrisperl::Benchmark");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__AI__Agent, (void*) "libferrisperl::Agent");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__fh_emblem_less, (void*) "libferrisperl::fh_emblem_less");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__Times, (void*) "libferrisperl::Times");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__Personality, (void*) "libferrisperl::Personality");
  SWIG_TypeClientData(SWIGTYPE_p_PrefixTrimmerOps, (void*) "libferrisperl::PrefixTrimmerOps");
  SWIG_TypeClientData(SWIGTYPE_p_PostfixTrimmerOps, (void*) "libferrisperl::PostfixTrimmerOps");
  SWIG_TypeClientData(SWIGTYPE_p_TrimmerBase, (void*) "libferrisperl::TrimmerBase");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__giStreamPosRAII, (void*) "libferrisperl::giStreamPosRAII");
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "COMPRESS_INVALID", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::Factory::COMPRESS_INVALID)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "COMPRESS_NONE", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::Factory::COMPRESS_NONE)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "COMPRESS_GZIP", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::Factory::COMPRESS_GZIP)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "COMPRESS_BZIP2", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::Factory::COMPRESS_BZIP2)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "XSD_UNKNOWN", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::XSD_UNKNOWN)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "XSD_SCHEMA", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::XSD_SCHEMA)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "XSD_BASIC_BOOL", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::XSD_BASIC_BOOL)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "XSD_BASIC_FLOAT", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::XSD_BASIC_FLOAT)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "XSD_BASIC_DOUBLE", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::XSD_BASIC_DOUBLE)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "XSD_BASIC_STRING", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::XSD_BASIC_STRING)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "XSD_BASIC_INT", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::XSD_BASIC_INT)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "XSD_BASIC_INTEGER", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::XSD_BASIC_INTEGER)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_MODE_T", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_MODE_T)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_UNIXEPOCH_T", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_UNIXEPOCH_T)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_INODE_T", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_INODE_T)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_MIMETYPE", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_MIMETYPE)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_GID_T", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_GID_T)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_UID_T", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_UID_T)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_USERNAME", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_USERNAME)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_GROUPNAME", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_GROUPNAME)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_PID", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_PID)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_FILESIZE", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_FILESIZE)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_URL", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_URL)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_URL_IMPLICIT_RESOLVE", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_URL_IMPLICIT_RESOLVE)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_URL_IMPLICIT_RESOLVE_FILESYSTEM", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_URL_IMPLICIT_RESOLVE_FILESYSTEM)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_MACHINE_NAME", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_MACHINE_NAME)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_FSID_T", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_FSID_T)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_INT32", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_INT32)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_UINT32", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_UINT32)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_LONG", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_LONG)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_BINARY", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_BINARY)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_BINARY_RGBA32", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_BINARY_RGBA32)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_BINARY_NATIVE_EA", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_BINARY_NATIVE_EA)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_BINARY_PGMPIPE", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_BINARY_PGMPIPE)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_BINARY_A52PIPE", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_BINARY_A52PIPE)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_EANAMES", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_EANAMES)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_DIGEST", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_DIGEST)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_XMLDOCSTRING", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_XMLDOCSTRING)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_PIXELCOUNT", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_PIXELCOUNT)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_WIDTH_PIXELS", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_WIDTH_PIXELS)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_HEIGHT_PIXELS", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_HEIGHT_PIXELS)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_PRIMARY_KEY", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_PRIMARY_KEY)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_PRIMARY_KEY_REAL", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_PRIMARY_KEY_REAL)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_PRIMARY_KEY_VIRTUAL", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_PRIMARY_KEY_VIRTUAL)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_FTX_RANK", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_FTX_RANK)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_FFILTER", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_FFILTER)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_STR_IP4ADDR", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_STR_IP4ADDR)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_IP4PORT", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_IP4PORT)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_DISTINGUISHED_PERSON", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_DISTINGUISHED_PERSON)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_CIPHER_NAME", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_CIPHER_NAME)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_CIPHER_VERSION", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_CIPHER_VERSION)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_CIPHER_NAME_LIST", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_CIPHER_NAME_LIST)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_CIPHER_BITS", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_CIPHER_BITS)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_STRINGLIST", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_STRINGLIST)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_URLLIST", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_URLLIST)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_UNIXEPOCH_STRING", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_UNIXEPOCH_STRING)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_INTLIST", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_INTLIST)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_EXIF_VERSION", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_EXIF_VERSION)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_EXIF_USER_COMMENT", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_EXIF_USER_COMMENT)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_EXIF_COPYRIGHT", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_EXIF_COPYRIGHT)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_EXIF_FLASH", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_EXIF_FLASH)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_EXIF_EXPOSURE_PROGRAM", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_EXIF_EXPOSURE_PROGRAM)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_UNIT_NAME_LENGTH", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_UNIT_NAME_LENGTH)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_EXIF_DATETIME_STRING", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_EXIF_DATETIME_STRING)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_ENUMERATED_STRING", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_ENUMERATED_STRING)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_EXIF_SENSING_METHOD", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_EXIF_SENSING_METHOD)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_EXIF_ORIENTATION", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_EXIF_ORIENTATION)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_EXIF_METERING_MODE", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_EXIF_METERING_MODE)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_EXIF_YCBCR_POSITIONING", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_EXIF_YCBCR_POSITIONING)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_EXIF_COMPRESSION", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_EXIF_COMPRESSION)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_EXIF_LIGHT_SOURCE", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_EXIF_LIGHT_SOURCE)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_MODE_STRING_T", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_MODE_STRING_T)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_LATLONG", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_LATLONG)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_LATITUDE", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_LATITUDE)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_LONGITUDE", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_LONGITUDE)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_XLIST", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_XLIST)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_UINT64", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_UINT64)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXD_INT64", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXD_INT64)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXDC_READONLY", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXDC_READONLY)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXDC_IS_GENERATED", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXDC_IS_GENERATED)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FXDC_IS_STATELESS", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::FXDC_IS_STATELESS)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "RESOLVE_CLOSEST", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::RESOLVE_CLOSEST)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "RESOLVE_PARENT", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::RESOLVE_PARENT)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "RESOLVE_EXACT", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::RESOLVE_EXACT)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "ENABLE_ATTRIBUTE_RESOLUTION", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::ENABLE_ATTRIBUTE_RESOLUTION)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:/usr/share/swig/2.0.4/perl5/perltypemaps.swg,65,%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "RESOLVEEX_UNROLL_LINKS", TRUE | 0x2 | GV_ADDMULTI);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(Ferris::RESOLVEEX_UNROLL_LINKS)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__DesktopFileKeyNotFound, (void*) "libferrisperl::DesktopFileKeyNotFound");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__ImplicitIteratorUpdateLock, (void*) "libferrisperl::ImplicitIteratorUpdateLock");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__ContextIterator, (void*) "libferrisperl::ContextIterator");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__CacheManager, (void*) "libferrisperl::CacheManager");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__ContextCollection, (void*) "libferrisperl::ContextCollection");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__MutableCollectionEvents, (void*) "libferrisperl::MutableCollectionEvents");
  SWIG_TypeClientData(SWIGTYPE_p_Ferris__Util__SingleShot, (void*) "libferrisperl::SingleShot");
  ST(0) = &PL_sv_yes;
  XSRETURN(1);
}

